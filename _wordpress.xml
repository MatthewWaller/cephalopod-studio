<?xml version="1.0" encoding="UTF-8"?>
<rss xmlns:excerpt="http://wordpress.org/export/1.2/excerpt/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:wfw="http://wellformedweb.org/CommentAPI/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:wp="http://wordpress.org/export/1.2/">
  <channel>
    <title>&#x1f419; Cephalopod Studio</title>
    <link>https://www.cephalopod.studio</link>
    <pubDate>Fri, 08 Jan 2021 14:40:13 +0000</pubDate>
    <description />
    <language>en-US</language>
    <wp:wxr_version>1.2</wp:wxr_version>
    <wp:author>
      <wp:author_id>193294447</wp:author_id>
      <wp:author_login>waller.matthew@gmail.com</wp:author_login>
      <wp:author_email>waller.matthew@gmail.com</wp:author_email>
      <wp:author_display_name><![CDATA[Matthew Waller]]></wp:author_display_name>
      <wp:author_first_name><![CDATA[Matthew]]></wp:author_first_name>
      <wp:author_last_name><![CDATA[Waller]]></wp:author_last_name>
    </wp:author>
    <wp:category>
      <wp:cat_name><![CDATA[null - null]]></wp:cat_name>
      <wp:category_nicename>null-null</wp:category_nicename>
      <wp:category_parent />
    </wp:category>
    <item>
      <title>Neural Networks from Scratch: A Gentle-Yet-Thorough Explanation with Swift, SwiftUI &amp;amp; Charts (+ a Surprise at the End)</title>
      <link>/blog/a-casual-yet-thorough-amp-hands-on-explanation-of-neural-networks-with-swift-swiftui-and-charts</link>
      <content:encoded><![CDATA[<div class="sqs-html-content">
  <p class="" style="white-space:pre-wrap;">Let’s take a moment to slow down from bullet train speed of neural nets in Stable Diffusion, Midjourney, and Dalle-2 churning out art, and the neural nets from the ChatGPT Bing-ularity.</p><p class="" style="white-space:pre-wrap;">My day job is in fact Fusion Energy Machine Learning Tech Lead. (I have the best job, working with the folks at <a href="https://sapientai.io">sapientai.io</a>)</p><p class="" style="white-space:pre-wrap;">Let’s figure out how this machine learning stuff works at a very basic level. How do these systems learn? What, exactly, step-by-step, is going on inside of them? It can help parse out what is happening in the hype.</p><p class="" style="white-space:pre-wrap;">So for this post, we’ll take a look at some of the very basics, starting with the humble neural network.</p><p class="" style="white-space:pre-wrap;">We’ll come up with a neural network made from scratch that can predict home prices from a dataset we’ll custom create and we’ll do it with the Swift programming language, coding the whole thing in Swift Playgrounds.</p><p class="" style="white-space:pre-wrap;"><a href="https://wattmaller1.gumroad.com/l/pxpxx">You can follow along in the code here</a> if you want to download the end-result. (Although that will also give away the surprise at the end of the blogpost).</p><p class="" style="white-space:pre-wrap;">I’ll explain the math and even explain a bunch of calculus basics for folks who have never learned, or have forgotten calculus. So kick back and relax as we take this riverboat tour of modern AI.</p><p class="" style="white-space:pre-wrap;"><strong>The Neural Network</strong></p><p class="" style="white-space:pre-wrap;">These things have been around in some form since the 1940s. They sort of mimic the idea of neurons in the brain, where connections in a vast network get stronger and learn things. Specifically, a neuron has three main parts (<a href="https://qbi.uq.edu.au/brain/brain-anatomy/what-neuron">https://qbi.uq.edu.au/brain/brain-anatomy/what-neuron</a>) dendrites that are like tree branches, an axon that are like tree roots, and a cell body (also called a soma) that is like the tree trunk. The dendrites receive input. The axon sends output. And there is something in the neuron that decides how much or how exactly to send that action.</p>
</div>













































  

    
  
    <div
        class="
          image-block-outer-wrapper
          layout-caption-overlay
          design-layout-inline
          combination-animation-site-default
          individual-animation-site-default
          individual-text-animation-site-default
        "
        data-test="image-block-inline-outer-wrapper"
    >

      

      
        <figure
            class="
              sqs-block-image-figure
              intrinsic
            "
            style="max-width:1920px;"
        >
          
        
        

        
          
            
          <div
              
              
              class="image-block-wrapper"
              data-animation-role="image"
              
  

          >
            <div class="sqs-image-shape-container-element
              
          
        
              has-aspect-ratio
            " style="
                position: relative;
                
                  padding-bottom:64.47916412353516%;
                
                overflow: hidden;-webkit-mask-image: -webkit-radial-gradient(white, black);
              "
              >
                
                  
                  
                  
                  
                  
                  
                  <img data-stretch="false" src="https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/282e432e-e387-424a-9bb0-0a8926e3f885/5DC1A9EB-97E1-482C-88BD-95F2736332EC.png" data-image="https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/282e432e-e387-424a-9bb0-0a8926e3f885/5DC1A9EB-97E1-482C-88BD-95F2736332EC.png" data-image-dimensions="1920x1238" data-image-focal-point="0.5,0.5" alt="" data-load="false" src="https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/282e432e-e387-424a-9bb0-0a8926e3f885/5DC1A9EB-97E1-482C-88BD-95F2736332EC.png" width="1920" height="1238" alt="" sizes="100vw" style="display:block;object-fit: cover; width: 100%; height: 100%; object-position: 50% 50%" srcset="https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/282e432e-e387-424a-9bb0-0a8926e3f885/5DC1A9EB-97E1-482C-88BD-95F2736332EC.png?format=100w 100w, https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/282e432e-e387-424a-9bb0-0a8926e3f885/5DC1A9EB-97E1-482C-88BD-95F2736332EC.png?format=300w 300w, https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/282e432e-e387-424a-9bb0-0a8926e3f885/5DC1A9EB-97E1-482C-88BD-95F2736332EC.png?format=500w 500w, https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/282e432e-e387-424a-9bb0-0a8926e3f885/5DC1A9EB-97E1-482C-88BD-95F2736332EC.png?format=750w 750w, https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/282e432e-e387-424a-9bb0-0a8926e3f885/5DC1A9EB-97E1-482C-88BD-95F2736332EC.png?format=1000w 1000w, https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/282e432e-e387-424a-9bb0-0a8926e3f885/5DC1A9EB-97E1-482C-88BD-95F2736332EC.png?format=1500w 1500w, https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/282e432e-e387-424a-9bb0-0a8926e3f885/5DC1A9EB-97E1-482C-88BD-95F2736332EC.png?format=2500w 2500w" loading="lazy" decoding="async" data-loader="sqs">
                
            </div>
          </div>
        
          
        

        
          
          <figcaption class="image-caption-wrapper">
            <div class="image-caption"><p class="" style="white-space:pre-wrap;">A neuron, By BruceBlaus - Own work, CC BY 3.0, https://commons.wikimedia.org/w/index.php?curid=28761830</p></div>
          </figcaption>
        
      
        </figure>
      

    </div>
  


  




<div class="sqs-html-content">
  <p class="" style="white-space:pre-wrap;">A neural network works off of this idea. We use mathematical formulas in a layer of neurons we’ll make that tell us what to do with input we receive, and how much and what kind of output to send forward to another layer of neurons. </p><p class="" style="white-space:pre-wrap;">Each neuron has weights corresponding to their output. And those weights are adjusted when training the network, causing the network to “learn”. This idea of “deep learning” just means that our network is multiple layers, in particular that there is an inner “hidden” layer. This is really helpful, it turns out, to learn really complicated patterns. Other machine learning techniques like linear regression can’t do that, because linear regression, for instance, just divides data with straight lines when you graph them out.</p><p class="" style="white-space:pre-wrap;">Below you’ll see an image of a neural network. The arrows correspond to the weights. So the inputs would get multiplied by the weights, adjust a bit by a special activation function, and then passed on the next layer, all the way up the chain!</p>
</div>













































  

    
  
    <div
        class="
          image-block-outer-wrapper
          layout-caption-below
          design-layout-inline
          combination-animation-site-default
          individual-animation-site-default
          individual-text-animation-site-default
        "
        data-test="image-block-inline-outer-wrapper"
    >

      

      
        <figure
            class="
              sqs-block-image-figure
              intrinsic
            "
            style="max-width:300px;"
        >
          
        
        

        
          
            
          <div
              
              
              class="image-block-wrapper"
              data-animation-role="image"
              
  

          >
            <div class="sqs-image-shape-container-element
              
          
        
              has-aspect-ratio
            " style="
                position: relative;
                
                  padding-bottom:116.66666412353516%;
                
                overflow: hidden;-webkit-mask-image: -webkit-radial-gradient(white, black);
              "
              >
                
                  
                  
                  
                  
                  
                  
                  <img data-stretch="false" src="https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/570544cb-75f8-4bc5-88d8-8dffcd76e247/Screenshot+2023-03-01+at+12.41.37+PM.png" data-image="https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/570544cb-75f8-4bc5-88d8-8dffcd76e247/Screenshot+2023-03-01+at+12.41.37+PM.png" data-image-dimensions="300x350" data-image-focal-point="0.5,0.5" alt="" data-load="false" src="https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/570544cb-75f8-4bc5-88d8-8dffcd76e247/Screenshot+2023-03-01+at+12.41.37+PM.png" width="300" height="350" alt="" sizes="100vw" style="display:block;object-fit: cover; width: 100%; height: 100%; object-position: 50% 50%" srcset="https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/570544cb-75f8-4bc5-88d8-8dffcd76e247/Screenshot+2023-03-01+at+12.41.37+PM.png?format=100w 100w, https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/570544cb-75f8-4bc5-88d8-8dffcd76e247/Screenshot+2023-03-01+at+12.41.37+PM.png?format=300w 300w, https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/570544cb-75f8-4bc5-88d8-8dffcd76e247/Screenshot+2023-03-01+at+12.41.37+PM.png?format=500w 500w, https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/570544cb-75f8-4bc5-88d8-8dffcd76e247/Screenshot+2023-03-01+at+12.41.37+PM.png?format=750w 750w, https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/570544cb-75f8-4bc5-88d8-8dffcd76e247/Screenshot+2023-03-01+at+12.41.37+PM.png?format=1000w 1000w, https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/570544cb-75f8-4bc5-88d8-8dffcd76e247/Screenshot+2023-03-01+at+12.41.37+PM.png?format=1500w 1500w, https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/570544cb-75f8-4bc5-88d8-8dffcd76e247/Screenshot+2023-03-01+at+12.41.37+PM.png?format=2500w 2500w" loading="lazy" decoding="async" data-loader="sqs">
                
            </div>
          </div>
        
          
        

        
          
          <figcaption class="image-caption-wrapper">
            <div class="image-caption"><p class="" style="white-space:pre-wrap;">By Glosser.ca - Own work, Derivative of File:Artificial neural network.svg, CC BY-SA 3.0, https://commons.wikimedia.org/w/index.php?curid=24913461</p></div>
          </figcaption>
        
      
        </figure>
      

    </div>
  


  




<div class="sqs-html-content">
  <p class="" style="white-space:pre-wrap;">At a high level on the programming of neural nets, there are three main steps.</p><ol data-rte-list="default"><li><p class="" style="white-space:pre-wrap;">The forward propagation, where all of the neurons take an input and send signal all the way up all the layers to the end of the network.</p></li><li><p class="" style="white-space:pre-wrap;">The loss or cost function we use will say how wrong the final output was from the value we’re targeting. We get our error.</p></li><li><p class="" style="white-space:pre-wrap;">And the backward propagation uses calculus to send the error back through all the layers of neurons to tell them how wrong they were at their particular contribution, and to adjust themselves accordingly.</p></li></ol><p class="" style="white-space:pre-wrap;">In training, this going forward and backward happens hundreds of thousands, millions (pretty sure billions too) of times until the neural net knows how to take some input, send it forward through all the layers, and give a correct output.</p><p class="" style="white-space:pre-wrap;">This is all very theoretical though, so let’s start coding up an example.</p><p class="" style="white-space:pre-wrap;">We’re going to make a neural net that predicts house prices from features of the house. You tell me how big your house is, the quality of the neighborhood, and so on, and our net will tell you how much your house should go for.</p><h3 style="white-space:pre-wrap;">Making the Housing Data</h3><p class="" style="white-space:pre-wrap;">First off, let’s make some houses! We’re not going to use a real dataset, because we want to control for sure that there is a meaningful pattern for our net to discover.</p><p class="" style="white-space:pre-wrap;">First we’ll make the HomeInfo struct that holds the features of our houses and the value.</p>
</div>



<pre><code>struct HomeInfo {
    let neighborhoodQuality: Float
    let numberOfRooms: Float
    let squareFootage: Float
    var value: Float

    var trainingData: (features: [Float], targets: [Float]) {
        let features = [neighborhoodQuality, numberOfRooms, squareFootage]
        let target = [value]

        return (features: features, targets: target)
    }
}</code></pre>


<div class="sqs-html-content">
  <p class="" style="white-space:pre-wrap;">The trainingData property is just a convenience for us later on. It will give us the features, and the value in a convenient format.</p><p class="" style="white-space:pre-wrap;">So, first things first, I’m going to make the secret formula that determines how much a house is worth in our fictional town. And I’ll make it part of a class called the HouseBuilder.</p>
</div>



<pre><code>class HouseBuilder {
    static func secretFormula(neighborhoodQuality: Float,
                          numberOfRooms: Float,
                          squareFootage: Float) -&gt; Float {

        let neighborhoodQualityCoefficient: Float = 0.25
        let numberOfRoomsCoefficient: Float = 0.35
        let squareFootageCoefficient: Float = 0.4

        var value: Float = 0
        value += neighborhoodQualityCoefficient * neighborhoodQuality
        value += numberOfRoomsCoefficient * numberOfRooms
        value += squareFootageCoefficient * squareFootage

        return value
    }      
}</code></pre>


<div class="sqs-html-content">
  <p class="" style="white-space:pre-wrap;">Here we see that the neighborhood quality makes up 25 percent of the value, square footage makes up 30 percent of the value, and so on.</p><p class="" style="white-space:pre-wrap;">All of our values will be between 0 and 1. This kind of normalization is common in deep learning, in part because the internals of neural networks eventually turn things to small values anyway.</p><p class="" style="white-space:pre-wrap;">This is the formula that we want our neural network to learn by only looking at the data. It won’t look the same because it will be expressed in weights and not in code, but it should give us the results we need.</p><p class="" style="white-space:pre-wrap;">Next, we’ll add a function to make some a random house, with values in our desired ranges.</p>
</div>



<pre><code>static func makeRandomHouse() -&gt; HomeInfo {
        // No house too big! Just between 500 square feet and 10,000 square feet.
        let squareFootage = Float.random(in: 500 ..&lt; 10000)

        // This is where we do the normalizing by scaling between 0 and 1.
        let normalizedSquareFootage = (squareFootage - 500.0) / (10000.0 - 500.0)

        // This is a made up number clearly, just as an example.
        let neighborhoodQuality = Float.random(in: 0 ..&lt; 1)

        let numberOfRooms = Int.random(in: 1 ..&lt; 10)

        let normalizedRooms = Float(numberOfRooms - 1) / Float(10 - 1)

        let homeValue = secretFormula(neighborhoodQuality: neighborhoodQuality, 
                                      numberOfRooms: normalizedRooms, 
                                      squareFootage: normalizedSquareFootage)

        let home = HomeInfo(neighborhoodQuality: neighborhoodQuality, 
                            numberOfRooms: normalizedRooms, 
                            squareFootage: normalizedSquareFootage,
                            value: homeValue)
        return home
    }</code></pre>


<div class="sqs-html-content">
  <p class="" style="white-space:pre-wrap;">Just to make our home value look realistic and not just a value between 1 and 0, we’ll multiply by a million and then display the value with a number formatter. So, no houses worth more than a million in our town (that’s the sound of San Francisco laughing at me).</p>
</div>



<pre><code>static let priceFormatter: NumberFormatter = {
    let currencyFormatter = NumberFormatter()
    currencyFormatter.usesGroupingSeparator = true
    currencyFormatter.numberStyle = .currency
    currencyFormatter.locale = Locale.current
    currencyFormatter.maximumSignificantDigits = 4
    return currencyFormatter
}()

func formattedPriceValue(value: Float) -&gt; String {
    let priceFloat = value * 1000000
    let nsNumber = NSNumber(value: priceFloat)
    let priceString = HouseBuilder.priceFormatter.string(from: nsNumber) ?? ""
    return priceString
}</code></pre>


<div class="sqs-html-content">
  <p class="" style="white-space:pre-wrap;">Next we’ll initialize a list of homes, and we’ll add a @Published property for our homes to use in our SwiftUI views. And that will complete the HouseBuilder!</p>
</div>



<pre><code>class HouseBuilder: ObservableObject {
    @Published var homes: [HomeInfo] = []

    init() {
        initializeHomes()
    }

    func initializeHomes() {
        let numberOfHomes: Int = 500
        var results: [HomeInfo] = []
        for _ in 0 ..&lt; numberOfHomes {
            let randomHome = HouseBuilder.makeRandomHouse()
            results.append(randomHome)
        }

        homes = results
    }

    ... [Other functions]
}</code></pre>


<div class="sqs-html-content">
  <p class="" style="white-space:pre-wrap;">Awesome. That will give us the data. Next up: learning some basics about calculus to understand how our neural net will learn.</p><h3 style="white-space:pre-wrap;">Understanding the Math for Beginners</h3><p class="" style="white-space:pre-wrap;">Alright, we’re going to learn some calculus, starting all the way back with how to plot a line using a function. If you already know calculus, you are free to skip ahead to the next section. In practice, even when you’re coding up your own neural network architectures and training models, you don’t often calculate derivates for functions, unless you’re pioneering in new methods of machine learning, for research and academic purposes. So even when you bust out PyTorch and Tensorflow and all those libraries for some proper training down the line, you won’t be taking what are called derivatives very much, for instance.</p><p class="" style="white-space:pre-wrap;">However, it’s still an excellent idea to understand in general what is happening internally for those advanced cases and the days you want to pioneer yourself!</p><p class="" style="white-space:pre-wrap;">So, again, let’s start at graphing functions.</p><p class="" style="white-space:pre-wrap;">A lot of lines are defined at y = Mx + b. So that could look like y = 4x + 5, or y = 2x +9.</p><p class="" style="white-space:pre-wrap;">Take a line that is defined as y = 2x. (You could also write it as y = 2x + 0).</p><p class="" style="white-space:pre-wrap;">To graph or plot it out, you take a value for x from the x axis, plug it in, and that give you your value for the y axis. So for x = 2 in this case I get 4, x = 5 I get 10, and so on.</p><p class="" style="white-space:pre-wrap;">When you graph the function y = 2x with as many points as you can, it looks like this:</p>
</div>













































  

    
  
    <div
        class="
          image-block-outer-wrapper
          layout-caption-below
          design-layout-inline
          combination-animation-site-default
          individual-animation-site-default
          individual-text-animation-site-default
        "
        data-test="image-block-inline-outer-wrapper"
    >

      

      
        <figure
            class="
              sqs-block-image-figure
              intrinsic
            "
            style="max-width:300px;"
        >
          
        
        

        
          
            
          <div
              
              
              class="image-block-wrapper"
              data-animation-role="image"
              
  

          >
            <div class="sqs-image-shape-container-element
              
          
        
              has-aspect-ratio
            " style="
                position: relative;
                
                  padding-bottom:159.33334350585938%;
                
                overflow: hidden;-webkit-mask-image: -webkit-radial-gradient(white, black);
              "
              >
                
                  
                  
                  
                  
                  
                  
                  <img data-stretch="false" src="https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/5f9a71b3-d5e0-4e5e-be85-e68d2d616434/Screenshot+2023-03-01+at+12.26.10+PM.png" data-image="https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/5f9a71b3-d5e0-4e5e-be85-e68d2d616434/Screenshot+2023-03-01+at+12.26.10+PM.png" data-image-dimensions="300x478" data-image-focal-point="0.5,0.5" alt="" data-load="false" src="https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/5f9a71b3-d5e0-4e5e-be85-e68d2d616434/Screenshot+2023-03-01+at+12.26.10+PM.png" width="300" height="478" alt="" sizes="100vw" style="display:block;object-fit: cover; width: 100%; height: 100%; object-position: 50% 50%" srcset="https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/5f9a71b3-d5e0-4e5e-be85-e68d2d616434/Screenshot+2023-03-01+at+12.26.10+PM.png?format=100w 100w, https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/5f9a71b3-d5e0-4e5e-be85-e68d2d616434/Screenshot+2023-03-01+at+12.26.10+PM.png?format=300w 300w, https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/5f9a71b3-d5e0-4e5e-be85-e68d2d616434/Screenshot+2023-03-01+at+12.26.10+PM.png?format=500w 500w, https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/5f9a71b3-d5e0-4e5e-be85-e68d2d616434/Screenshot+2023-03-01+at+12.26.10+PM.png?format=750w 750w, https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/5f9a71b3-d5e0-4e5e-be85-e68d2d616434/Screenshot+2023-03-01+at+12.26.10+PM.png?format=1000w 1000w, https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/5f9a71b3-d5e0-4e5e-be85-e68d2d616434/Screenshot+2023-03-01+at+12.26.10+PM.png?format=1500w 1500w, https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/5f9a71b3-d5e0-4e5e-be85-e68d2d616434/Screenshot+2023-03-01+at+12.26.10+PM.png?format=2500w 2500w" loading="lazy" decoding="async" data-loader="sqs">
                
            </div>
          </div>
        
          
        

        
          
          <figcaption class="image-caption-wrapper">
            <div class="image-caption"><p class="" style="white-space:pre-wrap;">Graphed out y = 2x function.</p></div>
          </figcaption>
        
      
        </figure>
      

    </div>
  


  




<div class="sqs-html-content">
  <p class="" style="white-space:pre-wrap;"><br>Now calculus is all about slopes, rates of change, so let’s look at that next.</p><h3 style="white-space:pre-wrap;"><strong>What is a slope?</strong></h3><p class="" style="white-space:pre-wrap;">The slope essentially means the steepness of the line. The way we find it for this line is to take two points on the line and subtract the second y value from the first y value, and then take that and divide it by the second x value subtracted from the first x value.</p><p class="" style="white-space:pre-wrap;">So for this line, let’s look at two points. We have a point at (x = 1, y = 2), or (1, 2), and we have a point at (x = 2, y = 4), or (2, 4)</p><p class="" style="white-space:pre-wrap;">So our formula for slope is (y2nd - y1st / x2nd - x1st), which for us mean (4 -2 / 2–1), which is (2 / 1) which is 2. So our slope for the line between those two points is 2. And because this is a straight line, no matter what two points you choose on the line, the slope will always be 2.</p><p class="" style="white-space:pre-wrap;">And 2 is a positive number, so our slope is positive.</p><p class="" style="white-space:pre-wrap;">Let’s look at a negative slope really quickly.</p>
</div>













































  

    
  
    <div
        class="
          image-block-outer-wrapper
          layout-caption-below
          design-layout-inline
          combination-animation-site-default
          individual-animation-site-default
          individual-text-animation-site-default
        "
        data-test="image-block-inline-outer-wrapper"
    >

      

      
        <figure
            class="
              sqs-block-image-figure
              intrinsic
            "
            style="max-width:300px;"
        >
          
        
        

        
          
            
          <div
              
              
              class="image-block-wrapper"
              data-animation-role="image"
              
  

          >
            <div class="sqs-image-shape-container-element
              
          
        
              has-aspect-ratio
            " style="
                position: relative;
                
                  padding-bottom:118.33332824707031%;
                
                overflow: hidden;-webkit-mask-image: -webkit-radial-gradient(white, black);
              "
              >
                
                  
                  
                  
                  
                  
                  
                  <img data-stretch="false" src="https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/5ea50246-3a7d-4a89-b13c-e31ba0502254/Screenshot+2023-03-01+at+9.06.20+AM.png" data-image="https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/5ea50246-3a7d-4a89-b13c-e31ba0502254/Screenshot+2023-03-01+at+9.06.20+AM.png" data-image-dimensions="300x355" data-image-focal-point="0.5,0.5" alt="" data-load="false" src="https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/5ea50246-3a7d-4a89-b13c-e31ba0502254/Screenshot+2023-03-01+at+9.06.20+AM.png" width="300" height="355" alt="" sizes="100vw" style="display:block;object-fit: cover; width: 100%; height: 100%; object-position: 50% 50%" srcset="https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/5ea50246-3a7d-4a89-b13c-e31ba0502254/Screenshot+2023-03-01+at+9.06.20+AM.png?format=100w 100w, https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/5ea50246-3a7d-4a89-b13c-e31ba0502254/Screenshot+2023-03-01+at+9.06.20+AM.png?format=300w 300w, https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/5ea50246-3a7d-4a89-b13c-e31ba0502254/Screenshot+2023-03-01+at+9.06.20+AM.png?format=500w 500w, https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/5ea50246-3a7d-4a89-b13c-e31ba0502254/Screenshot+2023-03-01+at+9.06.20+AM.png?format=750w 750w, https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/5ea50246-3a7d-4a89-b13c-e31ba0502254/Screenshot+2023-03-01+at+9.06.20+AM.png?format=1000w 1000w, https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/5ea50246-3a7d-4a89-b13c-e31ba0502254/Screenshot+2023-03-01+at+9.06.20+AM.png?format=1500w 1500w, https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/5ea50246-3a7d-4a89-b13c-e31ba0502254/Screenshot+2023-03-01+at+9.06.20+AM.png?format=2500w 2500w" loading="lazy" decoding="async" data-loader="sqs">
                
            </div>
          </div>
        
          
        

        
          
          <figcaption class="image-caption-wrapper">
            <div class="image-caption"><p class="" style="white-space:pre-wrap;">The graph of y = -2x</p></div>
          </figcaption>
        
      
        </figure>
      

    </div>
  


  




<div class="sqs-html-content">
  <p class="" style="white-space:pre-wrap;"><br>So we can see that this line slopes downward from left to right. And there are two points on it. There is (-2, 4) and there is (2, -4), which means the slope</p><p class="" style="white-space:pre-wrap;">= ((-4 - 4) / 2 - (-2))</p><p class="" style="white-space:pre-wrap;">= (-8/ 4)</p><p class="" style="white-space:pre-wrap;">= -2</p><p class="" style="white-space:pre-wrap;">So our slope is -2</p><p class="" style="white-space:pre-wrap;">Basically if you see a straight line going down from left to right, it’s negative, and if you see a straight line going up from left to right, it’s positive, in a standard coordinate system.</p><p class="" style="white-space:pre-wrap;">So that’s what a slope looks like on a straight line.</p><p class="" style="white-space:pre-wrap;">What about on a curved line?</p><p class="" style="white-space:pre-wrap;">Here we see the graph of the line y = x².</p>
</div>













































  

    
  
    <div
        class="
          image-block-outer-wrapper
          layout-caption-below
          design-layout-inline
          combination-animation-site-default
          individual-animation-site-default
          individual-text-animation-site-default
        "
        data-test="image-block-inline-outer-wrapper"
    >

      

      
        <figure
            class="
              sqs-block-image-figure
              intrinsic
            "
            style="max-width:300px;"
        >
          
        
        

        
          
            
          <div
              
              
              class="image-block-wrapper"
              data-animation-role="image"
              
  

          >
            <div class="sqs-image-shape-container-element
              
          
        
              has-aspect-ratio
            " style="
                position: relative;
                
                  padding-bottom:92.66666412353516%;
                
                overflow: hidden;-webkit-mask-image: -webkit-radial-gradient(white, black);
              "
              >
                
                  
                  
                  
                  
                  
                  
                  <img data-stretch="false" src="https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/6ae3e320-7160-42ef-8b89-9cb72f01c70c/Screenshot+2023-03-01+at+9.09.15+AM.png" data-image="https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/6ae3e320-7160-42ef-8b89-9cb72f01c70c/Screenshot+2023-03-01+at+9.09.15+AM.png" data-image-dimensions="300x278" data-image-focal-point="0.5,0.5" alt="" data-load="false" src="https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/6ae3e320-7160-42ef-8b89-9cb72f01c70c/Screenshot+2023-03-01+at+9.09.15+AM.png" width="300" height="278" alt="" sizes="100vw" style="display:block;object-fit: cover; width: 100%; height: 100%; object-position: 50% 50%" srcset="https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/6ae3e320-7160-42ef-8b89-9cb72f01c70c/Screenshot+2023-03-01+at+9.09.15+AM.png?format=100w 100w, https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/6ae3e320-7160-42ef-8b89-9cb72f01c70c/Screenshot+2023-03-01+at+9.09.15+AM.png?format=300w 300w, https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/6ae3e320-7160-42ef-8b89-9cb72f01c70c/Screenshot+2023-03-01+at+9.09.15+AM.png?format=500w 500w, https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/6ae3e320-7160-42ef-8b89-9cb72f01c70c/Screenshot+2023-03-01+at+9.09.15+AM.png?format=750w 750w, https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/6ae3e320-7160-42ef-8b89-9cb72f01c70c/Screenshot+2023-03-01+at+9.09.15+AM.png?format=1000w 1000w, https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/6ae3e320-7160-42ef-8b89-9cb72f01c70c/Screenshot+2023-03-01+at+9.09.15+AM.png?format=1500w 1500w, https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/6ae3e320-7160-42ef-8b89-9cb72f01c70c/Screenshot+2023-03-01+at+9.09.15+AM.png?format=2500w 2500w" loading="lazy" decoding="async" data-loader="sqs">
                
            </div>
          </div>
        
          
        

        
          
          <figcaption class="image-caption-wrapper">
            <div class="image-caption"><p class="" style="white-space:pre-wrap;">A graph of y = x²</p></div>
          </figcaption>
        
      
        </figure>
      

    </div>
  


  




<div class="sqs-html-content">
  <p class="" style="white-space:pre-wrap;">Let’s take two points on this line and find the slope.</p><p class="" style="white-space:pre-wrap;">Let’s look at (-1, 1) and (-2, 4).</p>
</div>













































  

    
  
    <div
        class="
          image-block-outer-wrapper
          layout-caption-below
          design-layout-inline
          combination-animation-site-default
          individual-animation-site-default
          individual-text-animation-site-default
        "
        data-test="image-block-inline-outer-wrapper"
    >

      

      
        <figure
            class="
              sqs-block-image-figure
              intrinsic
            "
            style="max-width:300px;"
        >
          
        
        

        
          
            
          <div
              
              
              class="image-block-wrapper"
              data-animation-role="image"
              
  

          >
            <div class="sqs-image-shape-container-element
              
          
        
              has-aspect-ratio
            " style="
                position: relative;
                
                  padding-bottom:93.33333587646484%;
                
                overflow: hidden;-webkit-mask-image: -webkit-radial-gradient(white, black);
              "
              >
                
                  
                  
                  
                  
                  
                  
                  <img data-stretch="false" src="https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/41e6a00b-9783-4b7f-87d8-510ed121cbf9/Screenshot+2023-03-01+at+9.10.43+AM.png" data-image="https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/41e6a00b-9783-4b7f-87d8-510ed121cbf9/Screenshot+2023-03-01+at+9.10.43+AM.png" data-image-dimensions="300x280" data-image-focal-point="0.5,0.5" alt="" data-load="false" src="https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/41e6a00b-9783-4b7f-87d8-510ed121cbf9/Screenshot+2023-03-01+at+9.10.43+AM.png" width="300" height="280" alt="" sizes="100vw" style="display:block;object-fit: cover; width: 100%; height: 100%; object-position: 50% 50%" srcset="https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/41e6a00b-9783-4b7f-87d8-510ed121cbf9/Screenshot+2023-03-01+at+9.10.43+AM.png?format=100w 100w, https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/41e6a00b-9783-4b7f-87d8-510ed121cbf9/Screenshot+2023-03-01+at+9.10.43+AM.png?format=300w 300w, https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/41e6a00b-9783-4b7f-87d8-510ed121cbf9/Screenshot+2023-03-01+at+9.10.43+AM.png?format=500w 500w, https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/41e6a00b-9783-4b7f-87d8-510ed121cbf9/Screenshot+2023-03-01+at+9.10.43+AM.png?format=750w 750w, https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/41e6a00b-9783-4b7f-87d8-510ed121cbf9/Screenshot+2023-03-01+at+9.10.43+AM.png?format=1000w 1000w, https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/41e6a00b-9783-4b7f-87d8-510ed121cbf9/Screenshot+2023-03-01+at+9.10.43+AM.png?format=1500w 1500w, https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/41e6a00b-9783-4b7f-87d8-510ed121cbf9/Screenshot+2023-03-01+at+9.10.43+AM.png?format=2500w 2500w" loading="lazy" decoding="async" data-loader="sqs">
                
            </div>
          </div>
        
          
        

        
          
          <figcaption class="image-caption-wrapper">
            <div class="image-caption"><p class="" style="white-space:pre-wrap;">Examining points to find the slope on the function.</p></div>
          </figcaption>
        
      
        </figure>
      

    </div>
  


  




<div class="sqs-html-content">
  <p class="" style="white-space:pre-wrap;">Using our formula, this slope equals -3</p><p class="" style="white-space:pre-wrap;">What about if those points got closer together though? Maybe we use (-1.25, 1.5625) and (-1.75, 3.0625). Then in our formula for slope, this becomes 1.5/0.5 = -3.<br><br></p>
</div>













































  

    
  
    <div
        class="
          image-block-outer-wrapper
          layout-caption-below
          design-layout-inline
          combination-animation-site-default
          individual-animation-site-default
          individual-text-animation-site-default
        "
        data-test="image-block-inline-outer-wrapper"
    >

      

      
        <figure
            class="
              sqs-block-image-figure
              intrinsic
            "
            style="max-width:300px;"
        >
          
        
        

        
          
            
          <div
              
              
              class="image-block-wrapper"
              data-animation-role="image"
              
  

          >
            <div class="sqs-image-shape-container-element
              
          
        
              has-aspect-ratio
            " style="
                position: relative;
                
                  padding-bottom:94.33333587646484%;
                
                overflow: hidden;-webkit-mask-image: -webkit-radial-gradient(white, black);
              "
              >
                
                  
                  
                  
                  
                  
                  
                  <img data-stretch="false" src="https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/1cc6fc42-a292-4e4a-bf86-c9bf34c8f0d3/Screenshot+2023-03-01+at+9.12.57+AM.png" data-image="https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/1cc6fc42-a292-4e4a-bf86-c9bf34c8f0d3/Screenshot+2023-03-01+at+9.12.57+AM.png" data-image-dimensions="300x283" data-image-focal-point="0.5,0.5" alt="" data-load="false" src="https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/1cc6fc42-a292-4e4a-bf86-c9bf34c8f0d3/Screenshot+2023-03-01+at+9.12.57+AM.png" width="300" height="283" alt="" sizes="100vw" style="display:block;object-fit: cover; width: 100%; height: 100%; object-position: 50% 50%" srcset="https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/1cc6fc42-a292-4e4a-bf86-c9bf34c8f0d3/Screenshot+2023-03-01+at+9.12.57+AM.png?format=100w 100w, https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/1cc6fc42-a292-4e4a-bf86-c9bf34c8f0d3/Screenshot+2023-03-01+at+9.12.57+AM.png?format=300w 300w, https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/1cc6fc42-a292-4e4a-bf86-c9bf34c8f0d3/Screenshot+2023-03-01+at+9.12.57+AM.png?format=500w 500w, https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/1cc6fc42-a292-4e4a-bf86-c9bf34c8f0d3/Screenshot+2023-03-01+at+9.12.57+AM.png?format=750w 750w, https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/1cc6fc42-a292-4e4a-bf86-c9bf34c8f0d3/Screenshot+2023-03-01+at+9.12.57+AM.png?format=1000w 1000w, https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/1cc6fc42-a292-4e4a-bf86-c9bf34c8f0d3/Screenshot+2023-03-01+at+9.12.57+AM.png?format=1500w 1500w, https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/1cc6fc42-a292-4e4a-bf86-c9bf34c8f0d3/Screenshot+2023-03-01+at+9.12.57+AM.png?format=2500w 2500w" loading="lazy" decoding="async" data-loader="sqs">
                
            </div>
          </div>
        
          
        

        
      
        </figure>
      

    </div>
  


  




<div class="sqs-html-content">
  <p class="" style="white-space:pre-wrap;">Interesting. As we slowly move the points toward each other, their slopes, in this case, stay at -3.</p><p class="" style="white-space:pre-wrap;">But what happens when those two points actually meet in the middle? What happens when the two points become one point?</p><p class="" style="white-space:pre-wrap;">This is also known as what happens to the slope when the limit approaches 0. When the distance between the points is zero, how do we calculate the slope? In our formula we needed two points, but if they meet in the middle, we only have one.</p><p class="" style="white-space:pre-wrap;">One way to do this is to imagine that the two points never quite meet in the middle, but get infinitely close. We say that the limit approaches 0 instead of actually becomes 0. That way we can imagine that we have two points that are super close to one another.</p><p class="" style="white-space:pre-wrap;">The way it looks when graphed is that the line sort of just shoots across the line like a bullet grazing a mound, or a stick placed against a curved wall.</p>
</div>













































  

    
  
    <div
        class="
          image-block-outer-wrapper
          layout-caption-below
          design-layout-inline
          combination-animation-site-default
          individual-animation-site-default
          individual-text-animation-site-default
        "
        data-test="image-block-inline-outer-wrapper"
    >

      

      
        <figure
            class="
              sqs-block-image-figure
              intrinsic
            "
            style="max-width:300px;"
        >
          
        
        

        
          
            
          <div
              
              
              class="image-block-wrapper"
              data-animation-role="image"
              
  

          >
            <div class="sqs-image-shape-container-element
              
          
        
              has-aspect-ratio
            " style="
                position: relative;
                
                  padding-bottom:94%;
                
                overflow: hidden;-webkit-mask-image: -webkit-radial-gradient(white, black);
              "
              >
                
                  
                  
                  
                  
                  
                  
                  <img data-stretch="false" src="https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/22b67e92-ef39-4960-aac7-16d1358d0c28/Screenshot+2023-03-01+at+9.15.12+AM.png" data-image="https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/22b67e92-ef39-4960-aac7-16d1358d0c28/Screenshot+2023-03-01+at+9.15.12+AM.png" data-image-dimensions="300x282" data-image-focal-point="0.5,0.5" alt="" data-load="false" src="https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/22b67e92-ef39-4960-aac7-16d1358d0c28/Screenshot+2023-03-01+at+9.15.12+AM.png" width="300" height="282" alt="" sizes="100vw" style="display:block;object-fit: cover; width: 100%; height: 100%; object-position: 50% 50%" srcset="https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/22b67e92-ef39-4960-aac7-16d1358d0c28/Screenshot+2023-03-01+at+9.15.12+AM.png?format=100w 100w, https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/22b67e92-ef39-4960-aac7-16d1358d0c28/Screenshot+2023-03-01+at+9.15.12+AM.png?format=300w 300w, https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/22b67e92-ef39-4960-aac7-16d1358d0c28/Screenshot+2023-03-01+at+9.15.12+AM.png?format=500w 500w, https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/22b67e92-ef39-4960-aac7-16d1358d0c28/Screenshot+2023-03-01+at+9.15.12+AM.png?format=750w 750w, https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/22b67e92-ef39-4960-aac7-16d1358d0c28/Screenshot+2023-03-01+at+9.15.12+AM.png?format=1000w 1000w, https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/22b67e92-ef39-4960-aac7-16d1358d0c28/Screenshot+2023-03-01+at+9.15.12+AM.png?format=1500w 1500w, https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/22b67e92-ef39-4960-aac7-16d1358d0c28/Screenshot+2023-03-01+at+9.15.12+AM.png?format=2500w 2500w" loading="lazy" decoding="async" data-loader="sqs">
                
            </div>
          </div>
        
          
        

        
      
        </figure>
      

    </div>
  


  




<div class="sqs-html-content">
  <p class="" style="white-space:pre-wrap;"><br>And that’s the slope at that point. Well, as the limit approaches 0.</p><p class="" style="white-space:pre-wrap;">So let’s look at a graph of several slopes on this line where the limit approaches 0.</p>
</div>













































  

    
  
    <div
        class="
          image-block-outer-wrapper
          layout-caption-below
          design-layout-inline
          combination-animation-site-default
          individual-animation-site-default
          individual-text-animation-site-default
        "
        data-test="image-block-inline-outer-wrapper"
    >

      

      
        <figure
            class="
              sqs-block-image-figure
              intrinsic
            "
            style="max-width:300px;"
        >
          
        
        

        
          
            
          <div
              
              
              class="image-block-wrapper"
              data-animation-role="image"
              
  

          >
            <div class="sqs-image-shape-container-element
              
          
        
              has-aspect-ratio
            " style="
                position: relative;
                
                  padding-bottom:93%;
                
                overflow: hidden;-webkit-mask-image: -webkit-radial-gradient(white, black);
              "
              >
                
                  
                  
                  
                  
                  
                  
                  <img data-stretch="false" src="https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/b48401b8-fff9-4881-aee8-ac05037b7ad9/Screenshot+2023-03-01+at+12.29.45+PM.png" data-image="https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/b48401b8-fff9-4881-aee8-ac05037b7ad9/Screenshot+2023-03-01+at+12.29.45+PM.png" data-image-dimensions="300x279" data-image-focal-point="0.5,0.5" alt="" data-load="false" src="https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/b48401b8-fff9-4881-aee8-ac05037b7ad9/Screenshot+2023-03-01+at+12.29.45+PM.png" width="300" height="279" alt="" sizes="100vw" style="display:block;object-fit: cover; width: 100%; height: 100%; object-position: 50% 50%" srcset="https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/b48401b8-fff9-4881-aee8-ac05037b7ad9/Screenshot+2023-03-01+at+12.29.45+PM.png?format=100w 100w, https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/b48401b8-fff9-4881-aee8-ac05037b7ad9/Screenshot+2023-03-01+at+12.29.45+PM.png?format=300w 300w, https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/b48401b8-fff9-4881-aee8-ac05037b7ad9/Screenshot+2023-03-01+at+12.29.45+PM.png?format=500w 500w, https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/b48401b8-fff9-4881-aee8-ac05037b7ad9/Screenshot+2023-03-01+at+12.29.45+PM.png?format=750w 750w, https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/b48401b8-fff9-4881-aee8-ac05037b7ad9/Screenshot+2023-03-01+at+12.29.45+PM.png?format=1000w 1000w, https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/b48401b8-fff9-4881-aee8-ac05037b7ad9/Screenshot+2023-03-01+at+12.29.45+PM.png?format=1500w 1500w, https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/b48401b8-fff9-4881-aee8-ac05037b7ad9/Screenshot+2023-03-01+at+12.29.45+PM.png?format=2500w 2500w" loading="lazy" decoding="async" data-loader="sqs">
                
            </div>
          </div>
        
          
        

        
      
        </figure>
      

    </div>
  


  




<div class="sqs-html-content">
  <p class="" style="white-space:pre-wrap;"><br>You can see that at some points, the slope is negative. At other points it’s positive. In fact, at 0, the slope is 0. It’s just a straight across flat line.</p><p class="" style="white-space:pre-wrap;">So here is an interesting question: What if we made a graph of all the slopes? We could treat the value of each slope like a new y coordinate with in a different graph. It’s like we could make a new line (and in so doing, a new function, or formula). We would be finding a new line with its own slopes! We could be finding the slope of our slopes!</p><p class="" style="white-space:pre-wrap;">And here is the heart of what we’re after, this line of slopes, is the derivative.</p><p class="" style="white-space:pre-wrap;">This process of taking all the possible slopes of a line, and using those slopes as values for a new line, is conceptually behind taking the derivative of a function.</p><p class="" style="white-space:pre-wrap;">So let’s look at a bunch of our slopes and make a graph of them.</p><p class="" style="white-space:pre-wrap;">So at -1.5 we saw that our slope line has a value of -3. So we put a dot at (-1.5, 3). And we see that at -2 or slope is -4. So we put a dot at (-2, -4). And at 0 we saw our slope was 0, so we put appoint at (0,0). And at 2, our slope is 4, so we put a dot at (2,4).</p>
</div>













































  

    
  
    <div
        class="
          image-block-outer-wrapper
          layout-caption-below
          design-layout-inline
          combination-animation-site-default
          individual-animation-site-default
          individual-text-animation-site-default
        "
        data-test="image-block-inline-outer-wrapper"
    >

      

      
        <figure
            class="
              sqs-block-image-figure
              intrinsic
            "
            style="max-width:300px;"
        >
          
        
        

        
          
            
          <div
              
              
              class="image-block-wrapper"
              data-animation-role="image"
              
  

          >
            <div class="sqs-image-shape-container-element
              
          
        
              has-aspect-ratio
            " style="
                position: relative;
                
                  padding-bottom:121.66667175292969%;
                
                overflow: hidden;-webkit-mask-image: -webkit-radial-gradient(white, black);
              "
              >
                
                  
                  
                  
                  
                  
                  
                  <img data-stretch="false" src="https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/70987a9f-6dd7-49d1-8924-ecec82c51fda/Screenshot+2023-03-01+at+12.30.35+PM.png" data-image="https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/70987a9f-6dd7-49d1-8924-ecec82c51fda/Screenshot+2023-03-01+at+12.30.35+PM.png" data-image-dimensions="300x365" data-image-focal-point="0.5,0.5" alt="" data-load="false" src="https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/70987a9f-6dd7-49d1-8924-ecec82c51fda/Screenshot+2023-03-01+at+12.30.35+PM.png" width="300" height="365" alt="" sizes="100vw" style="display:block;object-fit: cover; width: 100%; height: 100%; object-position: 50% 50%" srcset="https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/70987a9f-6dd7-49d1-8924-ecec82c51fda/Screenshot+2023-03-01+at+12.30.35+PM.png?format=100w 100w, https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/70987a9f-6dd7-49d1-8924-ecec82c51fda/Screenshot+2023-03-01+at+12.30.35+PM.png?format=300w 300w, https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/70987a9f-6dd7-49d1-8924-ecec82c51fda/Screenshot+2023-03-01+at+12.30.35+PM.png?format=500w 500w, https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/70987a9f-6dd7-49d1-8924-ecec82c51fda/Screenshot+2023-03-01+at+12.30.35+PM.png?format=750w 750w, https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/70987a9f-6dd7-49d1-8924-ecec82c51fda/Screenshot+2023-03-01+at+12.30.35+PM.png?format=1000w 1000w, https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/70987a9f-6dd7-49d1-8924-ecec82c51fda/Screenshot+2023-03-01+at+12.30.35+PM.png?format=1500w 1500w, https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/70987a9f-6dd7-49d1-8924-ecec82c51fda/Screenshot+2023-03-01+at+12.30.35+PM.png?format=2500w 2500w" loading="lazy" decoding="async" data-loader="sqs">
                
            </div>
          </div>
        
          
        

        
      
        </figure>
      

    </div>
  


  




<div class="sqs-html-content">
  <p class="" style="white-space:pre-wrap;"><br>At this point you can eyeball that we’re making a straight line. And this straight line has its own formula. In our case, every time we have a value for x, the y value is twice as much. In fact, the value for this is y = 2x!</p><p class="" style="white-space:pre-wrap;">There are mathematical ways of demonstrating that the derivative of y = x² is equal to 2x. There are formal proofs that demonstrate what’s going on. And in the next post, we’ll teach you the shortcuts that mathematicians use to workout calculus problems on paper or in their head.</p><p class="" style="white-space:pre-wrap;">For now you’ve got the basic concept, basically we’re finding the formula for the slope anywhere along the original line.</p><p class="" style="white-space:pre-wrap;">So when we have a function (you’ll notice I’m using the words formula and function kind of interchangeably. I’ll start just calling it function) like y = x², the derivative of that function is y = 2x.</p><p class="" style="white-space:pre-wrap;">So that’s the concept behind finding a derivative!</p><p class="" style="white-space:pre-wrap;">The specifics of calculating derivatives are out of the scope of this article, especially the proofs for why those calculations work, but I once made a <a href="https://medium.com/@mattatblueshiftdevelopment/handwriting-a-neural-net-part-7-calculus-cheat-sheet-4cbb0edbdb24">cheat sheet</a> if you want to calculate derivatives yourself. </p><h3 style="white-space:pre-wrap;">How does finding the derivative help?</h3><p class="" style="white-space:pre-wrap;">When plotting all of our errors from our network calculating our target value, we get a curvy plot. We want to find the lowest point on that curve, and where the slope will equal zero. So finding the derivative and whether it’s positive or negative tells us a little about where we are on the curve, and therefore, how much to update each weight.</p><p class="" style="white-space:pre-wrap;">For instance, if calculate the derivative and it’s very steep and it’s positive, we can update our our weights by a lot in the negative direction. But if our derivative is a low number and it’s negative, we know to update our weights by a little in the positive direction.</p><p class="" style="white-space:pre-wrap;">This is a process called gradient descent. We’re finding the gradient/slope with respect to the weights and updating them accordingly so that we travel down the slope.</p><h3 style="white-space:pre-wrap;">Making the Neuron and Layers</h3><p class="" style="white-space:pre-wrap;">Let’s start with the humble neuron. In a lot of examples of neural nets, you’ll find matrix multiplications. Instead of looping over the neurons and their weights, it’s enough to do the old rows-times-columns of matrix multiplication to get the same effect. Here though, we’re going to break things down to keep it as simple as we can. And that means having individual neurons that we can see and reason about.</p><p class="" style="white-space:pre-wrap;">Part of our neuron is going to be its activation. After our neuron multiplies all of its inputs by its weights, it’s going to transform the output a bit with an activation function. We will use a function called sigmoid. This is what it looks like when you plot values in it.</p>
</div>













































  

    
  
    <div
        class="
          image-block-outer-wrapper
          layout-caption-below
          design-layout-inline
          combination-animation-site-default
          individual-animation-site-default
          individual-text-animation-site-default
        "
        data-test="image-block-inline-outer-wrapper"
    >

      

      
        <figure
            class="
              sqs-block-image-figure
              intrinsic
            "
            style="max-width:600px;"
        >
          
        
        

        
          
            
          <div
              
              
              class="image-block-wrapper"
              data-animation-role="image"
              
  

          >
            <div class="sqs-image-shape-container-element
              
          
        
              has-aspect-ratio
            " style="
                position: relative;
                
                  padding-bottom:67.66666412353516%;
                
                overflow: hidden;-webkit-mask-image: -webkit-radial-gradient(white, black);
              "
              >
                
                  
                  
                  
                  
                  
                  
                  <img data-stretch="false" src="https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/187c3c42-912d-44a6-9c19-9a5694332da1/Screenshot+2023-02-28+at+10.30.43+AM.png" data-image="https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/187c3c42-912d-44a6-9c19-9a5694332da1/Screenshot+2023-02-28+at+10.30.43+AM.png" data-image-dimensions="600x406" data-image-focal-point="0.5,0.5" alt="" data-load="false" src="https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/187c3c42-912d-44a6-9c19-9a5694332da1/Screenshot+2023-02-28+at+10.30.43+AM.png" width="600" height="406" alt="" sizes="100vw" style="display:block;object-fit: cover; width: 100%; height: 100%; object-position: 50% 50%" srcset="https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/187c3c42-912d-44a6-9c19-9a5694332da1/Screenshot+2023-02-28+at+10.30.43+AM.png?format=100w 100w, https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/187c3c42-912d-44a6-9c19-9a5694332da1/Screenshot+2023-02-28+at+10.30.43+AM.png?format=300w 300w, https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/187c3c42-912d-44a6-9c19-9a5694332da1/Screenshot+2023-02-28+at+10.30.43+AM.png?format=500w 500w, https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/187c3c42-912d-44a6-9c19-9a5694332da1/Screenshot+2023-02-28+at+10.30.43+AM.png?format=750w 750w, https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/187c3c42-912d-44a6-9c19-9a5694332da1/Screenshot+2023-02-28+at+10.30.43+AM.png?format=1000w 1000w, https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/187c3c42-912d-44a6-9c19-9a5694332da1/Screenshot+2023-02-28+at+10.30.43+AM.png?format=1500w 1500w, https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/187c3c42-912d-44a6-9c19-9a5694332da1/Screenshot+2023-02-28+at+10.30.43+AM.png?format=2500w 2500w" loading="lazy" decoding="async" data-loader="sqs">
                
            </div>
          </div>
        
          
        

        
          
          <figcaption class="image-caption-wrapper">
            <div class="image-caption"><p class="" style="white-space:pre-wrap;">A sigmoid function graph.</p></div>
          </figcaption>
        
      
        </figure>
      

    </div>
  


  




<div class="sqs-html-content">
  <p class="" style="white-space:pre-wrap;">Sigmoid gets its name from that graph, meaning when you plot a lot of values with it, looks like an S-curve. Our particular sigmoid is this: 1 / (1 + e of -x). The e stands for something really cool: Euler’s number. It’s equal to about 2.71828. It’s pronounced “oiler.” It’s kind of like pi. It has some fascinating properties, especially for calculus, which we’ll be going over soon. Check out <a href="https://www.popularmechanics.com/science/math/a24383/mathematical-constant-e/" target="_blank"><span style="text-decoration:underline">this link about e</span></a> for fun!</p><p class="" style="white-space:pre-wrap;">So what is does is, no matter our input, it squeezes it between 0 and 1 as an output.</p><p class="" style="white-space:pre-wrap;">Let’s make that activation. And let’s make a function for the derivative too, since we’ll need that when we’re going backwards.</p><p class="" style="white-space:pre-wrap;">I’m also going to make a “blank” activation that doesn’t change the value, just multiplies it times one. And that means the derivative is just the number one. The blank activation will help us with the last layer, where we don’t want to force the value to be 0 or 1, but have it in the range of our actual output data.</p>
</div>



<pre><code>enum ActivationFunction {
    case sigmoid
    case blank

    func forward(x: Float) -&gt; Float {
        switch self {
        case .sigmoid:
            return 1 / (1 + exp(-x))
        case .blank:
            return x * 1
        }
    }

    func derivative(x: Float) -&gt; Float {
        switch self {
        case .sigmoid:
            return x * (1 - x)
        case .blank:
            return 1
        }
    }
}`</code></pre>


<div class="sqs-html-content">
  <p class="" style="white-space:pre-wrap;">Now that we have that, let’s make our neuron. You’ll notice that we make a number of weights. Those will correspond to the number of inputs we’re getting. So if we have three neurons behind us, then each neuron in the current layers will have three weights.</p><p class="" style="white-space:pre-wrap;">On activation, we take the number inputs we’re getting from the layer behind us, and then multiply by the weights, and then add that all together. And finally, we put that value through our activation function, in our case, sigmoid. We also store those values for updating the weights in the backward pass later.</p>
</div>



<pre><code>public class Neuron {
    var weights: [Float]
    var bias: Float
    var inputCache: [Float] = []
    var outputCache: Float = 0
    var delta: Float = 0
    var activation: ActivationFunction

    init(weightCount: Int, activation: ActivationFunction) {
        self.activation = activation
        bias = Float.random(in: 0 ..&lt; 1)
        weights = []
        for _ in 0 ..&lt; weightCount {
            weights.append(Float.random(in: 0 ..&lt; 1))
        }
    }

    func activate(inputs: [Float]) -&gt; Float {
        var value = bias
        for (index, weight) in weights.enumerated() {
            value += weight * inputs[index]
        }

        value = activation.forward(x: value)

        outputCache = value
        inputCache = inputs

        return value
    }
}</code></pre>


<div class="sqs-html-content">
  <p class="" style="white-space:pre-wrap;">Now we’ve got one more function to add the neuron, and it’s where a lot of the magic happens. The activate function is for the forward pass. Now we have the backward pass. </p><p class="" style="white-space:pre-wrap;">Here is where we will accept the error for this neuron, the learning rate, which tells us how big of a correction to make, and the errors that all of the neurons in this layers will update and then eventually pass backward to the previous layer.</p>
</div>



<pre><code>func backward(error: Float, learningRate: Float, errorsForPreviousLayer: [Float]) -&gt; [Float] {
    var errorsToPassBackward = errorsForPreviousLayer
    let outputDerivativeError = error * self.activation.derivative(x: outputCache)

    // The index of the weight will correspond to the index of the neuron in the previous layer.
    for (weightIndex, weight) in weights.enumerated() {
        errorsToPassBackward[weightIndex] += outputDerivativeError * weight
    }

    // Now that we have that error, we can update the weights of our current neuron
    for (inputIndex, input) in inputCache.enumerated() {
        var currentWeight = weights[inputIndex]
        currentWeight -= learningRate * outputDerivativeError * input
        weights[inputIndex] = currentWeight
    }

    bias -= learningRate * outputDerivativeError

    return errorsToPassBackward
}</code></pre>


<div class="sqs-html-content">
  <p class="" style="white-space:pre-wrap;">That’s a lot of neuron work! Next we’re going to make the layer.</p><p class="" style="white-space:pre-wrap;">You’ll notice that first, in the initializer, we create as many neurons as we have outputs, and like we discussed, the number of weights in each neuron is equal to the input size of the layer.</p><p class="" style="white-space:pre-wrap;">Next, we have the forward, which just takes the input from the previous layer and sends it to the neurons to do the activating.</p><p class="" style="white-space:pre-wrap;">Then, we have the backward. This takes an error and a learning rate, and we create an initial set of errors that will eventually go back to the previous layer. Then all of that gets passed  to the individual neurons for this layer to do their backward calculation.</p>
</div>



<pre><code>public class Layer {
    var neurons: [Neuron] = []
    var inputSize = 0
    var activation: ActivationFunction

    init(inputSize: Int, outputSize: Int, activation: ActivationFunction) {
        for _ in 0 ..&lt; outputSize {
            let neuron = Neuron(weightCount: inputSize, activation: activation)
            neurons.append(neuron)
        }

        self.inputSize = inputSize
        self.activation = activation
    }

    func forward(inputs: [Float]) -&gt; [Float] {
        var newInputs: [Float] = []
        for neuron in neurons {
            let activationValue = neuron.activate(inputs: inputs)
            newInputs.append(activationValue)
        }
        return newInputs
    }

    func backward(errors: [Float], learningRate: Float) -&gt; [Float] {
        var errorsForPreviousLayer: [Float] = []

        // Here we prepare errors that we will pass to the layer behind us.
        for _ in 0 ..&lt; self.inputSize {
            errorsForPreviousLayer.append(0)    
        }

        for (neuronIndex, neuron) in neurons.enumerated() {
            let error = errors[neuronIndex]

            // The neurons wil update their weigths with the errors, and also update the errors that will be passed to the previous layer.
            errorsForPreviousLayer = neuron.backward(error: error, learningRate: learningRate, errorsForPreviousLayer: errorsForPreviousLayer)
        }

        // Finally, we pass those errors to the layer behind us.
        return errorsForPreviousLayer
    }
}</code></pre>


<div class="sqs-html-content">
  <p class="" style="white-space:pre-wrap;">Cool, now we can setup our neural net. You’ll see that I initialize two layers (well, technically three, but the first layer is just the raw input, so, we don’t count the first one).</p><p class="" style="white-space:pre-wrap;">And in the forward method, we just call forward for each layer!</p><p class="" style="white-space:pre-wrap;">And in the backward method, we just call backward for each layer!</p><p class="" style="white-space:pre-wrap;">We set it up so nicely that it’s easy to get the high level understanding.</p><p class="" style="white-space:pre-wrap;">And that predict method at the bottom? That’s just a forward pass really. We could do performance improvements, like not hanging onto an input and output cache, but here, it’s pretty straightforward.</p>
</div>



<pre><code>public class NeuralNetwork {
    private var layers: [Layer] = []
    public init(inputSize: Int, hiddenSize: Int, outputSize: Int) {
        self.layers.append(Layer(inputSize: inputSize, outputSize: hiddenSize, activation: .sigmoid))
        self.layers.append(Layer(inputSize: hiddenSize, outputSize: outputSize, activation: .sigmoid))
    }

    func forward(data: [Float]) -&gt; [Float] {
        var inputs = data
        for layer in layers {
            let newInput = layer.forward(inputs: inputs)
            inputs = newInput
        }

        return inputs
    }

    func backward(errors: [Float], learningRate: Float) {
        var errors = errors
        for layer in layers.reversed() {
            errors = layer.backward(errors: errors, learningRate: learningRate)
        }
    }

    func predict(input: [Float]) -&gt; [Float] {
        let output = forward(data: input)
        return output
    }

    // TODO: Setup train function. That comes next!
}</code></pre>


<div class="sqs-html-content">
  <h3 style="white-space:pre-wrap;">Preparing for training.</h3><p class="" style="white-space:pre-wrap;">We’re going to train for a certain number of epochs. Each epoch, I’ll train on all 500 houses, and on the next epoch, start over again.</p><p class="" style="white-space:pre-wrap;">What I want to do next is to have a way to see how my network is performing. I’ll make a progress reporter that tells me what epoch I’m on, and what the total error is for that epoch. Here is my progress reporter:</p>
</div>



<pre><code>import SwiftUI

class ProgressReporter: ObservableObject {
    struct LearningError: Identifiable {
        var id: Int {
            epoch
        }
        let epoch: Int
        let error: Float
    }

    @MainActor
    func setData(newData: [LearningError]) async {
        data = newData
    }

    @MainActor
    func setFinished(_ finished: Bool) async {
        self.finished = finished
    }

    @Published var data: [LearningError] = []

    @Published var finished = false
}</code></pre>


<div class="sqs-html-content">
  <p class="" style="white-space:pre-wrap;">We include the main actor bits because we’ll move training to a separate thread that won’t block the app, but then we’ll move back to it so that our chart can update.</p><p class="" style="white-space:pre-wrap;">The next core piece is our loss function. Also called the cost function. The loss allows us to tell the network how bad it did. Consider, what if you subtracted 2 from 1. Well you could say, update to account for being off by 1. But what if you subtracted -1 from -2. Well now we’ve got these pesky negatives.</p><p class="" style="white-space:pre-wrap;">One solution is to square the error (multiply it by itself), to handle the negatives, sum them up, and average them. This is the mean squared error (MSE). You could also do things like, just take the absolute values and so on, so I’ll make it an enum with more cases that could be added later.</p><p class="" style="white-space:pre-wrap;">We’ll want, not only the loss function, but the derivative of the loss function, for the backward part.</p><p class="" style="white-space:pre-wrap;">In the end, it looks like this:</p>
</div>



<pre><code>enum LossFunction {
    case mse

    func loss(forExpected expected: [Float], predicted: [Float]) -&gt; Float {
        let squaredDifference = zip(expected, predicted).map{ expectedResult, predictedResult in 
            pow(expectedResult - predictedResult, 2.0) 
        }

        let average = squaredDifference.reduce(0, +) / Float(predicted.count)

        return average
    }

    func derivative(expected: [Float], predicted: [Float]) -&gt; Float {
        let difference = zip(expected, predicted).map{ expectedResult, predictedResult in 
            2 * (expectedResult - predictedResult)
        }

        let sum = difference.reduce(0, +)
        return -(sum / Float(expected.count))
    }
}</code></pre>


<div class="sqs-html-content">
  <p class="" style="white-space:pre-wrap;"><br>Now we can put that all together in our NeuralNet training function:</p>
</div>



<pre><code>func train(featureInput: [[Float]], targetOutput: [[Float]], epochs: Int, learningRate: Float, loss: LossFunction, reporter: ProgressReporter) {
    Task {

        await reporter.setFinished(false)

        var learningErrors: [ProgressReporter.LearningError] = []
        for epoch in 0 ..&lt; epochs {
            var averageEpochError: Float = 0
            for (featureIndex, features) in featureInput.enumerated() {
                let outputs = forward(data: features)

                let expected = targetOutput[featureIndex]

                let error = loss.loss(forExpected: expected, predicted: outputs)

                // Total error is just for our reporting
                averageEpochError += (error / 2.0)

                let derivativeError = loss.derivative(expected: expected, predicted: outputs)

                backward(errors: [derivativeError], learningRate: learningRate)
            }

            let errorToReport = ProgressReporter.LearningError(epoch: epoch, error: averageEpochError)
            learningErrors.append(errorToReport)
            let errorsToReport = learningErrors
            Task {
                await reporter.setData(newData: errorsToReport)
            }
        }

        await reporter.setFinished(true)
    }   
}</code></pre>


<div class="sqs-html-content">
  <p class="" style="white-space:pre-wrap;">Those feature inputs could be a list of 500 lists of features (hence it’s a nested list), and they are in the same order as the list of target outputs.</p><p class="" style="white-space:pre-wrap;">For instance, the very first feature inputs could be [0.1, 0.5, 0.3] and the very first target output might be [0.2]</p><p class="" style="white-space:pre-wrap;">This could mean that 0.1 represents the percentage of 10% between 500 and 10,000 square feet for a house. And 0.5 could represent a neighborhood quality score. And 0.3 could represent the percentage of 30% between 1 and 10 rooms. And the target 0.2 might mean that this how is the 20 percent between, say $500 and $1 million dollar home.</p><p class="" style="white-space:pre-wrap;">Thus for our very first inputs and outputs we tell the neural net, hey, understand that if you see a home with these inputs, give us a value with this output. There could be other target outputs. That’s why we have a list. But in this case, our list only has one number in it, the target price.</p><p class="" style="white-space:pre-wrap;">Then for each epoch, we do the three steps: pass the inputs forward, calculate the loss, and then pass the error backward.</p><p class="" style="white-space:pre-wrap;">And that’s it for the neural net!</p><p class="" style="white-space:pre-wrap;">Next, let’s put it into practice.</p><h3 style="white-space:pre-wrap;">Building the Brain</h3><p class="" style="white-space:pre-wrap;">I’m going to make a Brain class to handle running the network and being the go-between for our house data and the neural network.</p><p class="" style="white-space:pre-wrap;">First I’ll define some house thoughts, so that we can keep track of what the brain thinks of house prices over time.</p>
</div>



<pre><code>struct HouseThought: Identifiable {
    let id = UUID()
    var homeInfo: HomeInfo
    let predictedValue: Float
}</code></pre>


<div class="sqs-html-content">
  <p class="" style="white-space:pre-wrap;">Next I’ll make the Brain class itself. </p><p class="" style="white-space:pre-wrap;">It has four parts.</p><p class="" style="white-space:pre-wrap;">1) First there is the initialization/creation of the brain. We call initializeNetwork to create our network with 5 inputs, a hidden size of 7, and an output size of 1. The 5 inputs will be those five characteristics of a house we created in the beginning. The hidden size is the size of our middle layer between input and output. And the output size is just 1 because we have just one property we’re trying to predict: the price. We’ll make three random houses and call a function evaluateNetwork that is basically getting predictions before we’ve trained the network. This way we can see if, after training, our price predictions are better than the unlearned ones. Then we put those in unlearnedThoughts, for display later.</p><p class="" style="white-space:pre-wrap;">2) InitializeNetwork is the init function all over again</p><p class="" style="white-space:pre-wrap;">3) evaluateNetwork takes the list of homes and gets predictions.</p><p class="" style="white-space:pre-wrap;">4) And finally, learn takes a group of homes and does the learning. First it breaks apart the features from the target values to predict, sets the number of epochs, learning rate, loss function, and gives the network a reporter. And finally, it tells it to train!</p>
</div>



<pre><code>class Brain: ObservableObject {

    // Just creating an empty network as a placeholder
    var network: NeuralNetwork = NeuralNetwork(inputSize: 0, hiddenSize: 0, outputSize: 0)

    @Published var learnedThoughts: [HouseThought] = []
    @Published var unlearnedThoughts: [HouseThought] = []

    init() {
        initializeNetwork()    
    }

    func initializeNetwork() {
        network = NeuralNetwork(inputSize: 5, 
                                hiddenSize: 7, 
                                outputSize: 1)
        let homes = [HouseBuilder.makeRandomHouse(),
                     HouseBuilder.makeRandomHouse(),
                     HouseBuilder.makeRandomHouse()]
        unlearnedThoughts = evaluateNetwork(withHomes: homes)  
    }

    func evaluateNetwork(withHomes homes: [HomeInfo]) -&gt; [HouseThought] {
        var evaluations: [HouseThought] = []
        for home in homes {
            let resultList = network.predict(input: home.trainingData.features)

            let predictedValue = resultList[0]

            let thought = HouseThought(homeInfo: home, predictedValue: predictedValue)

            evaluations.append(thought)
        }

        return evaluations        
    }

    func learn(fromHomes homes: [HomeInfo], reporter: ProgressReporter) {
        let featureData: [[Float]] = homes.map { home in
            let trainingValues = home.trainingData.features
            return trainingValues
        }

        let targetData: [[Float]] = homes.map { home in
            let target = home.trainingData.targets
            return target
        }

        let epochs = 100
        let learningRate: Float = 0.1

        network.train(featureInput: featureData, 
                      targetOutput: targetData, 
                      epochs: epochs, 
                      learningRate: learningRate,
                      loss: .mse,
                      reporter: reporter)
    }
}</code></pre>


<div class="sqs-html-content">
  <h3 style="white-space:pre-wrap;">Displaying the Neural Network</h3><p class="" style="white-space:pre-wrap;">Now let’s make some UI so we can see how are training goes.</p><p class="" style="white-space:pre-wrap;">Here is our training view. Just a button to train, and a button to restart. And a Swift Chart to show our epochs and our error over time. with any luck, the error goes way, way down.</p>
</div>



<pre><code>import SwiftUI
import Charts

struct TrainingView: View {
    @ObservedObject var brain: Brain
    @StateObject var reporter = ProgressReporter()
    let builder: HouseBuilder
    var body: some View {
        VStack {
            Text("Finshed Training: \(String(reporter.finished))")
                .font(.title)
                .padding()
            Chart(reporter.data) { trainingError in
                LineMark(
                    x: .value("Epoch", trainingError.epoch),
                    y: .value("Total Error", trainingError.error)
                )
            }
            .chartXAxisLabel("Epochs")
            .chartYAxisLabel("Learning Error")
            .padding()
            HStack {
                Button("Train") {
                    brain.learn(fromHomes: builder.homes, reporter: reporter)
                }
                Button("Rebuild Network/Start over") {
                    brain.initializeNetwork()
                }
            }
            .buttonStyle(.borderedProminent)
            .controlSize(.large)
        }
    }
}</code></pre>


<div class="sqs-html-content">
  <p class="" style="white-space:pre-wrap;">And we’ll want to see how it performs when it finishes training too. So let’s make the evaluation view. It’s essentially a list with one big button to predict the value of three randomly created houses, a section to display the price predictions of the untrained network, and a section to display the price predictions of a trained network.</p>
</div>



<pre><code>import SwiftUI

struct EvaluationView: View {
    @ObservedObject var brain: Brain
    let builder: HouseBuilder

    var body: some View {
        VStack {
            Button("Evaluate Network / Get Learned Thoughts / Network Predictions") {
                let homes = [HouseBuilder.makeRandomHouse(),
                             HouseBuilder.makeRandomHouse(),
                             HouseBuilder.makeRandomHouse()]
                brain.learnedThoughts = brain.evaluateNetwork(withHomes: homes)
            }
            List {
                Section(header: Text("Unlearned Thoughts")) { 
                    ForEach(brain.unlearnedThoughts) { thought in
                        HouseThoughtCell(builder: builder, thought: thought)
                    }
                }
                Section(header: Text("Learned Thoughts")) {
                    ForEach(brain.learnedThoughts) { thought in
                        HouseThoughtCell(builder: builder, thought: thought)
                    }
                }
            }
        }
        .buttonStyle(.borderedProminent)
        .controlSize(.large)
    }
}

struct HouseThoughtCell: View {
    let builder: HouseBuilder
    let thought: HouseThought
    var body: some View {
        VStack(alignment: .leading, spacing: 18) {
            Text("Actual \(builder.formattedPriceValue(value: thought.homeInfo.value))")
                .padding(.bottom, -12)
            Text("Predicted \(builder.formattedPriceValue(value: thought.predictedValue))")
            Text("Difference \(builder.formattedPriceValue(value: abs(thought.predictedValue - thought.homeInfo.value))) ")
                .fontWeight(.bold)
        }

    }
}</code></pre>


<div class="sqs-html-content">
  <p class="" style="white-space:pre-wrap;">And now we put that in our top-level ContentView.swift<br><br></p>
</div>



<pre><code>import SwiftUI

struct ContentView: View {
    @StateObject var builder = HouseBuilder()
    @StateObject var brain = Brain()


    var body: some View {
        TabView {
            TrainingView(brain: brain, builder: builder)
                .tabItem { 
                    Label("Train", systemImage: "train.side.front.car") 
                }
            EvaluationView(brain: brain, builder: builder)
                .tabItem { 
                    Label("Evaluation", systemImage: "wand.and.stars") 
                }
        }
    }
}</code></pre>


<div class="sqs-html-content">
  <p class="" style="white-space:pre-wrap;"><br>And our ContentView goes in our app, Sydney (iykyk)</p>
</div>



<pre><code>import SwiftUI

@main
struct Sydney: App {
    var body: some Scene {
        WindowGroup {
            ContentView()
        }
    }
}</code></pre>


<div class="sqs-html-content">
  <p class="" style="white-space:pre-wrap;">And this is what we get!<br><br></p>
</div>



<div class="intrinsic" style="max-width:100%"><div class="embed-block-wrapper " style="padding-bottom:1.4462962%;"><div class="sqs-native-video" data-config-block-id="yui_3_17_2_1_1678314565770_27303" data-config-settings="null" data-config-thumbnail="null" data-config-video="&#123;&quot;id&quot;:&quot;640f2d65edd973796e2fa5bd&quot;,&quot;recordType&quot;:61,&quot;addedOn&quot;:1678716261655,&quot;updatedOn&quot;:1678716261655,&quot;authorId&quot;:&quot;536afb6ee4b07ebc3c226adf&quot;,&quot;systemDataId&quot;:&quot;137f8ad1-9c3c-4541-a9d1-939d50b3ad89&quot;,&quot;systemDataVariants&quot;:&quot;1080:1562,360:520&quot;,&quot;systemDataSourceType&quot;:&quot;mp4&quot;,&quot;filename&quot;:&quot;Screen Recording 2023-03-13 at 9.03.26 AM.mov&quot;,&quot;body&quot;:null,&quot;likeCount&quot;:0,&quot;commentCount&quot;:0,&quot;publicCommentCount&quot;:0,&quot;commentState&quot;:1,&quot;author&quot;:&#123;&quot;id&quot;:&quot;536afb6ee4b07ebc3c226adf&quot;,&quot;displayName&quot;:&quot;Matthew Waller&quot;,&quot;firstName&quot;:&quot;Matthew&quot;,&quot;lastName&quot;:&quot;Waller&quot;,&quot;bio&quot;:&quot;&quot;&#125;,&quot;contentType&quot;:&quot;video/mp4&quot;,&quot;structuredContent&quot;:&#123;&quot;_type&quot;:&quot;SqspHostedVideo&quot;,&quot;videoCodec&quot;:&quot;h264&quot;,&quot;alexandriaUrl&quot;:&quot;https://video.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/137f8ad1-9c3c-4541-a9d1-939d50b3ad89/&#123;variant&#125;&quot;,&quot;alexandriaLibraryId&quot;:&quot;5ff86ecddd4cdc650b260a12&quot;,&quot;aspectRatio&quot;:0.6914212548015365,&quot;durationSeconds&quot;:19.783333&#125;,&quot;videoCodec&quot;:&quot;h264&quot;,&quot;alexandriaUrl&quot;:&quot;https://video.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/137f8ad1-9c3c-4541-a9d1-939d50b3ad89/&#123;variant&#125;&quot;,&quot;alexandriaLibraryId&quot;:&quot;5ff86ecddd4cdc650b260a12&quot;,&quot;aspectRatio&quot;:0.6914212548015365,&quot;durationSeconds&quot;:19.783333,&quot;pushedServices&quot;:&#123;&#125;,&quot;pendingPushedServices&quot;:&#123;&#125;,&quot;usageId&quot;:&quot;82868b5a-71e3-3470-9dae-8b1588c06526&quot;,&quot;assetProtectionLevel&quot;:&quot;LIBRARY&quot;,&quot;recordTypeLabel&quot;:&quot;sqsp-hosted-video&quot;,&quot;originalSize&quot;:&quot;1080:1562&quot;&#125;"><div class="native-video-player"></div></div></div></div>

<div class="sqs-html-content">
  <p class="" style="white-space:pre-wrap;">As you can see, we get terrible price predictions from the network before it has been trained.<br><br>And the predictions are more than 10x better after being trained, even when predicting housing data it has never seen before! However, it’s not perfect, and likely won’t be with this setup. Generally you want to save part of the data for a validation step to make sure that the network isn’t overfitting. Overfitting is where the network learns its training data so well that it doesn’t generalize to other examples later. There is also a lot of room to experiment with the best setup: more layers, different activations, different losses, etc. For now though, it’s pretty awesome to see orders of magnitude improvement in learning.</p><h3 style="white-space:pre-wrap;">Where to from here?</h3><p class="" style="white-space:pre-wrap;">There are so, so many ways to take advantage of machine learning as a developer. You can make architectures for the models (new activations, better loss functions, different layer shapes). You can work on getting good datasets. You can focus on deploying models. And, of course, you can make the thousands of different kinds of apps that these machine learning models enable.</p><p class="" style="white-space:pre-wrap;">Most of the work of developing new ML models happens in Python right now. It’s the workhorse. Thankfully, Python is a friendly language, and once you’ve got the basics, the concepts here can help navigate what is going on in Python frameworks like PyTorch and Tensorflow.</p><p class="" style="white-space:pre-wrap;">However, there are so many possibilities just in the iOS and Mac world too, with native Apple platforms.</p><ul data-rte-list="default"><li><p class="" style="white-space:pre-wrap;">You can take models converted from Python to the <a href="https://developer.apple.com/machine-learning/models/">native CoreML libraries and integrate them with new and existing apps as showcased here.</a></p></li><li><p class="" style="white-space:pre-wrap;">You can skip the ML things and just use the end-resulting superpowers by using things like the Vision and Natural Language frameworks as seen <a href="https://developer.apple.com/machine-learning/api/">here</a>.</p></li><li><p class="" style="white-space:pre-wrap;">And you can create your own models all on the Apple platforms <a href="https://developer.apple.com/machine-learning/create-ml/">here with CreateML</a>.</p></li></ul><p class="" style="white-space:pre-wrap;">Mind you, all three of those broad lists of options are all on the device and don’t even need an Internet connection to operate.</p><p class="" style="white-space:pre-wrap;">And then, of course, there are things like OpenAI’s ChatGPT natural language superpowers and the DALLE image generators.</p><h3 style="white-space:pre-wrap;">The Surprise!</h3><p class="" style="white-space:pre-wrap;">As an example of using existing machine learning capabilities, I’m packaging in a bare-bones starter app that let’s you make your very own ChatGPT, or at least begin that process, You’ll supply your API key, and then you’re off to the races. I’ll plan on a separate blog post explaining what each part of the code does.</p>
</div>



<div class="intrinsic" style="max-width:100%"><div class="embed-block-wrapper " style="padding-bottom:1.4462962%;"><div class="sqs-native-video" data-config-block-id="yui_3_17_2_1_1678717360033_28892" data-config-settings="null" data-config-thumbnail="null" data-config-video="&#123;&quot;id&quot;:&quot;640f38ceedd973796e2fad4e&quot;,&quot;recordType&quot;:61,&quot;addedOn&quot;:1678719182267,&quot;updatedOn&quot;:1678719182267,&quot;authorId&quot;:&quot;536afb6ee4b07ebc3c226adf&quot;,&quot;systemDataId&quot;:&quot;df23ad6a-0fe6-4d1d-881a-96c44c2edc2b&quot;,&quot;systemDataVariants&quot;:&quot;1080:1562,360:520&quot;,&quot;systemDataSourceType&quot;:&quot;mp4&quot;,&quot;filename&quot;:&quot;Screen Recording 2023-03-13 at 9.16.42 AM.mov&quot;,&quot;body&quot;:null,&quot;likeCount&quot;:0,&quot;commentCount&quot;:0,&quot;publicCommentCount&quot;:0,&quot;commentState&quot;:1,&quot;author&quot;:&#123;&quot;id&quot;:&quot;536afb6ee4b07ebc3c226adf&quot;,&quot;displayName&quot;:&quot;Matthew Waller&quot;,&quot;firstName&quot;:&quot;Matthew&quot;,&quot;lastName&quot;:&quot;Waller&quot;,&quot;bio&quot;:&quot;&quot;&#125;,&quot;contentType&quot;:&quot;video/mp4&quot;,&quot;structuredContent&quot;:&#123;&quot;_type&quot;:&quot;SqspHostedVideo&quot;,&quot;videoCodec&quot;:&quot;h264&quot;,&quot;alexandriaUrl&quot;:&quot;https://video.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/df23ad6a-0fe6-4d1d-881a-96c44c2edc2b/&#123;variant&#125;&quot;,&quot;alexandriaLibraryId&quot;:&quot;5ff86ecddd4cdc650b260a12&quot;,&quot;aspectRatio&quot;:0.6914212548015365,&quot;durationSeconds&quot;:77.333333&#125;,&quot;videoCodec&quot;:&quot;h264&quot;,&quot;alexandriaUrl&quot;:&quot;https://video.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/df23ad6a-0fe6-4d1d-881a-96c44c2edc2b/&#123;variant&#125;&quot;,&quot;alexandriaLibraryId&quot;:&quot;5ff86ecddd4cdc650b260a12&quot;,&quot;aspectRatio&quot;:0.6914212548015365,&quot;durationSeconds&quot;:77.333333,&quot;pushedServices&quot;:&#123;&#125;,&quot;pendingPushedServices&quot;:&#123;&#125;,&quot;usageId&quot;:&quot;98067063-374b-3b39-998d-3e650b9c60e4&quot;,&quot;assetProtectionLevel&quot;:&quot;LIBRARY&quot;,&quot;recordTypeLabel&quot;:&quot;sqsp-hosted-video&quot;,&quot;originalSize&quot;:&quot;1080:1562&quot;&#125;"><div class="native-video-player"></div></div></div></div>

<div class="sqs-html-content">
  <p class="" style="white-space:pre-wrap;"><a href="https://wattmaller1.gumroad.com/l/pxpxx">You can download the whole package as both a Swift Playground and Xcode project at this link</a>, as a pay-what-you-can feature if you want to support me. Thanks so much, and happy programming.</p>
</div>]]></content:encoded>
      <excerpt:encoded />
      <wp:post_name>a-casual-yet-thorough-amp-hands-on-explanation-of-neural-networks-with-swift-swiftui-and-charts</wp:post_name>
      <wp:post_type>post</wp:post_type>
      <wp:post_id>0</wp:post_id>
      <wp:status>publish</wp:status>
      <pubDate>Mon, 13 Mar 2023 14:57:21 +0000</pubDate>
      <wp:post_date>2023-03-13 14:57:21</wp:post_date>
      <wp:post_date_gmt>2023-03-13 14:57:21</wp:post_date_gmt>
      <dc:creator>waller.matthew@gmail.com</dc:creator>
      <wp:comment_status>closed</wp:comment_status>
    </item>
    <item>
      <title>Adventures in AI Ethics Part 2: Stable Diffusion v2 and the Curse of Scale</title>
      <link>/blog/adventures-in-ai-ethics-part-2-stable-diffusion-v2-and-the-curse-of-scale</link>
      <content:encoded><![CDATA[<div class="sqs-html-content">
  <p class="" style="white-space:pre-wrap;">I outlined <a href="https://www.cephalopod.studio/blog/on-creating-an-on-device-stable-diffusion-app-amp-deciding-not-to-release-it-adventures-in-ai-ethics">here</a> why I had ethical issues about making an iOS app with Stable Diffusion, the machine learning system that creates images with a text prompt.</p><p class="" style="white-space:pre-wrap;">In the end, I didn’t like that artists were releasing their art online saying, “Hey, you can use this, but not for commercial purposes okay?” </p><p class="" style="white-space:pre-wrap;">And the companies that used billions of images for possibly millions of such artists said, sure, sure (wink), and then essentially used those images for commercial purposes.</p><p class="" style="white-space:pre-wrap;">There was no opt-in for artists. Not even an opt out. And more egregious, you can tell the AI to plagiarize an artist’s style by naming the artist in the prompt.</p><p class="" style="white-space:pre-wrap;">Central to this issue is the idea of <a href="https://www.library.ucsb.edu/copyright-fair-use-basics">fair use</a>, and the issue of fair use in machine learning isn’t a settled one. Consider <a href="https://stanford-cs324.github.io/winter2022/lectures/legality/">this lecture outline at Stanford</a>..<br></p><p style="margin-left:40px;white-space:pre-wrap;" class="">”<a href="https://texaslawreview.org/fair-learning/">Fair learning</a> argues that machine learning is fair use:</p><ul data-rte-list="default" style="margin-left:40px;"><li><p class="" style="white-space:pre-wrap;">ML system’s use of data is <strong>transformative</strong>, doesn’t change work, but changes purpose.</p></li><li><p class="" style="white-space:pre-wrap;">ML system is interested in <strong>idea</strong> (e.g., stop sign) not in the concrete <strong>expression</strong> (e.g., exact artistic choices of a particular image of a stop sign).</p></li><li><p class="" style="white-space:pre-wrap;">Arguments for ML as fair use:</p><ul data-rte-list="default"><li><p class="" style="white-space:pre-wrap;">Broad access to training data makes better systems for society.</p></li><li><p class="" style="white-space:pre-wrap;">If don’t allow, then most works cannot be used to produce new value.</p></li><li><p class="" style="white-space:pre-wrap;">Using copyrighted data can be more fair <a href="https://papers.ssrn.com/sol3/papers.cfm?abstract_id=3024938">Levendowski, 2018</a>.</p></li></ul></li><li><p class="" style="white-space:pre-wrap;">Arguments against ML as fair use:</p><ul data-rte-list="default"><li><p class="" style="white-space:pre-wrap;">Argue that ML systems don’t produce a creative “end product” but just make money.</p></li><li><p class="" style="white-space:pre-wrap;">Generative models (e.g., language models) can compete with creative professionals.</p></li><li><p class="" style="white-space:pre-wrap;">Problems with ML systems (spread disinformation, enable surveillance, etc.), so don’t give ML systems the benefit of the doubt.</p></li></ul></li><li><p class="" style="white-space:pre-wrap;">Challenge: hard to separate protectable (e.g., expression) from unprotectable (e.g., ideas).</p></li><li><p class="" style="white-space:pre-wrap;">There are many reasons why building an ML system might be bad, but is copyright the right tool to stop it?”</p></li></ul><p class="" style="white-space:pre-wrap;">In the end, the lecture concludes: “the future of copyright and machine learning in light of large language models is very much open.”</p><h3 style="white-space:pre-wrap;">AI is just doing what art students are doing, right?</h3><p class="" style="white-space:pre-wrap;">That’s the common refrain I keep running into. Why do we tell an art student in their dorm that it’s okay to practice off of anything they can see but not the AI?</p><p class="" style="white-space:pre-wrap;">Here is where I think the vast majority of debates get stuck and muddled on a point of mechanics.</p><p class="" style="white-space:pre-wrap;">Folks will start to talk about why AI is different from human intelligence. You get to talking about the nature of intelligence and creativity, and what are those things, and can machines be truly creative and so on.</p><p class="" style="white-space:pre-wrap;">Shoot, even <a href="https://githubcopilotlitigation.com/pdf/06823/1-0-github_complaint.pdf">the lawsuit against OpenAI and Microsoft</a> over their generative coding program, which I would put in the same bucket as StableDiffusion, gets caught up in this qualitative debate.</p><p class="" style="white-space:pre-wrap;">The talk about a bot making a silly coding mistake in Javascript that a human would never make. To which I say, buddy, let me tell you about the vast numbers of terribly silly Javascript mistakes we human programers have made.</p><p class="" style="white-space:pre-wrap;">Anyway, it’s not that those aren’t worthy topics to discuss, but there is another, different reason why we shouldn’t put the art student in their dorm and the machine learning system in the same bucket.</p><p class="" style="white-space:pre-wrap;">So I will, for the sake of argument, say that the learning of a human and the AI system is fundamentally the same. Yet there is still a reason to not treat them the same.</p><p class="" style="white-space:pre-wrap;">The reason is power.</p><h3 style="white-space:pre-wrap;">The Curse of Scale</h3><p class="" style="white-space:pre-wrap;">If I go for a walk, I generally do not need a license. If I drive a car, then I need a license. And, although I am not an avionics expert, I would hope I’m required to have a significantly more thorough license to fly a 747.</p><p class="" style="white-space:pre-wrap;">Here in the U.S., you can get a license to own a handgun. You cannot, even in my state of Texas, get a license to have a nuke.</p><p class="" style="white-space:pre-wrap;">Machine learning systems have vastly more power that art students, and they need to be treated differently.</p><p class="" style="white-space:pre-wrap;">So the comparison isn’t between an art student and another art student who happens to be a bot. It’s more of a comparison of an art student and an army of trained artists who have been hired by a multi-millionaire to learn another artist’s style.</p><p class="" style="white-space:pre-wrap;">That seems less like fair use.</p><p class="" style="white-space:pre-wrap;">To bring the analogies closer to home, it’s kind of like, oh, I’m going to use the image of Batman in my meme to make a joke. I’m not going to use the image of Batman in my movie to sell a billion dollar blockbuster.</p><p class="" style="white-space:pre-wrap;">Or again, I might have friends over for a movie night, and even though they haven’t purchased the movie, we still all enjoy it together. I’m not going to create a chain of movie theaters and share that movie that way, charging people and keeping all the profits.</p><p class="" style="white-space:pre-wrap;">The release of Stable Diffusion is much like providing people a button to create their chain of movie theaters, or galleries rather, where they can charge people to come see ripoffs of other artist’s work.</p><p class="" style="white-space:pre-wrap;">My argument then, is that we need not consider the qualitative difference between a human artists and an AI artists. It’s enough to consider the quantitate difference. The AI system has more power.</p><h3 style="white-space:pre-wrap;">Stable Diffusion v2</h3><p class="" style="white-space:pre-wrap;"><a href="https://www.theverge.com/2022/11/24/23476622/ai-image-generator-stable-diffusion-version-2-nsfw-artists-data-changes">A new version of Stable Diffusion is out</a>. This time, they disallowed the ability to directly include an artist’s name in the prompt, more or less.</p><p class="" style="white-space:pre-wrap;">What would be ideal is if they had offered a version of their model trained only on public data.</p><p class="" style="white-space:pre-wrap;">(Yes, folks could still attach artist’s names to images in the public dataset if they were similar to the artists, but it couldn’t truly capture their art. Or maybe that’s one of those qualitative debates I said I didn’t want to get stuck in.) </p><p class="" style="white-space:pre-wrap;">Still, they are addressing a major complaint from artists in a way that helps with fair use.</p><p class="" style="white-space:pre-wrap;">Besides, we needn’t make an idol out of fair use. Its function is to protect the creator of the creation, and incentivize those people to keep creating.</p><p class="" style="white-space:pre-wrap;">Stable Diffusion v2 goes further toward protecting the creators. Does it go far enough?</p><p class="" style="white-space:pre-wrap;">I still wonder whether there is room for an image generator made from public images.</p><p class="" style="white-space:pre-wrap;">And together, as a society, we’ll sift out what should count as fair use (most of the reports I’ve read themselves report that most law experts believe the training will be considered fair use. Hmmm)</p><p class="" style="white-space:pre-wrap;">In the meantime then, I’ll take the politicians tactic of saying, do not make perfect the enemy of good, and, stick to using Stable Diffusion v2 if I make an image maker app.</p><p class="" style="white-space:pre-wrap;">Meanwhile, I really hope that folks can occasionally turn from the what-is-creativity debates at times and realize the amount of power that’s at play here in these ML systems. For machine learning, we are not comparing people to a merely different kind of person. We’re comparing people with giants.</p>
</div>]]></content:encoded>
      <excerpt:encoded />
      <wp:post_name>adventures-in-ai-ethics-part-2-stable-diffusion-v2-and-the-curse-of-scale</wp:post_name>
      <wp:post_type>post</wp:post_type>
      <wp:post_id>1</wp:post_id>
      <wp:status>publish</wp:status>
      <pubDate>Mon, 12 Dec 2022 02:49:05 +0000</pubDate>
      <wp:post_date>2022-12-12 02:49:05</wp:post_date>
      <wp:post_date_gmt>2022-12-12 02:49:05</wp:post_date_gmt>
      <dc:creator>waller.matthew@gmail.com</dc:creator>
      <wp:comment_status>closed</wp:comment_status>
    </item>
    <item>
      <title>On Creating an On-Device Stable Diffusion App, &amp;amp; Deciding Not to Release It: Adventures in AI Ethics</title>
      <link>/blog/on-creating-an-on-device-stable-diffusion-app-amp-deciding-not-to-release-it-adventures-in-ai-ethics</link>
      <content:encoded><![CDATA[<div class="sqs-html-content">
  <p class="" style="white-space:pre-wrap;">The app was approved in the App Store. It had gotten through app review. I had more than 900 beta testers in the public beta. So many <a href="https://twitter.com/wattmaller1/status/1581284065197445122?s=20&amp;t=ogx50n3wIVNk6o0dZJlFsw">retweets</a> and <a href="https://twitter.com/wattmaller1/status/1573768941096374274?s=20&amp;t=ogx50n3wIVNk6o0dZJlFsw">likes of my snippets of my work </a>throughout the development process. This was going to be my biggest side-project app, and I’ve already made apps on the side that generated enough for a 20-hour-a-week job, which I then sold off for work-life balance. This one though, I had the dollar signs in my eyes.</p><p class="" style="white-space:pre-wrap;">The reason it was interesting was because I figured out how to do a powerful image generation technique - previously only accessible via a cloud server or a beefy laptop - all on a phone. This opened up the chance for me to drastically out-price competitors relying on expensive cloud servers and have much more control over the experience.</p><p class="" style="white-space:pre-wrap;">And I had accomplished amazing technical marvels. My first image took an hour on a 4-year-old iPhone. I later got it does to 15 minutes on that phone. And down to 2 minutes on a new phone! (Sidenote, this was because I figured out how to get the model running on the Apple Neural Engine, a thing I previously thought was all marketing speak for internals that only matter to our internal camera team and what not. Let me tell you: getting that thing running on there was just doubled my speed and memory efficiency. <a href="https://machinelearning.apple.com/research/neural-engine-transformers">Here is one helpful link</a>.)</p><p class="" style="white-space:pre-wrap;">Then at another person’s behest, I started looking at ways I could support the artists whose work had been used to train the model originally, since I wasn’t the original trainer or purveyor of the dataset. I went down that path, and I’ve come out the other side saying, no, this version of my app, which uses <a href="https://huggingface.co/spaces/stabilityai/stable-diffusion">Stable DIffusion</a> as trained on the <a href="https://laion.ai/blog/laion-5b/">LAION-5B</a> dataset (the 5B meaning more than 5 billion and scraped from the Internet and not curated), should not be released. Dang it.</p><h2 style="white-space:pre-wrap;">Part One: License</h2><p class="" style="white-space:pre-wrap;">I did do a bit of research at the outset as to whether it was legal to use the stable diffusion in an app. I looked at the <a href="https://huggingface.co/spaces/CompVis/stable-diffusion-license">license</a> and determined, yeah, that’s pretty dang broad and the main portion is that you have the user agree to terms of use, which amounts to: don’t do bad stuff with this.</p><p class="" style="white-space:pre-wrap;">Besides, I had already seen a dozen projects on Twitter showing off this and that use of Stable Diffusion, and not to mention that the company involved in its creation, Stability.ai, has its for-profit version called DreamStudio active.</p><p class="" style="white-space:pre-wrap;">So while all the messaging on the sites says “for research only,” it all has a wink-wink vibe in the way that everyone is using it, and in the permissiveness of the license, and in the company’s own practice.</p><p class="" style="white-space:pre-wrap;">There friends, is where I fell for the classic, well-everyone-else-is-doing-it bit. And you know what an over-fit machine learning model will tell you to do if it’s trained on everyone else doing it? Jump in.</p><h2 style="white-space:pre-wrap;">Part Two: Safety</h2><p class="" style="white-space:pre-wrap;">Look, you can generate terrible, terrible images with these things if you’re set on it. The original model has an NSFW filter at the tail end. However, for the coder, it’s trivial to disable. </p><p class="" style="white-space:pre-wrap;">I decided to put my checker up front, checking the text, do the best I could to account for the <a href="https://en.wikipedia.org/wiki/Scunthorpe_problem">Scunthorpe problem</a> and leave it at that. I even pat myself on the back because at least in my version, there isn’t a feasible way of disabling the security check without breaking your phone. And I was prepared to enable an additional NSFW filter at the end.</p><p class="" style="white-space:pre-wrap;">Could someone still find the magic word combo to generate awful images? Undoubtedly. The tradeoff of letting the fast majority of well meaning people with an iPhone or iPad or Mac generate images for their business or for fun seemed to outweigh the potential harm. So, I considered myself good there.</p><h2 style="white-space:pre-wrap;">Part Three: Robots Taking Jobs</h2><p class="" style="white-space:pre-wrap;">One thing that you’ve got to consider in ML is, are you going to automate people away? On the level of society, I think we’ll always have work that people want done. Every time I make software that does a job 10 times better someone says, “that’s great, now could it also do 20 other things?” Even if we got to the point where AI generated 100 percent of what we need, we would probably demand that the quality of what we have increase by 1,000 percent, and/or we would consume 10,000 times as much. And folks would find work making that happen.</p><p class="" style="white-space:pre-wrap;">The bigger concern is in the micro picture. Sure technology can eventually create more jobs, but you have real people who have to sacrifice time and energy retraining for those jobs. The shift isn’t without cost.</p><p class="" style="white-space:pre-wrap;">That’s big picture, but in the end, that cost is worthwhile to everyone involved, in my estimation. For image generation, the generator is more of a straightforward tool. Already, existing professional artists are the best at generating prompts to make the best art. Probably because their work involves so much communication with clients already about what they want. And there will be back and forth. A person will say, that’s not quite right, the character’s arm should be a little lower, and their brow should be more furrowed. And even if you could circle part of the image and dictate what you want, at that point it gets closer to Photoshop.</p><p class="" style="white-space:pre-wrap;">In the end, you need people at the helm of the tools, and folks making a living in visual arts will adapt, and probably adapt more quickly than a lot of transitions.</p><h2 style="white-space:pre-wrap;">Part Four: Exploitation</h2><p class="" style="white-space:pre-wrap;">This is the part I couldn’t get past. </p><p class="" style="white-space:pre-wrap;">I couldn’t exactly say, hey, you wrote “a rose” as your prompt so I give every copyrighted artist with “rose” in the prompt a 2 billionth of a cent. Mostly because that’s not how these ML systems work. You might’ve had an image of a “plant” or the color “red” for a red rose contribute but there really isn’t a way to clearly know.</p><p class="" style="white-space:pre-wrap;">For a bit I considered, hey, what if I set aside proceeds from my app to give to an artist advocacy organization, and give “royalties” voluntarily and as best I could that way?</p><p class="" style="white-space:pre-wrap;">That’s a nice gesture, but in the end, if everything went perfectly, I would be making bank on artists who in no way gave their consent to be used in a machine learning project. They were guarding their art and it was ripped from them. And I would be profiting. I could say, well it’s those Stability.ai folks who really should pay. If I release the app as is though, I’m part of the chain of responsibility. </p><p class="" style="white-space:pre-wrap;">It’s also kind of egregious. I swear that half the prompts I see have <a href="https://www.technologyreview.com/2022/09/16/1059598/this-artist-is-dominating-ai-generated-art-and-hes-not-happy-about-it/">Greg Rutkowski’s</a> name in there, and he had no say in his art getting used.</p><p class="" style="white-space:pre-wrap;">It’s murky enough when we worry that a person’s voice is stolen for a text-to-speech situation or an AI assistant. This is hundreds of times worse.</p><p class="" style="white-space:pre-wrap;">So that’s where I hang up my hat. I’m more amenable to folks using it for parody and play. If it stayed there it would be fine. But it can’t. The system is way too cool and useful. A lot of folks are going to make a lot of money. Just, for now, not me.</p><h2 style="white-space:pre-wrap;">Where to now?</h2><p class="" style="white-space:pre-wrap;">You’ve probably noticed that I’ve said things like “for now” a lot. If Stability.ai trains on a checkpoint free of copyrighted material, I am down to use that. Or at least a checkpoint where artists have been given the chance to opt out. </p><p class="" style="white-space:pre-wrap;">(Heaven knows I’ve toyed with the idea of training a model myself. Might take a little bit, but I know the precise steps.)</p><p class="" style="white-space:pre-wrap;">In the meantime, I’ll let the code get a little dusty. Close up the beta. And sigh at all the cool, for-profit demos people will post of Stable Diffusion derivatives.</p><p class="" style="white-space:pre-wrap;">Yes, the genie is out of the bottle. Doesn’t mean I have to make wishes.</p>
</div>]]></content:encoded>
      <excerpt:encoded />
      <wp:post_name>on-creating-an-on-device-stable-diffusion-app-amp-deciding-not-to-release-it-adventures-in-ai-ethics</wp:post_name>
      <wp:post_type>post</wp:post_type>
      <wp:post_id>2</wp:post_id>
      <wp:status>publish</wp:status>
      <pubDate>Thu, 03 Nov 2022 15:10:19 +0000</pubDate>
      <wp:post_date>2022-11-03 15:10:19</wp:post_date>
      <wp:post_date_gmt>2022-11-03 15:10:19</wp:post_date_gmt>
      <dc:creator>waller.matthew@gmail.com</dc:creator>
      <wp:comment_status>closed</wp:comment_status>
    </item>
    <item>
      <title>The Secret iOS Database Syncing Option You Didn’t Know About, for iPad on Swift Playgrounds &amp;amp; Beyond</title>
      <link>/blog/the-secret-ios-database-syncing-option-you-didnt-know-about-for-ipad-on-swift-playgrounds-amp-beyond</link>
      <content:encoded><![CDATA[<div class="sqs-html-content">
  <p class="" style="white-space:pre-wrap;">There is one thing you kind of got to have as an option when you’re making a utility app with generated data: to-dos, recipes, notes, etc.</p><p class="" style="white-space:pre-wrap;">You’ve got to let the person sync their data across all of their devices. iPhone, iPad, Mac; it has got to be everywhere.</p><p class="" style="white-space:pre-wrap;">So how do you do it?</p><p class="" style="white-space:pre-wrap;">If you’re thinking of going cross platform, you might go for AWS’s Amplify library, or of course, Firebase. (You can even still run <a href="https://github.com/parse-community/Parse-Swift">a thriving Parse database</a>! <a href="https://www.back4app.com">Even an easy third-party hosted one</a>!) </p><p class="" style="white-space:pre-wrap;">However, those can cost money down the line. And if you’re happy to have an Apple-only app, CloudKit is a great way to go. Especially with relatively simple integration with CoreData. (And especially now that you can sell an app you’ve built with CloudKit, and transfer it to another account, something you couldn’t do before. I sold an app once that used CloudKit, and to get around things, I had to transfer the whole LLC! Thankfully, looks like those days are gone).</p><p class="" style="white-space:pre-wrap;">CloudKit+CoreData is what I used for <a href="https://apps.apple.com/us/app/pearl-wellness-reminders/id1567837432">Pearl</a>, but when I wanted to make data sync with <a href="https://apps.apple.com/us/app/todont/id1601697790">ToDon’t</a>, the app I made all on iPad’s Swift Playgrounds, I couldn’t use it! Rats!</p><p class="" style="white-space:pre-wrap;">I did notice, however, another permission allowed by Swift Playgrounds: Reminders.</p><p class="" style="white-space:pre-wrap;">That’s right, you can use the Reminders app as a dataset. You can make a reminder with a bunch of metadata, and decode that into your object. As long as your customer doesn’t mind having a custom list for your app in the Reminders app, you’re good to go. Oh, and it should be worth mentioning that you can only have 50,000 Reminders in that app. If you do have that many, I’m so sorry. Please consider a seaside vacation.</p><p class="" style="white-space:pre-wrap;">So, how does this work?</p><h3 style="white-space:pre-wrap;">The Basic App</h3><p class="" style="white-space:pre-wrap;">Let’s start with our basic task list using CoreData. Here I give you, an entire CoreData task app! It’s not very fully featured. You just add items sorted alphabetically by name. But it’s a start!</p>
</div>



<pre><code>import CoreData
import SwiftUI

struct ContentView: View {
    @Environment(\.managedObjectContext) private var viewContext

    @FetchRequest(sortDescriptors: [
        NSSortDescriptor(keyPath: \TaskItem.name, ascending: true)
    ], animation: .default)
    private var items: FetchedResults&lt;TaskItem&gt;

    @State private var itemText = ""

    var body: some View {
        VStack {
            TextField("Add Note Here", text:$itemText) {
                let task = TaskItem(context: viewContext)
                task.name = itemText
                task.complete = false
                try? viewContext.save()
            }
            List(items) { item in
                VStack {
                    if !item.complete {
                        Text(item.name ?? "Unknown")
                    } else {
                        Text(item.name ?? "Unknown")
                            .strikethrough()
                        }
                }
                .onTapGesture {
                        viewContext.perform {
                            item.complete.toggle()
                            try! viewContext.save()
                        }
                    }
            }
        }
        .padding()
    }
}

struct ContentView_Previews: PreviewProvider {
    static var previews: some View {
        ContentView()
    }
}

@objc(TaskItem)
class TaskItem: NSManagedObject {
    @NSManaged var complete: Bool
    @NSManaged var name: String?
}

extension TaskItem: Identifiable {
    var id: NSManagedObjectID {
        self.objectID
    }
}

class Persistence {
    static let shared = Persistence()

    static let previewFull: Persistence = {
        let result = Persistence(inMemory: true)
        let context = result.container.viewContext
        for index in 0 ..&lt; 5 {
            let task = TaskItem(context: context)
            task.name = "Task \(index + 1)"
            task.complete = false

            context.perform {
                try! context.save()
            }
        }
        return result
    }()

    let container: NSPersistentContainer

    init(inMemory: Bool = false) {
        let taskEntity = NSEntityDescription()
        taskEntity.name = "TaskItem"
        taskEntity.managedObjectClassName = "TaskItem"

        let nameAttribute = NSAttributeDescription()
        nameAttribute.name = "name"
        nameAttribute.type = .string
        taskEntity.properties.append(nameAttribute)

        let completeAttribute = NSAttributeDescription()
        completeAttribute.name = "complete"
        completeAttribute.type = .boolean
        taskEntity.properties.append(completeAttribute)

        let model = NSManagedObjectModel()
        model.entities = [taskEntity]

        let container = NSPersistentContainer(name: "TaskModel", managedObjectModel: model)

        if inMemory {
            container.persistentStoreDescriptions.first!.url = URL(fileURLWithPath: "/dev/null")
        }

        container.loadPersistentStores { description, error in
            if let error = error {
                fatalError("failed with: \(error.localizedDescription)")
            }
        }

        container.viewContext.mergePolicy = NSMergeByPropertyObjectTrumpMergePolicy

        container.viewContext.automaticallyMergesChangesFromParent = true
        self.container = container
    }
}

@main
struct QuickTaskAppApp: App {
    let persistence = Persistence.shared
    var body: some Scene {
        WindowGroup {
            ContentView()
                .environment(\.managedObjectContext, persistence.container.viewContext)
        }
    }
}</code></pre>


<div class="sqs-html-content">
  <h3 style="white-space:pre-wrap;">Sync Strategy</h3><p class="" style="white-space:pre-wrap;">Now, there are a lot of ways you can implement syncing.</p><p class="" style="white-space:pre-wrap;">My method is to let the user have two versions of their data. They have their device TaskItems, and they have the TaskItems that reflect what is in the Reminders app.</p><p class="" style="white-space:pre-wrap;">That way, they can flip a toggle and see the TaskItems that are only on the iPhone, or turn the toggle on and see the ones that are shared between all the devices.</p><p class="" style="white-space:pre-wrap;">We’ll add a property to TaskItem called reminderId. And we’ll make it optional. This will correspond to the shared id of the Reminder object. If a TaskItem has this, then we know that it has a twin in the Reminders app, and needs to be updated to reflect it when it is synced.</p><p class="" style="white-space:pre-wrap;">Now, we won’t get any fancy silent pushes to update ourselves like we would with CloudKit and CoreData. So we’ll want to sync to the latest when the app becomes active or comes to the foreground, along with a pull to refresh.</p><p class="" style="white-space:pre-wrap;">And when we edit our task items, we’ll want to create a version of the item in reminders too.</p><p class="" style="white-space:pre-wrap;">We won’t go into editing the individual items, but if we did, and we edited a TaskItem with a pair in the Reminders app, we would need to make sure to update that reminder too.</p><p class="" style="white-space:pre-wrap;">On to the code!</p><p class="" style="white-space:pre-wrap;">I add this to the Persistence initializer:</p>
</div>



<pre><code>let reminderIdAttribute = NSAttributeDescription()
                reminderIdAttribute.name = "reminderId"
                reminderIdAttribute.type = .string
                taskEntity.properties.append(reminderIdAttribute)</code></pre>


<div class="sqs-html-content">
  <p class="" style="white-space:pre-wrap;">And we update TaskItem.</p>
</div>



<pre><code>@objc(TaskItem)
class TaskItem: NSManagedObject {
    @NSManaged var complete: Bool
    @NSManaged var name: String?
    @NSManaged var reminderId: String?
}</code></pre>


<div class="sqs-html-content">
  <p class="" style="white-space:pre-wrap;">Now, I’m going to dump a rather large class called the ReminderManager. And I’ll mark it up with numbers to highlight certain parts.</p>
</div>



<pre><code>class ReminderManager {
    let store = EKEventStore()
    static let shared = ReminderManager()

    // 1
    static func predicate(isSynced: Bool) -&gt; NSPredicate {
        if isSynced {
            return NSPredicate(format: "reminderId != nil")
        } else {
            return NSPredicate(format: "reminderId == nil")
        }
    }

    // 2
    func migrateExistingTasks(context: NSManagedObjectContext) {
        let fetchRequest = TaskItem.fetchRequest()
        fetchRequest.predicate = NSPredicate(format: "reminderId == nil")
        guard let tasks = try? context.fetch(fetchRequest) as? [TaskItem] else {
            return
        }

        for task in tasks {
            createReminder(item: task, context: context)
        }
    }

    // 3
    func syncCoreDataWithReminders(context: NSManagedObjectContext, isSynced: Bool) {
        guard isSynced else {
            return
        }

        let fetchRequest = TaskItem.fetchRequest()
        let taskPredicate = NSPredicate(format: "reminderId != nil", argumentArray: nil)
        fetchRequest.predicate = taskPredicate
        guard let tasks = try? context.fetch(fetchRequest) as? [TaskItem] else {
            return
        }

        var tasksThatAreRemindersDictionary: [String: TaskItem] = [:]

        for task in tasks {
            if let reminderId = task.reminderId {
                tasksThatAreRemindersDictionary[reminderId] = task
            }
        }

        do {
            let remindersList = try reminderCategory()
            let predicate: NSPredicate = store.predicateForReminders(in: [remindersList])
            store.fetchReminders(matching: predicate) { reminders in
                if let reminders = reminders {
                    for reminder in reminders {
                        if let existingTask = tasksThatAreRemindersDictionary[reminder.calendarItemExternalIdentifier] {
                            existingTask.complete = reminder.isCompleted
                            existingTask.name = reminder.title
                            tasksThatAreRemindersDictionary[reminder.calendarItemExternalIdentifier] = nil
                        } else {
                            let newTask = TaskItem(context: context)
                            newTask.complete = reminder.isCompleted
                            newTask.name = reminder.title
                            newTask.reminderId = reminder.calendarItemExternalIdentifier
                        }
                    }
                }
                // iterate through the leftover task and delete them.
                for task in tasksThatAreRemindersDictionary.values {
                    print("Deleting")
                    context.delete(task)
                }
            }
        } catch {
            print(error.localizedDescription)
        }

        do {
            try context.save()
        } catch {
            print(error.localizedDescription)
        }
    }

    // 4
    func saveReminderAfterEditingCoreData(tasks: [TaskItem], context: NSManagedObjectContext, delete: Bool = false, isSynced: Bool) {
        if isSynced {
            if delete {
                for task in tasks {
                    deleteTaskFromReminder(task: task)
                }
            } else {
                for task in tasks {
                    if let reminderId = task.reminderId, let reminder = store.calendarItems(withExternalIdentifier: reminderId).first as? EKReminder {
                        reminder.isCompleted = task.complete
                        reminder.title = task.name

                        do {
                            try store.save(reminder, commit: true)
                        } catch {
                            print("Failed to save reminder \(error.localizedDescription)")
                        }
                    } else {
                        createReminder(item: task, context: context)
                    }
                }
            }
        }


        do {
            try context.save()
        } catch {
            print(error.localizedDescription)
        }
    }

    // 5
    func createReminder(item: TaskItem, context: NSManagedObjectContext) {
        let reminder = EKReminder(eventStore: store)
        reminder.title = item.name
        reminder.isCompleted = item.complete
        do{
            reminder.calendar = try reminderCategory()
            try store.save(reminder, commit: true)
            item.reminderId = reminder.calendarItemExternalIdentifier
            try context.save()
            print(reminder, "saved")
        } catch {
            print("couldnt save: \(error.localizedDescription)")
        }
    }

    // 6
    func deleteTaskFromReminder(task: TaskItem) {
        if let reminderId = task.reminderId, let reminder = store.calendarItems(withExternalIdentifier: reminderId).first as? EKReminder {
            do {
                try store.remove(reminder, commit: true)
            } catch {
                print(error.localizedDescription)
            }
        }
    }

    // 7
    func requestReminderAccess() async -&gt; Bool {
        do {
            let isAllowed = try await store.requestAccess(to: .reminder)
            return isAllowed
        } catch {
            print(error.localizedDescription)
            return false
        }
    }

    // 8
    func reminderCategory() throws -&gt; EKCalendar {
        let calendars = store.calendars(for: .reminder)
        let calendarName = "QuickTaskApp"
        if let taskCalendar = calendars.first(where: {$0.title == calendarName}) { return taskCalendar }

        let calendar = EKCalendar(for: .reminder, eventStore: store)
        calendar.title = calendarName
        // NOTE! The defaultCalendarForNewReminders will be nil on simulator
        calendar.source = store.defaultCalendarForNewReminders()?.source
        try store.saveCalendar(calendar, commit: true)
        return calendar
    }
}</code></pre>


<div class="sqs-html-content">
  <p class="" style="white-space:pre-wrap;">Here we go!</p><ol data-rte-list="default"><li><p class="" style="white-space:pre-wrap;">This is a little static function that returns a predicate. We’ll use this later to tell the list to only show TaskItems with a reminderId when the toggle for sync is on, and to only show TaskItems with a nil reminderId when the toggle for sync is off.</p></li><li><p class="" style="white-space:pre-wrap;">This is a little convenience bit for later if you want. If the user says, okay, I flipped the switch, but I want my existing tasks synced, you can create a button to press that will trigger this and it will make a copy of all the tasks and put them in the Reminders app.</p></li><li><p class="" style="white-space:pre-wrap;">This is what you would call to make sure your synced tasks are up to date with the Reminders app reminders, so maybe when the app appears, or during a pull to refresh. Notice that toward the end of the function, we even delete tasks if they don’t have a corresponding reminder. That’s because the user might’ve deleted them on a different device, and we need to reflect that.</p></li><li><p class="" style="white-space:pre-wrap;">This is what we would use to save a task after editing it, like marking it complete.</p></li><li><p class="" style="white-space:pre-wrap;">Pretty self-explanatory. We make the reminder!</p></li><li><p class="" style="white-space:pre-wrap;">This one too. We delete.</p></li><li><p class="" style="white-space:pre-wrap;">Ah, yes, you’ll need this one. And you’ll need to update your info.plist to include a privacy permission string.</p></li><li><p class="" style="white-space:pre-wrap;">This is where we grab our custom calendar inside the Reminders app. A calendar just means a list in our case. And if it doesn’t exist, we create it.</p></li></ol><h3 style="white-space:pre-wrap;">Updating the View for Syncing</h3><p class="" style="white-space:pre-wrap;">Awesome, I’ll add in the updated ContentView with more notes.</p>
</div>



<pre><code>struct ContentView: View {
    @Environment(\.managedObjectContext) private var viewContext

    // 1
    @AppStorage("syncReminders") var isSynced = false

    // 2
    @FetchRequest(
        sortDescriptors: [NSSortDescriptor(keyPath: \TaskItem.name, ascending: true)],
        predicate: ReminderManager.predicate(isSynced: UserDefaults.standard.bool(forKey: "syncReminders")),
        animation: .default)
    private var tasks: FetchedResults&lt;TaskItem&gt;

    @State private var itemText = ""

    var body: some View {
        VStack {
            Toggle("Show Synced", isOn: $isSynced)
            TextField("Add Note Here", text:$itemText) {
                let task = TaskItem(context: viewContext)
                task.name = itemText
                task.complete = false

                // 3
                ReminderManager.shared.saveReminderAfterEditingCoreData(tasks: [task], context: viewContext, isSynced: isSynced)
            }
            List(tasks) { task in
                HStack {
                    VStack {
                        if !task.complete {
                            Text(task.name ?? "Unknown")
                        } else {
                            Text(task.name ?? "Unknown")
                                .strikethrough()
                            }
                    }
                    .frame(maxWidth: .infinity, alignment: .leading)
                    .contentShape(Rectangle())
                    .onTapGesture {
                            viewContext.perform {
                                task.complete.toggle()
                                ReminderManager.shared.saveReminderAfterEditingCoreData(tasks: [task], context: viewContext, isSynced: isSynced)
                            }
                        }
                    Button {
                        // 4
                        viewContext.delete(task)
                        ReminderManager.shared.saveReminderAfterEditingCoreData(tasks: [task], context: viewContext, delete: true, isSynced: isSynced)
                    } label: {
                        Image(systemName: "trash")
                            .foregroundColor(.red)
                    }

                }
            }
        } // 5
        .refreshable {
            ReminderManager.shared.syncCoreDataWithReminders(context: viewContext, isSynced: isSynced)
        }
        .padding()
        .task { // 6
            _ = await ReminderManager.shared.requestReminderAccess()
        }
        .onChange(of: isSynced) { newValue in
            if newValue {
                ReminderManager.shared.syncCoreDataWithReminders(context: viewContext, isSynced: newValue)
            }

            // 7
            tasks.nsPredicate = ReminderManager.predicate(isSynced: isSynced)
        }
    }
}</code></pre>


<div class="sqs-html-content">
  <ol data-rte-list="default"><li><p class="" style="white-space:pre-wrap;">Here we make our “syncReminders” boolean stored in UserDefaults easily accessible.</p></li><li><p class="" style="white-space:pre-wrap;">This looks a little odd. I would love to access the @AppStorage value inside of this predicate initialization, but you can’t do that unless you pass it in through an initializer. You get errors. So what I did instead, since I’m only working with one view right now, is to grab it directly from UserDefaults. You might think you could do this via onAppear and set the required predicate there, but there was a bit of transition flicker and animation when I did that. But overall, this is so that we remember how to filter our CoreData when the user leaves the app and comes back.</p></li><li><p class="" style="white-space:pre-wrap;">Here is where we create our task! You’ll notice that whenever I call saveReminderAfterEditingCoreData, I don’t save the viewContext after that line. That’s because I’m already saving with the viewContext inside that method. So we’re good.</p></li><li><p class="" style="white-space:pre-wrap;">Just for convenience of demo, I added a trash icon on the list. Otherwise, to get the more fancy slide over you need to add a ForEach and so on and I’m lazy. This is just so you can demo deleting.</p></li><li><p class="" style="white-space:pre-wrap;">Here is that refreshable! Now we can manually update our synced data.</p></li><li><p class="" style="white-space:pre-wrap;">Here is the reminder access request since it’s an async method, we put it in this task. This way you could take that returned value that I’m not doing anything with and show or hide the sync toggle and such.</p></li><li><p class="" style="white-space:pre-wrap;">And here is where we set the predicate depending on whether the toggle is enabled or not.</p></li></ol><p class="" style="white-space:pre-wrap;">That’s pretty much it! Let’s see it in action!</p>
</div>



<div class="intrinsic" style="max-width:100%"><div class="embed-block-wrapper " style="padding-bottom:56.20609%;"><div class="sqs-video-wrapper" data-provider-name="YouTube" data-html="<br/><br/><br/><br/><br/><br/>  <br/>  &lt;iframe src=&quot;//www.youtube.com/embed/aH1EeKHN3uI?wmode=opaque&quot; height=&quot;480&quot; width=&quot;854&quot; scrolling=&quot;no&quot; frameborder=&quot;0&quot; allowfullscreen&gt;&lt;/iframe&gt;<br/><br/>"></div></div></div>

<div class="sqs-html-content">
  <h3 style="white-space:pre-wrap;">Odds and Ends and Troubleshooting</h3><p class="" style="white-space:pre-wrap;">There are several things to keep in mind.</p><p class="" style="white-space:pre-wrap;">What if you want to save more metadata? Like a subtitle or a starred state, etc.</p><p class="" style="white-space:pre-wrap;">What I did was create a Codable struct of my metadata and then convert that to a json string and then save it in the .notes property of the reminder. That worked well!</p><p class="" style="white-space:pre-wrap;">What if you want to save an image or a video?</p><p class="" style="white-space:pre-wrap;">For an image, there is a way to attach images to reminders within the Reminders app, but I haven’t seen a way to access that in EventKit. Maybe there is, but I haven’t found it. If I wanted to attach an image though, I might get desperate and convert a reasonably compressed image into a string of bytes, save that to my metadata struct, and then recreate it when I want to display. It’s a long path, but hey, we’re hacking here.</p><p class="" style="white-space:pre-wrap;">As for a video, usually folks will say to store those as urls anyway, so you would probably want to create some authentication and save the video in S3 or Azure or Google Cloud blob storage, and then access it that way. It would, for iPad Playgrounds, require doing a lot of that authentication and video fetching from scratch.</p><p class="" style="white-space:pre-wrap;">A little warning: if the user hasn’t opened their Reminders ever, chances are you’ll be creating a local list, instead of an iCloud list. For troubleshooting, in the Reminders app you’ll see the local list under the “Local” heading.</p><p class="" style="white-space:pre-wrap;">Also, beware the simulator. The simulator doesn’t do syncing very well, with iCloud or anything else. I think it’s not getting the silent pushes in the Reminders app. So I had to restart the Reminders app and then I could get the updates each time. From the video, it works pretty well on the actual device.</p><p class="" style="white-space:pre-wrap;">And here you go! Here is the full code! Pasting the full code below. And if this was helpful and you want to support, download <a href="https://apps.apple.com/us/app/todont/id1601697790">ToDon’t</a> and/or  <a href="https://apps.apple.com/us/app/pearl-wellness-reminders/id1567837432">Pearl</a> and leave a nice review, or tip with an in-app purchase (ToDon’t is the cheaper one).</p><p class="" style="white-space:pre-wrap;">Thanks y’all!</p>
</div>



<pre><code>import CoreData
import EventKit
import SwiftUI

struct ContentView: View {
    @Environment(\.managedObjectContext) private var viewContext

    // 1
    @AppStorage("syncReminders") var isSynced = false

    // 2
    @FetchRequest(
        sortDescriptors: [NSSortDescriptor(keyPath: \TaskItem.name, ascending: true)],
        predicate: ReminderManager.predicate(isSynced: UserDefaults.standard.bool(forKey: "syncReminders")),
        animation: .default)
    private var tasks: FetchedResults&lt;TaskItem&gt;

    @State private var itemText = ""

    var body: some View {
        VStack {
            Toggle("Show Synced", isOn: $isSynced)
            TextField("Add Note Here", text:$itemText) {
                let task = TaskItem(context: viewContext)
                task.name = itemText
                task.complete = false

                // 3
                ReminderManager.shared.saveReminderAfterEditingCoreData(tasks: [task], context: viewContext, isSynced: isSynced)
            }
            List(tasks) { task in
                HStack {
                    VStack {
                        if !task.complete {
                            Text(task.name ?? "Unknown")
                        } else {
                            Text(task.name ?? "Unknown")
                                .strikethrough()
                            }
                    }
                    .frame(maxWidth: .infinity, alignment: .leading)
                    .contentShape(Rectangle())
                    .onTapGesture {
                            viewContext.perform {
                                task.complete.toggle()
                                ReminderManager.shared.saveReminderAfterEditingCoreData(tasks: [task], context: viewContext, isSynced: isSynced)
                            }
                        }
                    Button {
                        // 4
                        viewContext.delete(task)
                        ReminderManager.shared.saveReminderAfterEditingCoreData(tasks: [task], context: viewContext, delete: true, isSynced: isSynced)
                    } label: {
                        Image(systemName: "trash")
                            .foregroundColor(.red)
                    }

                }
            }
        } // 5
        .refreshable {
            ReminderManager.shared.syncCoreDataWithReminders(context: viewContext, isSynced: isSynced)
        }
        .padding()
        .task { // 6
            _ = await ReminderManager.shared.requestReminderAccess()
        }
        .onChange(of: isSynced) { newValue in
            if newValue {
                ReminderManager.shared.syncCoreDataWithReminders(context: viewContext, isSynced: newValue)
            }

            // 7
            tasks.nsPredicate = ReminderManager.predicate(isSynced: isSynced)
        }
    }
}

struct ContentView_Previews: PreviewProvider {
    static var previews: some View {
        ContentView()
    }
}

@objc(TaskItem)
class TaskItem: NSManagedObject {
    @NSManaged var complete: Bool
    @NSManaged var name: String?
    @NSManaged var reminderId: String?
}

extension TaskItem: Identifiable {
    var id: NSManagedObjectID {
        self.objectID
    }
}

class Persistence {
    static let shared = Persistence()

    static let previewFull: Persistence = {
        let result = Persistence(inMemory: true)
        let context = result.container.viewContext
        for index in 0 ..&lt; 5 {
            let task = TaskItem(context: context)
            task.name = "Task \(index + 1)"
            task.complete = false

            context.perform {
                try! context.save()
            }
        }
        return result
    }()

    let container: NSPersistentContainer

    init(inMemory: Bool = false) {
        let taskEntity = NSEntityDescription()
        taskEntity.name = "TaskItem"
        taskEntity.managedObjectClassName = "TaskItem"

        let nameAttribute = NSAttributeDescription()
        nameAttribute.name = "name"
        nameAttribute.type = .string
        taskEntity.properties.append(nameAttribute)

        let completeAttribute = NSAttributeDescription()
        completeAttribute.name = "complete"
        completeAttribute.type = .boolean
        taskEntity.properties.append(completeAttribute)

        let reminderIdAttribute = NSAttributeDescription()
                reminderIdAttribute.name = "reminderId"
                reminderIdAttribute.type = .string
                taskEntity.properties.append(reminderIdAttribute)

        let model = NSManagedObjectModel()
        model.entities = [taskEntity]

        let container = NSPersistentContainer(name: "TaskModel", managedObjectModel: model)

        if inMemory {
            container.persistentStoreDescriptions.first!.url = URL(fileURLWithPath: "/dev/null")
        }

        container.loadPersistentStores { description, error in
            if let error = error {
                fatalError("failed with: \(error.localizedDescription)")
            }
        }

        container.viewContext.mergePolicy = NSMergeByPropertyObjectTrumpMergePolicy

        container.viewContext.automaticallyMergesChangesFromParent = true
        self.container = container
    }
}

@main
struct QuickTaskAppApp: App {
    let persistence = Persistence.shared
    var body: some Scene {
        WindowGroup {
            ContentView()
                .environment(\.managedObjectContext, persistence.container.viewContext)
        }
    }
}

class ReminderManager {
    let store = EKEventStore()
    static let shared = ReminderManager()

    // 1
    static func predicate(isSynced: Bool) -&gt; NSPredicate {
        if isSynced {
            return NSPredicate(format: "reminderId != nil")
        } else {
            return NSPredicate(format: "reminderId == nil")
        }
    }

    // 2
    func migrateExistingTasks(context: NSManagedObjectContext) {
        let fetchRequest = TaskItem.fetchRequest()
        fetchRequest.predicate = NSPredicate(format: "reminderId == nil")
        guard let tasks = try? context.fetch(fetchRequest) as? [TaskItem] else {
            return
        }

        for task in tasks {
            createReminder(item: task, context: context)
        }
    }

    // 3
    func syncCoreDataWithReminders(context: NSManagedObjectContext, isSynced: Bool) {
        guard isSynced else {
            return
        }

        let fetchRequest = TaskItem.fetchRequest()
        let taskPredicate = NSPredicate(format: "reminderId != nil", argumentArray: nil)
        fetchRequest.predicate = taskPredicate
        guard let tasks = try? context.fetch(fetchRequest) as? [TaskItem] else {
            return
        }

        var tasksThatAreRemindersDictionary: [String: TaskItem] = [:]

        for task in tasks {
            if let reminderId = task.reminderId {
                tasksThatAreRemindersDictionary[reminderId] = task
            }
        }

        do {
            let remindersList = try reminderCategory()
            let predicate: NSPredicate = store.predicateForReminders(in: [remindersList])
            store.fetchReminders(matching: predicate) { reminders in
                if let reminders = reminders {
                    for reminder in reminders {
                        if let existingTask = tasksThatAreRemindersDictionary[reminder.calendarItemExternalIdentifier] {
                            existingTask.complete = reminder.isCompleted
                            existingTask.name = reminder.title
                            tasksThatAreRemindersDictionary[reminder.calendarItemExternalIdentifier] = nil
                        } else {
                            let newTask = TaskItem(context: context)
                            newTask.complete = reminder.isCompleted
                            newTask.name = reminder.title
                            newTask.reminderId = reminder.calendarItemExternalIdentifier
                        }
                    }
                }
                // iterate through the leftover task and delete them.
                for task in tasksThatAreRemindersDictionary.values {
                    print("Deleting")
                    context.delete(task)
                }
            }
        } catch {
            print(error.localizedDescription)
        }

        do {
            try context.save()
        } catch {
            print(error.localizedDescription)
        }
    }

    // 4
    func saveReminderAfterEditingCoreData(tasks: [TaskItem], context: NSManagedObjectContext, delete: Bool = false, isSynced: Bool) {
        if isSynced {
            if delete {
                for task in tasks {
                    deleteTaskFromReminder(task: task)
                }
            } else {
                for task in tasks {
                    if let reminderId = task.reminderId, let reminder = store.calendarItems(withExternalIdentifier: reminderId).first as? EKReminder {
                        reminder.isCompleted = task.complete
                        reminder.title = task.name

                        do {
                            try store.save(reminder, commit: true)
                        } catch {
                            print("Failed to save reminder \(error.localizedDescription)")
                        }
                    } else {
                        createReminder(item: task, context: context)
                    }
                }
            }
        }


        do {
            try context.save()
        } catch {
            print(error.localizedDescription)
        }
    }

    // 5
    func createReminder(item: TaskItem, context: NSManagedObjectContext) {
        let reminder = EKReminder(eventStore: store)
        reminder.title = item.name
        reminder.isCompleted = item.complete
        do{
            reminder.calendar = try reminderCategory()
            try store.save(reminder, commit: true)
            item.reminderId = reminder.calendarItemExternalIdentifier
            try context.save()
            print(reminder, "saved")
        } catch {
            print("couldnt save: \(error.localizedDescription)")
        }
    }

    // 6
    func deleteTaskFromReminder(task: TaskItem) {
        if let reminderId = task.reminderId, let reminder = store.calendarItems(withExternalIdentifier: reminderId).first as? EKReminder {
            do {
                try store.remove(reminder, commit: true)
            } catch {
                print(error.localizedDescription)
            }
        }
    }

    // 7
    func requestReminderAccess() async -&gt; Bool {
        do {
            let isAllowed = try await store.requestAccess(to: .reminder)
            return isAllowed
        } catch {
            print(error.localizedDescription)
            return false
        }
    }

    // 8
    func reminderCategory() throws -&gt; EKCalendar {
        let calendars = store.calendars(for: .reminder)
        let calendarName = "QuickTaskApp"
        if let taskCalendar = calendars.first(where: {$0.title == calendarName}) { return taskCalendar }

        let calendar = EKCalendar(for: .reminder, eventStore: store)
        calendar.title = calendarName
        // NOTE! The defaultCalendarForNewReminders will be nil on simulator
        calendar.source = store.defaultCalendarForNewReminders()?.source
        try store.saveCalendar(calendar, commit: true)
        return calendar
    }
}</code></pre>]]></content:encoded>
      <excerpt:encoded />
      <wp:post_name>the-secret-ios-database-syncing-option-you-didnt-know-about-for-ipad-on-swift-playgrounds-amp-beyond</wp:post_name>
      <wp:post_type>post</wp:post_type>
      <wp:post_id>3</wp:post_id>
      <wp:status>publish</wp:status>
      <pubDate>Fri, 17 Jun 2022 17:24:35 +0000</pubDate>
      <wp:post_date>2022-06-17 17:24:35</wp:post_date>
      <wp:post_date_gmt>2022-06-17 17:24:35</wp:post_date_gmt>
      <dc:creator>waller.matthew@gmail.com</dc:creator>
      <wp:comment_status>closed</wp:comment_status>
    </item>
    <item>
      <title>How to create in-App Purchases in Apps made on iPad w/ Swift Playgrounds</title>
      <link>/blog/making-money-by-developing-apps-on-ipads-swift-playgrounds-the-code-part-</link>
      <content:encoded><![CDATA[<div class="sqs-html-content">
  <p class="" style="white-space:pre-wrap;">I figured out how to make in-app purchases work when making apps with Swift Playgrounds on iPad, and I wanted to share with you, not only the basics, but also the ability to make the code testable on device.</p><p class="" style="white-space:pre-wrap;">The reason being, your in-app purchases won’t work at first!</p><p class="" style="white-space:pre-wrap;">By which I mean, the code only becomes fully functional after you upload it to TestFlight, so you’ll want a way to test purchase flows and such without going through that whole process for sure.</p><p class="" style="white-space:pre-wrap;">On to the code (which by the way, can help with regular Xcode purchasing too in all of it’s async/await goodness!).</p><h3 style="white-space:pre-wrap;">The basic Store.swift</h3><p class="" style="white-space:pre-wrap;">This is the code I use to get my store up and running. It’s a riff on Apple’s example, but a big more generic so that you can reuse it across your apps. Almost a framework or Swift package, but it’s too small to make it an official repo and I’m a very lazy man.</p>
</div>



<pre><code>import Foundation
import Combine
import StoreKit

typealias Transaction = StoreKit.Transaction
typealias RenewalInfo = StoreKit.Product.SubscriptionInfo.RenewalInfo
typealias RenewalState = StoreKit.Product.SubscriptionInfo.RenewalState

public enum StoreError: Error {
    case failedVerification
}

class Store {
    static let shared = Store(productIds: [])
    private(set) var nonConsumables: [Product] = []
    private(set) var consumables: [Product] = []
    private(set) var subscriptions: [Product] = []
    var purchasedIdentifiers = Set&lt;String&gt;() 

    var updateListenerTask: Task&lt;Void, Error&gt;? = nil

    private let productIds: [String]

    init(productIds: [String]) {
        self.productIds = productIds

        //Start a transaction listener as close to app launch as possible so you don't miss any transactions.
        updateListenerTask = listenForTransactionsThatHappenedOutsideTheApp()
    }

    deinit {
        updateListenerTask?.cancel()
    }

    func listenForTransactionsThatHappenedOutsideTheApp() -&gt; Task&lt;Void, Error&gt; {
        return Task.detached {
            for await result in Transaction.updates {
                do {
                    let transaction = try self.checkVerified(result)
                    await self.updatePurchasedIdentifiers(transaction)

                    //Always finish a transaction.
                    await transaction.finish()
                } catch {
                    //StoreKit has a receipt it can read but it failed verification. Don't deliver content to the user.
                }
            }
        }
    }

    func requestProducts() async {
        do {
            let storeProducts = try await Product.products(for: productIds)
            var newNonConsumables: [Product] = []
            var newSubscriptions: [Product] = []
            var newConsumables: [Product] = []

            for product in storeProducts {
                switch product.type {
                case .consumable:
                    newConsumables.append(product)
                case .nonConsumable:
                    newNonConsumables.append(product)
                case .autoRenewable:
                    newSubscriptions.append(product)
                default:
                    break
                }
            }

            nonConsumables = sortByPrice(newNonConsumables)
            subscriptions = sortByPrice(newSubscriptions)
            consumables = sortByPrice(newConsumables)
        } catch {
            // Handle error here.
        }
    }

    func purchase(_ product: Product?) async throws -&gt; Transaction? {
        guard let result = try? await product?.purchase() else {
            return nil
        }

        switch result {
        case .success(let verification):
            let transaction = try checkVerified(verification)
            await updatePurchasedIdentifiers(transaction)
            await transaction.finish()
            return transaction
        case .userCancelled, .pending:
            return nil
        default:
            return nil
        }
    }

    func isPurchased(_ productIdentifier: String) async throws -&gt; Bool {
        guard let result = await Transaction.latest(for: productIdentifier) else {
            return false
        }

        let transaction = try checkVerified(result)

        //Ignore revoked transactions, they're no longer purchased.
        //For subscriptions, a user can upgrade in the middle of their subscription period. The lower service
        //tier will then have the `isUpgraded` flag set and there will be a new transaction for the higher service
        //tier. Ignore the lower service tier transactions which have been upgraded.
        return transaction.revocationDate == nil &amp;&amp; !transaction.isUpgraded
    }

    func checkVerified&lt;T&gt;(_ result: VerificationResult&lt;T&gt;) throws -&gt; T {
        switch result {
        case .unverified:
            //StoreKit has parsed the JWS but failed verification. Don't deliver content to the user.
            throw StoreError.failedVerification
        case .verified(let safe):
            return safe
        }
    }

    func updatePurchasedIdentifiers(_ transaction: Transaction) async {
        if transaction.revocationDate == nil {
            purchasedIdentifiers.insert(transaction.productID)
        } else {
            purchasedIdentifiers.remove(transaction.productID)
        }
    }

    func sortByPrice(_ products: [Product]) -&gt; [Product] {
        products.sorted(by: { return $0.price &lt; $1.price })
    }

    func restorePurchases() {
        Task {
            try? await AppStore.sync()
        }
    }
}</code></pre>


<div class="sqs-html-content">
  <p class="" style="white-space:pre-wrap;">With that code you can get started on <a href="https://developer.apple.com/in-app-purchase/">subscriptions, consumables, and non-consumables</a>.</p><p class="" style="white-space:pre-wrap;">However, you probably also want a way to test purchases without needing to upload the app to TestFlight each time you make a change. For that you can make an intermediary layer that can use either a debugging/preview version of the store, or the actual production version of the store. So let’s get our protocols and PreviewStore ready.</p>
</div>



<pre><code>import StoreKit

protocol Storable {
    func requestProducts() async
    var nonconsumableProducts: [Productable] { get }
    /// You could add other products here, consumables, subscriptions, etc.
    @MainActor func purchase(_ product: Productable?) async throws -&gt; Bool
    func isPurchased(_ productIdentifier: String) async throws -&gt; Bool
}

extension Store: Storable {

    var nonconsumableProducts: [Productable] {
        nonConsumables
    }

    @MainActor
    func purchase(_ product: Productable?) async throws -&gt; Bool {
        if let product = product as? Product {
            return try await purchase(product) != nil
        }

        return false
    }
}

import StoreKit

class PreviewStore: Storable {
    var madePurchase = false
    var nonconsumableProducts: [Productable] =
        [
            PreviewProduct(id: "com.CephalopodStudio.PurchasePro.GoPro", 
                           displayName: "Go Pro, preview", 
                           displayPrice: "$0.99")
        ]

    private var transactions: [Transactionable] = [
        PreviewTransaction(productID: "com.CephalopodStudio.PurchasePro.GoPro"),
    ]

    @MainActor
    func purchase(_ product: Productable?) async throws -&gt; Bool {
        guard let product = product else {
            return false
        }

        let transaction = transactions.first { 
            $0.productID == product.id
        }

        madePurchase = true

        return transaction != nil
    }

    func requestProducts() async { }

    func getProduct(forId id: String) async -&gt; Transactionable? {
        let transaction = transactions.first { 
            $0.productID == id
        }

        return transaction
    }

    func isPurchased(_ productIdentifier: String) async throws -&gt; Bool {
        return madePurchase
    }
}

struct PreviewProduct: Productable {
    var id: String
    var displayName: String
    var displayPrice: String
}

struct PreviewTransaction: Transactionable {
    var productID: String
}

public protocol Productable {
    var id: String { get }
    var displayName: String { get }
    var displayPrice: String { get }
}

protocol Transactionable {
    var productID: String { get }
}

extension Product: Productable { }
extension Transaction: Transactionable { }</code></pre>


<div class="sqs-html-content">
  <p class="" style="white-space:pre-wrap;">Now we can make the Storefront that can use either PreviewStore or the regular Store. Storefront will be the code to handle purchases specific to your app. In this case, I’m going to do one, non-consumable purchase.</p>
</div>



<pre><code>import StoreKit
import SwiftUI

public class Storefront: ObservableObject {
    enum StoreType {
        case preview
        case production
    }

    var store: Storable
    let goProId = "com.CephalopodStudio.PurchasePro.GoPro"
    @Published var isPro = false
    @Published var product: Productable? = nil

    init(type: StoreType) {
        switch type {
        case .preview:
            store = PreviewStore()
        case .production:
            store = Store(productIds: [goProId])
        }

        Task {
            await store.requestProducts()
            if try await store.isPurchased(goProId) {
                isPro = true
            }
            product = store.nonconsumableProducts.first
        }
    }

    @MainActor
    func purchasePro() {
        Task {
            isPro = try await store.purchase(product)
        }
    }

    func purchasedIdentifiersUpdated(_ ids: Set&lt;String&gt;) {
        isPro = ids.contains(goProId)
    }
}</code></pre>


<div class="sqs-html-content">
  <h3 style="white-space:pre-wrap;">Tying It Together</h3><p class="" style="white-space:pre-wrap;">Finally, let’s make the app that uses this Storefront. It’s an app with one purpose: to tell you that you’re pro. Like the I Am Rich app of old, but less interesting.</p>
</div>



<pre><code>import SwiftUI

@main
struct PurchaseProApp: App {
    @StateObject var storefront = Storefront(type: .preview)
    // Comment out this line ⬆️ and uncomment this line ⬇️ when you submit to the App Store.
    // @StateObject var storefront = Storefront(type: .production)
    var body: some Scene {
        WindowGroup {
            ContentView()
                .environmentObject(storefront)
        }
    }
}</code></pre>


<div class="sqs-html-content">
  <p class="" style="white-space:pre-wrap;">And here is the UI of the app:</p>
</div>



<pre><code>import SwiftUI

struct ContentView: View {
    @EnvironmentObject var storefront: Storefront

    var body: some View {
        VStack {
            if storefront.isPro {
                Text("You're Pro!")
                    .font(.largeTitle)
            } else {
                Button {
                    storefront.purchasePro()
                } label: {
                    if let product = storefront.product {
                        VStack {
                            Text(product.displayName)
                                .font(.largeTitle)
                            Text(product.displayPrice)
                                .font(.title)
                        }
                    } else {
                        Text("No product found.")
                    }
                }
            }
            Spacer()
            Button("Reset") {
                storefront.isPro = false
            }
        }
        .padding()
    }
}</code></pre>


<div class="sqs-html-content">
  <p class="" style="white-space:pre-wrap;">All that gives you this:</p>
</div>













































  

    
  
    <div
        class="
          image-block-outer-wrapper
          layout-caption-below
          design-layout-inline
          combination-animation-site-default
          individual-animation-site-default
          individual-text-animation-site-default
        "
        data-test="image-block-inline-outer-wrapper"
    >

      

      
        <figure
            class="
              sqs-block-image-figure
              intrinsic
            "
            style="max-width:2388px;"
        >
          
        
        

        
          
            
          <div
              
              
              class="image-block-wrapper"
              data-animation-role="image"
              
  

          >
            <div class="sqs-image-shape-container-element
              
          
        
              has-aspect-ratio
            " style="
                position: relative;
                
                  padding-bottom:69.8492431640625%;
                
                overflow: hidden;-webkit-mask-image: -webkit-radial-gradient(white, black);
              "
              >
                
                  
                  
                  
                  
                  
                  
                  <img data-stretch="false" src="https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/11b9a609-a87e-4f2b-84df-0bc2be99c882/Screenshot+2022-04-11+at+8.06.37+PM.png" data-image="https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/11b9a609-a87e-4f2b-84df-0bc2be99c882/Screenshot+2022-04-11+at+8.06.37+PM.png" data-image-dimensions="2388x1668" data-image-focal-point="0.5,0.5" alt="Screenshot of code and app preview showing the go pro button." data-load="false" src="https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/11b9a609-a87e-4f2b-84df-0bc2be99c882/Screenshot+2022-04-11+at+8.06.37+PM.png" width="2388" height="1668" alt="" sizes="100vw" style="display:block;object-fit: cover; width: 100%; height: 100%; object-position: 50% 50%" srcset="https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/11b9a609-a87e-4f2b-84df-0bc2be99c882/Screenshot+2022-04-11+at+8.06.37+PM.png?format=100w 100w, https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/11b9a609-a87e-4f2b-84df-0bc2be99c882/Screenshot+2022-04-11+at+8.06.37+PM.png?format=300w 300w, https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/11b9a609-a87e-4f2b-84df-0bc2be99c882/Screenshot+2022-04-11+at+8.06.37+PM.png?format=500w 500w, https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/11b9a609-a87e-4f2b-84df-0bc2be99c882/Screenshot+2022-04-11+at+8.06.37+PM.png?format=750w 750w, https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/11b9a609-a87e-4f2b-84df-0bc2be99c882/Screenshot+2022-04-11+at+8.06.37+PM.png?format=1000w 1000w, https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/11b9a609-a87e-4f2b-84df-0bc2be99c882/Screenshot+2022-04-11+at+8.06.37+PM.png?format=1500w 1500w, https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/11b9a609-a87e-4f2b-84df-0bc2be99c882/Screenshot+2022-04-11+at+8.06.37+PM.png?format=2500w 2500w" loading="lazy" decoding="async" data-loader="sqs">
                
            </div>
          </div>
        
          
        

        
      
        </figure>
      

    </div>
  


  




<div class="sqs-html-content">
  <p class="" style="white-space:pre-wrap;">Then you tap that text/button up top and you get this:</p>
</div>













































  

    
  
    <div
        class="
          image-block-outer-wrapper
          layout-caption-below
          design-layout-inline
          combination-animation-site-default
          individual-animation-site-default
          individual-text-animation-site-default
        "
        data-test="image-block-inline-outer-wrapper"
    >

      

      
        <figure
            class="
              sqs-block-image-figure
              intrinsic
            "
            style="max-width:2388px;"
        >
          
        
        

        
          
            
          <div
              
              
              class="image-block-wrapper"
              data-animation-role="image"
              
  

          >
            <div class="sqs-image-shape-container-element
              
          
        
              has-aspect-ratio
            " style="
                position: relative;
                
                  padding-bottom:69.8492431640625%;
                
                overflow: hidden;-webkit-mask-image: -webkit-radial-gradient(white, black);
              "
              >
                
                  
                  
                  
                  
                  
                  
                  <img data-stretch="false" src="https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/1398ff72-b507-46df-895d-6207530eff7b/Screenshot+2022-04-11+at+8.08.23+PM.png" data-image="https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/1398ff72-b507-46df-895d-6207530eff7b/Screenshot+2022-04-11+at+8.08.23+PM.png" data-image-dimensions="2388x1668" data-image-focal-point="0.5,0.5" alt="" data-load="false" src="https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/1398ff72-b507-46df-895d-6207530eff7b/Screenshot+2022-04-11+at+8.08.23+PM.png" width="2388" height="1668" alt="" sizes="100vw" style="display:block;object-fit: cover; width: 100%; height: 100%; object-position: 50% 50%" srcset="https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/1398ff72-b507-46df-895d-6207530eff7b/Screenshot+2022-04-11+at+8.08.23+PM.png?format=100w 100w, https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/1398ff72-b507-46df-895d-6207530eff7b/Screenshot+2022-04-11+at+8.08.23+PM.png?format=300w 300w, https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/1398ff72-b507-46df-895d-6207530eff7b/Screenshot+2022-04-11+at+8.08.23+PM.png?format=500w 500w, https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/1398ff72-b507-46df-895d-6207530eff7b/Screenshot+2022-04-11+at+8.08.23+PM.png?format=750w 750w, https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/1398ff72-b507-46df-895d-6207530eff7b/Screenshot+2022-04-11+at+8.08.23+PM.png?format=1000w 1000w, https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/1398ff72-b507-46df-895d-6207530eff7b/Screenshot+2022-04-11+at+8.08.23+PM.png?format=1500w 1500w, https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/1398ff72-b507-46df-895d-6207530eff7b/Screenshot+2022-04-11+at+8.08.23+PM.png?format=2500w 2500w" loading="lazy" decoding="async" data-loader="sqs">
                
            </div>
          </div>
        
          
        

        
      
        </figure>
      

    </div>
  


  




<div class="sqs-html-content">
  <p class="" style="white-space:pre-wrap;">Then tap reset to set it to non-pro again.</p><p class="" style="white-space:pre-wrap;">Getting setup for an in-app purchase is quite the procedure, filled with banking documents and App Store Connect maneuvers. <a href="https://qonversion.io/blog/configure-iap-app-store-connect/">Here is a helpful recent article on it</a>. If you are following along here, you’ll want to create a non-consumable in-app purchase instead of the subscription and adjust the id of the in-app purchase to suit your own needs.</p><p class="" style="white-space:pre-wrap;">With that though, we upload to TestFlight! (After we’ve changed our Store to .production instead of .preview; when you do that you should see “No product found” in your Swift Playgrounds App Preview area). </p><p class="" style="white-space:pre-wrap;">And voila! </p>
</div>













































  

    
  
    <div
        class="
          image-block-outer-wrapper
          layout-caption-below
          design-layout-inline
          combination-animation-site-default
          individual-animation-site-default
          individual-text-animation-site-default
        "
        data-test="image-block-inline-outer-wrapper"
    >

      

      
        <figure
            class="
              sqs-block-image-figure
              intrinsic
            "
            style="max-width:1125px;"
        >
          
        
        

        
          
            
          <div
              
              
              class="image-block-wrapper"
              data-animation-role="image"
              
  

          >
            <div class="sqs-image-shape-container-element
              
          
        
              has-aspect-ratio
            " style="
                position: relative;
                
                  padding-bottom:216.5333251953125%;
                
                overflow: hidden;-webkit-mask-image: -webkit-radial-gradient(white, black);
              "
              >
                
                  
                  
                  
                  
                  
                  
                  <img data-stretch="false" src="https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/1d04ce8f-4244-46f2-905a-f6c2b3d4adb2/IMG_2BA3A12A1E22-1.jpeg" data-image="https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/1d04ce8f-4244-46f2-905a-f6c2b3d4adb2/IMG_2BA3A12A1E22-1.jpeg" data-image-dimensions="1125x2436" data-image-focal-point="0.5,0.5" alt="In-app purchase being made." data-load="false" src="https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/1d04ce8f-4244-46f2-905a-f6c2b3d4adb2/IMG_2BA3A12A1E22-1.jpeg" width="1125" height="2436" alt="" sizes="100vw" style="display:block;object-fit: cover; width: 100%; height: 100%; object-position: 50% 50%" srcset="https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/1d04ce8f-4244-46f2-905a-f6c2b3d4adb2/IMG_2BA3A12A1E22-1.jpeg?format=100w 100w, https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/1d04ce8f-4244-46f2-905a-f6c2b3d4adb2/IMG_2BA3A12A1E22-1.jpeg?format=300w 300w, https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/1d04ce8f-4244-46f2-905a-f6c2b3d4adb2/IMG_2BA3A12A1E22-1.jpeg?format=500w 500w, https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/1d04ce8f-4244-46f2-905a-f6c2b3d4adb2/IMG_2BA3A12A1E22-1.jpeg?format=750w 750w, https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/1d04ce8f-4244-46f2-905a-f6c2b3d4adb2/IMG_2BA3A12A1E22-1.jpeg?format=1000w 1000w, https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/1d04ce8f-4244-46f2-905a-f6c2b3d4adb2/IMG_2BA3A12A1E22-1.jpeg?format=1500w 1500w, https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/1d04ce8f-4244-46f2-905a-f6c2b3d4adb2/IMG_2BA3A12A1E22-1.jpeg?format=2500w 2500w" loading="lazy" decoding="async" data-loader="sqs">
                
            </div>
          </div>
        
          
        

        
      
        </figure>
      

    </div>
  


  




<div class="sqs-html-content">
  <p class="" style="white-space:pre-wrap;">Thanks for following along. If you’re interested in supporting, checkout my apps <a href="https://apps.apple.com/us/app/pearl-wellness-reminders/id1567837432">Pearl</a> and <a href="https://apps.apple.com/us/app/todont/id1601697790">ToDon’t</a> (which was created 100% on the iPad. I’m planning on some fancier made-with-iPad apps later!)</p>
</div>]]></content:encoded>
      <excerpt:encoded />
      <wp:post_name>making-money-by-developing-apps-on-ipads-swift-playgrounds-the-code-part-</wp:post_name>
      <wp:post_type>post</wp:post_type>
      <wp:post_id>4</wp:post_id>
      <wp:status>publish</wp:status>
      <pubDate>Tue, 12 Apr 2022 01:56:11 +0000</pubDate>
      <wp:post_date>2022-04-12 01:56:11</wp:post_date>
      <wp:post_date_gmt>2022-04-12 01:56:11</wp:post_date_gmt>
      <dc:creator>waller.matthew@gmail.com</dc:creator>
      <wp:comment_status>closed</wp:comment_status>
    </item>
    <item>
      <title>Lessons from Developing an App on the iPad in Swift Playgrounds from Start to Finish (Including Publishing on the App Store)</title>
      <link>/blog/lessons-from-developing-an-app-on-the-ipad-from-start-to-finish-on-the-app-store</link>
      <content:encoded><![CDATA[<div class="sqs-html-content">
  <p class="" style="white-space:pre-wrap;">I didn’t know entirely what I was getting myself into by making an app on the iPad. </p><p class="" style="white-space:pre-wrap;">I went in aware of its limitations and tried to think of a little something I could make for myself that would be useful and extremely simple.</p><p class="" style="white-space:pre-wrap;">Thus I settled on the love song of so many developers, the thing that there is plenty of in the world, and yet which is close enough to our souls that we always find ways to make it our own.</p><p class="" style="white-space:pre-wrap;">I mean, of course, the to-do app.</p><p class="" style="white-space:pre-wrap;">I’m an odd bird, so I thought it would be fun to load a to-do app with lots of random and silly things to NOT do, so that I could have a giggle, and check it off for that tiny dopamine hit.</p><p class="" style="white-space:pre-wrap;"><a href="https://apps.apple.com/us/app/todont/id1601697790">And thus my to-do app ToDon’t was born</a>.</p><p class="" style="white-space:pre-wrap;">I have a large set of code and videos of actually making the app here: https://twitter.com/wattmaller1/status/1472263788233641988?s=20</p><p class="" style="white-space:pre-wrap;">As a whole though, let’s start with the limitations:</p><h2 style="white-space:pre-wrap;">Limited …</h2><ol data-rte-list="default"><li><p class="" style="white-space:pre-wrap;"><strong>In-app purchases (not what you think!)</strong>: Early reports mistakenly thought it wasn’t possible to use in-app purchases with Swift Playgrounds. What I found out was that they in fact work, but they only become testable in TestFlight, which is annoying since we just got such amazing support of testing configurations and such in Xcode. What you need to do instead, if you want to test in-app purchase scenarios multiple times, is to logout of iCloud on your device and login with a sandbox test account. This is because TestFlight won’t use the sandbox account that you can use in the App Store settings area of your device. It’ll use the iCloud account your device is logged in with overall. (Feedback Id: FB9830444)</p></li><li><p class="" style="white-space:pre-wrap;"><strong>CloudKit: </strong>CloudKit is one of those really nice ways to get scalable, first-party, out-of-the-box syncing and such right in your app. <a href="https://apps.apple.com/us/app/pearl-wellness-reminders/id1567837432">It’s what my app Pearl uses</a>. And dang, I really wish I could’ve used it in ToDont. There is, however, Swift Package support, so if you find persistent storage with some drop-in syncing, that should probably do the trick for you. Probably will have the friction of needing to sign the user into something, and create an account. Dang it, I miss CloudKit. (Feedback Id: FB9830450)</p></li><li><p class="" style="white-space:pre-wrap;"><strong>No Built-In Git</strong>: I needed to install a separate app to drag in my playground file and upload it to GitHub from my iPad. Built-in source control would be an excellent addition to Swift Playgrounds as an educational feature as well! (Feedback Id: FB9830486)</p></li><li><p class="" style="white-space:pre-wrap;"><strong>Limited Debugging</strong>: Very limited, in fact. You get print statements and that’s about it. No stepping through code. (Feedback Id: FB9830492)</p></li><li><p class="" style="white-space:pre-wrap;"><strong>No direct to iPhone</strong>: This is something I was missing. I could only test on the iPhone after I uploaded to TestFlight, so it took a good while to smooth out some animation bugs that appeared only on an older iPhone and not on the iPad. (Feedback Id: FB9830494)</p></li><li><p class="" style="white-space:pre-wrap;"><strong>Widgets &amp; extensions</strong>: No widget support is a bummer, along with other extensions, like keyboard extensions, and so forth. (Feedback Id: FB9830498)</p></li><li><p class="" style="white-space:pre-wrap;"><strong>Miscellaneous</strong>: There are a bunch of things here and there that folks have mentioned: you can import images but can’t clarify sizes with an asset catalogue (Feedback Id: FB9830500), you can’t edit json files from Playgrounds (I guess it’s called SWIFT Playgrounds, eh?). Reading them and parsing them is fine, they’ll just be under “Resources”. However, it would be great to edit these files even if it’s only as basic text files (Feedback Id: FB9830502). There aren’t device previews within Playgrounds previews the way there are for Xcode (Feedback Id: FB9830505). </p><p class="" style="white-space:pre-wrap;">A few more things: it would be nice for the validation of the length of the app name to happen before submitting to App Store Connect (Feedback Id: FB9830509). I haven’t found a way to jump to the definition of a class, struct, etc. Been missing that (Feedback Id: FB9830513). Also refactoring, like renaming all references (Feedback Id: FB9830510). And being able to search an individual file would be good.</p><p class="" style="white-space:pre-wrap;">Also, it would be nice if we could specify <a href="https://developer.apple.com/documentation/bundleresources/information_property_list/itsappusesnonexemptencryption"><em>ITSAppUsesNonExemptEncryption</em></a><em> </em>for smooth uploading to TestFlight, so that I don’t need to update the security settings every time on the web. <a href="https://www.rambo.codes/posts/2021-12-28-a-document-based-app-in-swift-playgrounds-for-ipad">Although that might be in the works</a>. (Feedback Id: FB9830517)</p><p class="" style="white-space:pre-wrap;">Also, as a heads up, you’ll need to make sure you don’t have references to developing on iPad in your metadata. Specifically, I got rejected for my iPad App Store screenshots including the little orange Swift logo in the corner since I took a screenshot while Playgrounds was running.</p></li></ol><h2 style="white-space:pre-wrap;">… And Yet Delightful</h2><ol data-rte-list="default"><li><p class="" style="white-space:pre-wrap;"><strong>Fast previews</strong>: We’re running right on the hardware. Previews happen very quickly.</p></li><li><p class="" style="white-space:pre-wrap;"><strong>Nice code completion</strong>: Not everyone reported success with this, and indeed, for myself, code completion stopped a couple of times, and it came back when I restarted the app and hasn’t gone away since. And the code completion I’ve gotten is very fast even with massive files, so no complaints from me there.</p></li><li><p class="" style="white-space:pre-wrap;"><strong>Versatile</strong>: I mean, I’ve got Core Data going, I can build AR apps, games, all of the standard things you want from apps that are essentially smooth web portals are here, we’ve got Bluetooth, microphones, speech recognition, core motion, and of course the camera. It’s all there!</p></li><li><p class="" style="white-space:pre-wrap;"><strong>Perfect prototyper</strong>: If you want to do some work on UI especially, and do a bunch of prototyping, this is a wonderful tool. It’s my go-to code machine around the house lately. Obviously because of ToDon’t, but I find myself thinking, could I just use the iPad? Because Playgrounds are just so light and responsive. Combined with my little magnetic Magic Keyboard, this little thing is a fun, no distractions machine.</p></li><li><p class="" style="white-space:pre-wrap;"><strong>Ease of publishing</strong>: I named my app, gave it it an identifier, and it just uploaded. I can’t tell you how much of a headache it was to get an app I worked on to the App Store. Provisioning profiles, amiright? Uploading the app is just, really nice. And you can create the app record from Playgrounds as well! It makes it all for you.</p></li><li><p class="" style="white-space:pre-wrap;"><strong>A gateway</strong>: I remember working on my iMac and just getting absolutely hooked on how cool it was to create an app when I first started 9 years ago. And to get it running on my phone especially! (I really want that ease of getting apps on the phone). It’s all so much fun. And the fact that it can now be done on a relatively inexpensive machine in a high-quality way is also just great.</p></li></ol><h2 style="white-space:pre-wrap;">Conclusion</h2><p class="" style="white-space:pre-wrap;">In the end, this is exactly what it says it is: Swift Playgrounds. It’s a playground! It’s a place that is primarily great to figure things out. It’s certainly not Xcode on the iPad, nor is it a brand new App Composer app or anything like that. It will shine mostly as a great educational and prototyping tool. </p><p class="" style="white-space:pre-wrap;">And heck, it’s pretty great as a sideproject engine so far. I say that because there is a sweet spot where constraints enable creativity, like the limitations of a sonnet. I’ll be interested to see if any masterpieces emerge.</p>
</div>]]></content:encoded>
      <excerpt:encoded />
      <wp:post_name>lessons-from-developing-an-app-on-the-ipad-from-start-to-finish-on-the-app-store</wp:post_name>
      <wp:post_type>post</wp:post_type>
      <wp:post_id>5</wp:post_id>
      <wp:status>publish</wp:status>
      <pubDate>Wed, 05 Jan 2022 04:40:30 +0000</pubDate>
      <wp:post_date>2022-01-05 04:40:30</wp:post_date>
      <wp:post_date_gmt>2022-01-05 04:40:30</wp:post_date_gmt>
      <dc:creator>waller.matthew@gmail.com</dc:creator>
      <wp:comment_status>closed</wp:comment_status>
    </item>
    <item>
      <title>Build an App on iPad with Swift Playgrounds and Core Data</title>
      <link>/blog/build-an-app-on-ipad-with-swift-playgrounds-and-core-data</link>
      <content:encoded><![CDATA[<div class="sqs-html-content">
  <p class="" style="white-space:pre-wrap;">Happy Swift Playgrounds day! If you haven’t heard, you can now <a href="https://developer.apple.com/news/?id=v868vy6e">write apps on your iPad</a>.</p><p class="" style="white-space:pre-wrap;">It’s very full featured, but one thing that you might need to do a little extra work on is persistence. Can you use CoreData, for instance? The answer, is, mostly, yes.</p><p class="" style="white-space:pre-wrap;">For instance, we can get the basics of a CoreData ToDo list running quickly. You can see me cross off and uncross off tasks in the preview below and to the right.</p>
</div>



<div class="intrinsic" style="max-width:100%"><div class="embed-block-wrapper " style="padding-bottom:75.0%;"><div class="sqs-video-wrapper" data-provider-name="YouTube" data-html="<br/><br/><br/><br/><br/><br/>  <br/>  &lt;iframe src=&quot;//www.youtube.com/embed/TqDPyr_0-5Y?wmode=opaque&quot; height=&quot;480&quot; width=&quot;640&quot; scrolling=&quot;no&quot; frameborder=&quot;0&quot; allowfullscreen&gt;&lt;/iframe&gt;<br/><br/>"></div></div><div  class="video-caption-wrapper"><div class="video-caption"><p class="" style="white-space:pre-wrap;">A video of a ToDo app made with CoreData and SwiftUI on Playgrounds.</p></div></div></div>

<div class="sqs-html-content">
  <p class="" style="white-space:pre-wrap;">To the code!</p><p class="" style="white-space:pre-wrap;">First off, so much of this is thanks to the work <a href="https://www.atomicbird.com/blog/core-data-code-only/">made in this blog post</a> on creating CoreData models without the special, graphical model constructor. So if you have more questions about creating relationships between multiple entities, that’s a good place to go.</p><p class="" style="white-space:pre-wrap;">For our use, we’ll just use on object, a Task (and I should probably rename that considering all the new async feature naming with TaskGroup and such).</p><p class="" style="white-space:pre-wrap;">Here are all the files I have:</p>
</div>













































  

    
  
    <div
        class="
          image-block-outer-wrapper
          layout-caption-below
          design-layout-inline
          combination-animation-site-default
          individual-animation-site-default
          individual-text-animation-site-default
        "
        data-test="image-block-inline-outer-wrapper"
    >

      

      
        <figure
            class="
              sqs-block-image-figure
              intrinsic
            "
            style="max-width:640px;"
        >
          
        
        

        
          
            
          <div
              
              
              class="image-block-wrapper"
              data-animation-role="image"
              
  

          >
            <div class="sqs-image-shape-container-element
              
          
        
              has-aspect-ratio
            " style="
                position: relative;
                
                  padding-bottom:138.125%;
                
                overflow: hidden;-webkit-mask-image: -webkit-radial-gradient(white, black);
              "
              >
                
                  
                  
                  
                  
                  
                  
                  <img data-stretch="false" src="https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/c1b5cff0-46d9-436e-9070-be805627f52c/DB4010CE-8D7F-44CA-B0AF-0ADE3C97D6D5.jpeg" data-image="https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/c1b5cff0-46d9-436e-9070-be805627f52c/DB4010CE-8D7F-44CA-B0AF-0ADE3C97D6D5.jpeg" data-image-dimensions="640x884" data-image-focal-point="0.5,0.5" alt="A list of the four files used in the project." data-load="false" src="https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/c1b5cff0-46d9-436e-9070-be805627f52c/DB4010CE-8D7F-44CA-B0AF-0ADE3C97D6D5.jpeg" width="640" height="884" alt="" sizes="100vw" style="display:block;object-fit: cover; width: 100%; height: 100%; object-position: 50% 50%" srcset="https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/c1b5cff0-46d9-436e-9070-be805627f52c/DB4010CE-8D7F-44CA-B0AF-0ADE3C97D6D5.jpeg?format=100w 100w, https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/c1b5cff0-46d9-436e-9070-be805627f52c/DB4010CE-8D7F-44CA-B0AF-0ADE3C97D6D5.jpeg?format=300w 300w, https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/c1b5cff0-46d9-436e-9070-be805627f52c/DB4010CE-8D7F-44CA-B0AF-0ADE3C97D6D5.jpeg?format=500w 500w, https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/c1b5cff0-46d9-436e-9070-be805627f52c/DB4010CE-8D7F-44CA-B0AF-0ADE3C97D6D5.jpeg?format=750w 750w, https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/c1b5cff0-46d9-436e-9070-be805627f52c/DB4010CE-8D7F-44CA-B0AF-0ADE3C97D6D5.jpeg?format=1000w 1000w, https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/c1b5cff0-46d9-436e-9070-be805627f52c/DB4010CE-8D7F-44CA-B0AF-0ADE3C97D6D5.jpeg?format=1500w 1500w, https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/c1b5cff0-46d9-436e-9070-be805627f52c/DB4010CE-8D7F-44CA-B0AF-0ADE3C97D6D5.jpeg?format=2500w 2500w" loading="lazy" decoding="async" data-loader="sqs">
                
            </div>
          </div>
        
          
        

        
          
          <figcaption class="image-caption-wrapper">
            <div class="image-caption"><p class="" style="white-space:pre-wrap;">A list of the four files in the project.</p></div>
          </figcaption>
        
      
        </figure>
      

    </div>
  


  




<div class="sqs-html-content">
  <p class="" style="white-space:pre-wrap;">Here is the first file. My model of Task</p>
</div>



<pre><code>import CoreData
import SwiftUI

@objc(Task)
class Task: NSManagedObject {
    @NSManaged var complete: Bool
    @NSManaged var name: String?
    @NSManaged var index: Int
}

extension Task: Identifiable {
    var id: Int {
        index
    }
}</code></pre>


<div class="sqs-html-content">
  <p class="" style="white-space:pre-wrap;">And now that I have that, I can create my Persistence layer like so:</p>
</div>



<pre><code>import CoreData
import SwiftUI

class Persistence {
    static let shared = Persistence()

    static let previewFull: Persistence = {
        let result = Persistence(inMemory: true)
        let context = result.container.viewContext
        for index in 0 ..&lt; 5 {
            let task = Task(context: context)
            task.name = "Task \(index + 1)"
            task.complete = false
            task.index = index

            context.perform {
                try! context.save()
            }
        }
        return result
    }()

    let container: NSPersistentContainer

    init(inMemory: Bool = false) {
        let taskEntity = NSEntityDescription()
        taskEntity.name = "Task"
        taskEntity.managedObjectClassName = "Task"

        let nameAttribute = NSAttributeDescription()
        nameAttribute.name = "name"
        nameAttribute.type = .string
        taskEntity.properties.append(nameAttribute)

        let completeAttribute = NSAttributeDescription()
        completeAttribute.name = "complete"
        completeAttribute.type = .boolean
        taskEntity.properties.append(completeAttribute)

        let indexAttribute = NSAttributeDescription()
        indexAttribute.name = "index"
        indexAttribute.type = .integer64
        taskEntity.properties.append(indexAttribute)

        let model = NSManagedObjectModel()
        model.entities = [taskEntity]

        let container = NSPersistentContainer(name: "TaskModel", managedObjectModel: model)

        if inMemory {
            container.persistentStoreDescriptions.first!.url = URL(fileURLWithPath: "/dev/null")
        }

        container.loadPersistentStores { description, error in
            if let error = error {
                fatalError("failed with: \(error.localizedDescription)")
            }
        }

        container.viewContext.mergePolicy = NSMergeByPropertyObjectTrumpMergePolicy

        container.viewContext.automaticallyMergesChangesFromParent = true
        self.container = container
    }
}</code></pre>


<div class="sqs-html-content">
  <p class="" style="white-space:pre-wrap;">You’ll notice that we just needed to specify a bunch of attributes manually for our object, instead of using the graphical interface we have available in Xcode.</p><p class="" style="white-space:pre-wrap;">And I’ve created a preview version of Persistence to have some starter dummy data.</p><p class="" style="white-space:pre-wrap;">Then we can create our app like this:</p>
</div>



<pre><code>import SwiftUI

@main
struct MyApp: App {
    let persistence = Persistence.previewFull
    var body: some Scene {
        WindowGroup {
            ContentView()
                .environment(\.managedObjectContext, persistence.container.viewContext)
        }
    }
}</code></pre>


<div class="sqs-html-content">
  <p class="" style="white-space:pre-wrap;">And our view is this:</p>
</div>



<pre><code>import SwiftUI

struct ContentView: View {
    @Environment(\.managedObjectContext) private var viewContext

    @FetchRequest(sortDescriptors: [
        NSSortDescriptor(keyPath: \Task.index, ascending: true)
    ], animation: .default)
    private var items: FetchedResults&lt;Task&gt;

    var body: some View {
        List(items) { item in
            VStack {
                if !item.complete {
                    Text(item.name ?? "Unknown")
                } else {
                    Text(item.name ?? "Unknown")
                        .strikethrough()
                    }
            }
            .onTapGesture {
                    viewContext.perform {
                        item.complete.toggle()
                        try! viewContext.save()
                    }
                }
        }
    }
}</code></pre>


<div class="sqs-html-content">
  <p class="" style="white-space:pre-wrap;">From there you can move forward with CoreData in SwiftUI as you would elsewhere, and we’re off and running!</p><h4 style="white-space:pre-wrap;">Quick Limitation</h4><p class="" style="white-space:pre-wrap;">I like to use all of the automagicalness of CloudKit when I’m working with CoreData, and at least with iPad alone, there isn’t a way to do all of that, so you’ll need to code up your own syncing solution as well if you want that. Both CloudKit entitlements and push notifications [Correction: it seems that local notifications are working, so remote push notifications may well be working too!] are absent from the capabilities you can give your app.</p><p class="" style="white-space:pre-wrap;">Let me know if you find ways around that, and checkout <a href="https://apps.apple.com/us/app/pearl-wellness-reminders/id1567837432">my app Pearl: Wellness Reminders</a>, which does in fact contain that CloudKit/CoreData syncing goodness, just not via the iPad yet!</p>
</div>]]></content:encoded>
      <excerpt:encoded />
      <wp:post_name>build-an-app-on-ipad-with-swift-playgrounds-and-core-data</wp:post_name>
      <wp:post_type>post</wp:post_type>
      <wp:post_id>6</wp:post_id>
      <wp:status>publish</wp:status>
      <pubDate>Thu, 16 Dec 2021 02:15:24 +0000</pubDate>
      <wp:post_date>2021-12-16 02:15:24</wp:post_date>
      <wp:post_date_gmt>2021-12-16 02:15:24</wp:post_date_gmt>
      <dc:creator>waller.matthew@gmail.com</dc:creator>
      <wp:comment_status>closed</wp:comment_status>
    </item>
    <item>
      <title>Introducing Pearl: Wellness Reminders</title>
      <link>/blog/introducing-pearl-wellness-reminders</link>
      <content:encoded><![CDATA[<div class="intrinsic" style="max-width:100%"><div class="embed-block-wrapper " style="padding-bottom:56.20609%;"><div class="sqs-video-wrapper" data-provider-name="YouTube" data-html="<br/><br/><br/><br/><br/><br/>  <br/>  &lt;iframe src=&quot;//www.youtube.com/embed/PEb6Ue6aWZA?wmode=opaque&quot; height=&quot;480&quot; width=&quot;854&quot; scrolling=&quot;no&quot; frameborder=&quot;0&quot; allowfullscreen&gt;&lt;/iframe&gt;<br/><br/>"></div></div><div  class="video-caption-wrapper"><div class="video-caption"><p class="" style="white-space:pre-wrap;">A video showing pearl creation in action.</p></div></div></div>

<div class="sqs-html-content">
  <p class="" style="white-space:pre-wrap;"><a href="https://t.co/pUY5TiPUUi?amp=1">This app</a> started in the middle of the pandemic. I wanted to remember something good. And something true.</p><p class="" style="white-space:pre-wrap;">So I came up with Pearl: reminders created by the person using the app. You set the time frame when you want the reminders to appear. And they show up at a random time within that period. And the app gives suggestions, or prompts, for writing meaningful notifications.</p><p class="" style="white-space:pre-wrap;">I knew I wasn’t going to make a replacement for therapy or a long talk with a friend. I wouldn’t try to sustain mental health with a randomized notification system. I’m bipolar myself, and know the world isn’t that simple.</p><p class="" style="white-space:pre-wrap;">In fact, I wasn’t sure I did want the app until I used it for a while. The cynic in me thought, ah, great, nothing like unnecessary notifications to make you stare into your screen for the sake of well being.</p><p class="" style="white-space:pre-wrap;">And yet I wanted to be interrupted, with spontaneity, with a bit of whimsy, with reminders of what I knew to be most valuable. I know what’s important in life. It’s just hard to remember it sometimes.</p><p class="" style="white-space:pre-wrap;">I made this for me, and I wanted to make it as nice as possible. That’s why it’s coming out now rather than last fall or winter.</p><p class="" style="white-space:pre-wrap;">I didn’t want the process of making a wellness app to burn me out. So I spent WAY too long going through all kinds of designs. Waterfalls grids, and mosaics and flippy cards. Half a dozen kinds of animations. Just playing with things, seeing what I could do. Even after I got to the basic flow and feature set, I got more help refining that design even further!</p><p class="" style="white-space:pre-wrap;">I worked on the little things. For instance, an ellipses in the prompts marks a natural place where people can personalize the suggestion. When the card pops up, I didn’t want the user to need to tap on the text, so the keyboard and selection appears for them. And when there is an ellipses, I didn’t want the user to need to go through the trouble to select the ellipses, so I do that for them. Little interactions like that.</p><p class="" style="white-space:pre-wrap;">Then I made it as nice as I could on iPad, and on the Mac, so that Pearl would feel at home in those environments, not just as a copy-paste of the iPhone design.</p><p class="" style="white-space:pre-wrap;">I also wanted first-class accessibility. So there are controls for VoiceOver, and I made sure the app still looked good and worked well with even the biggest dynamic text sizes someone can pick in their accessibility settings. I aimed to respect reduced motion and reduced transparency settings, and got help to get a good color scheme for colorblind folks (I’m red-green colorblind myself).</p><p class="" style="white-space:pre-wrap;">And of course I added widgets, and custom icons, because those are awesome.</p><p class="" style="white-space:pre-wrap;">Even with all my work there are still bugs (at least one, swipy text isn’t behaving well, dang it), but I’ll work those out.</p><p class="" style="white-space:pre-wrap;">So here it is. I hope you find as much value in Pearl as I have. And I wish you well-being no matter your situation.</p>
</div>]]></content:encoded>
      <excerpt:encoded />
      <wp:post_name>introducing-pearl-wellness-reminders</wp:post_name>
      <wp:post_type>post</wp:post_type>
      <wp:post_id>7</wp:post_id>
      <wp:status>publish</wp:status>
      <pubDate>Thu, 17 Jun 2021 03:16:22 +0000</pubDate>
      <wp:post_date>2021-06-17 03:16:22</wp:post_date>
      <wp:post_date_gmt>2021-06-17 03:16:22</wp:post_date_gmt>
      <dc:creator>waller.matthew@gmail.com</dc:creator>
      <wp:comment_status>closed</wp:comment_status>
    </item>
    <item>
      <title>Make your own 3D models: WWDC 2021 Photogrammetry (I am legit surprised it actually worked)</title>
      <link>/blog/wwdc-2021-photogrammetry-make-your-own-3d-models-and-somehow-it-actually-worked</link>
      <content:encoded><![CDATA[<div class="sqs-html-content">
  <p class="" style="white-space:pre-wrap;">Alright, I saw the inclusion of photogrammetry in the developer documentation early on and I was hyped! </p><p class="" style="white-space:pre-wrap;">Photogrammetry is where you take pictures of an object from all kinds of angles and then stitch them together to make a 3D model.</p><p class="" style="white-space:pre-wrap;">And usually, it’s not great.</p><p class="" style="white-space:pre-wrap;">I used one or two apps. And of course you take a bunch of photos and then upload them to a server and you get a model. And the results I got before weren’t great. For one, a chunk of the floor was included. Couldn’t quite figure out where to stop at the bottom.</p><p class="" style="white-space:pre-wrap;">I even tried a photogrammetry app that used the scanner for the face and generated a truly horrifying empty shell of my head.</p><p class="" style="white-space:pre-wrap;">So when I saw the stuff in the docs I was like, OMGosh, we’re going to be able to 3D scan right on the phone!</p><p class="" style="white-space:pre-wrap;">Well, not quite. Looking at it the PhotogrammetrySession object was Mac only. Huh.</p><p class="" style="white-space:pre-wrap;">So it turns out that you can take pictures with your phone and then you send them to your Mac and THEN you get your 3D model.</p><p class="" style="white-space:pre-wrap;">And not just any Mac. It has some beefy specs. Either M1 or it needs 4 GB AMD and 16 GB of RAM.</p><p class="" style="white-space:pre-wrap;"><a href="https://developer.apple.com/videos/play/wwdc2021/10076/?time=142">Here is the video of the whole 3D capture presentation.</a></p><p class="" style="white-space:pre-wrap;">So, my equipment met the specs. Why not give it a try?</p><p class="" style="white-space:pre-wrap;">I have an iPhone XS, which has the dual camera on the back that can read depth.</p><p class="" style="white-space:pre-wrap;">The sample code for the image capture app <a href="https://developer.apple.com/documentation/realitykit/taking_pictures_for_3d_object_capture">is here</a>. It’s set for iOS 15 but on the public release of Xcode reset to iOS 14 everything works fine on my non-beta phone.</p><p class="" style="white-space:pre-wrap;">You will, however, need macOS Monterey. </p><p class="" style="white-space:pre-wrap;">And that’s so that you can run the <a href="https://developer.apple.com/documentation/realitykit/creating_a_photogrammetry_command-line_app">command line app here</a>.</p><p class="" style="white-space:pre-wrap;">So, I did a capture of my toddler’s plush Baby Yoda. </p>
</div>













































  

    
  
    <div
        class="
          image-block-outer-wrapper
          layout-caption-below
          design-layout-inline
          combination-animation-site-default
          individual-animation-site-default
          individual-text-animation-site-default
        "
        data-test="image-block-inline-outer-wrapper"
    >

      

      
        <figure
            class="
              sqs-block-image-figure
              intrinsic
            "
            style="max-width:2500px;"
        >
          
        
        

        
          
            
          <div
              
              
              class="image-block-wrapper"
              data-animation-role="image"
              
  

          >
            <div class="sqs-image-shape-container-element
              
          
        
              has-aspect-ratio
            " style="
                position: relative;
                
                  padding-bottom:133.3199920654297%;
                
                overflow: hidden;-webkit-mask-image: -webkit-radial-gradient(white, black);
              "
              >
                
                  
                  
                  
                  
                  
                  
                  <img data-stretch="false" src="https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/1623292302666-WI7I43OZSB0H3FCRCVD9/IMG_0002.png" data-image="https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/1623292302666-WI7I43OZSB0H3FCRCVD9/IMG_0002.png" data-image-dimensions="2500x3333" data-image-focal-point="0.5,0.5" alt="IMG_0002.png" data-load="false" src="https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/1623292302666-WI7I43OZSB0H3FCRCVD9/IMG_0002.png" width="2500" height="3333" alt="" sizes="100vw" style="display:block;object-fit: cover; width: 100%; height: 100%; object-position: 50% 50%" srcset="https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/1623292302666-WI7I43OZSB0H3FCRCVD9/IMG_0002.png?format=100w 100w, https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/1623292302666-WI7I43OZSB0H3FCRCVD9/IMG_0002.png?format=300w 300w, https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/1623292302666-WI7I43OZSB0H3FCRCVD9/IMG_0002.png?format=500w 500w, https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/1623292302666-WI7I43OZSB0H3FCRCVD9/IMG_0002.png?format=750w 750w, https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/1623292302666-WI7I43OZSB0H3FCRCVD9/IMG_0002.png?format=1000w 1000w, https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/1623292302666-WI7I43OZSB0H3FCRCVD9/IMG_0002.png?format=1500w 1500w, https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/1623292302666-WI7I43OZSB0H3FCRCVD9/IMG_0002.png?format=2500w 2500w" loading="lazy" decoding="async" data-loader="sqs">
                
            </div>
          </div>
        
          
        

        
      
        </figure>
      

    </div>
  


  




<div class="sqs-html-content">
  <p class="" style="white-space:pre-wrap;"><br>This is Baby Yoda. Yes I know that’s not its name. But it’s Baby Yoda to me.</p><p class="" style="white-space:pre-wrap;">As you can see I took pictures of him on the concrete. I was outside. It was around sunset. The light was nice and diffuse. I took 85 pictures. Just went in a circle around the doll, getting a bottom, mid and toward the top shot. The sample app has a nice little guide about how to take the pictures.</p><p class="" style="white-space:pre-wrap;">The photos are stored in the Files app locally on the phone, so I just selected the folder and airdropped them to my Mac.</p>
</div>













































  

    
  
    <div
        class="
          image-block-outer-wrapper
          layout-caption-below
          design-layout-inline
          combination-animation-site-default
          individual-animation-site-default
          individual-text-animation-site-default
        "
        data-test="image-block-inline-outer-wrapper"
    >

      

      
        <figure
            class="
              sqs-block-image-figure
              intrinsic
            "
            style="max-width:1358px;"
        >
          
        
        

        
          
            
          <div
              
              
              class="image-block-wrapper"
              data-animation-role="image"
              
  

          >
            <div class="sqs-image-shape-container-element
              
          
        
              has-aspect-ratio
            " style="
                position: relative;
                
                  padding-bottom:55.817378997802734%;
                
                overflow: hidden;-webkit-mask-image: -webkit-radial-gradient(white, black);
              "
              >
                
                  
                  
                  
                  
                  
                  
                  <img data-stretch="false" src="https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/1623292554709-5CICQ16XH9EKRXDKJFLY/Screen+Shot+2021-06-09+at+9.35.25+PM.png" data-image="https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/1623292554709-5CICQ16XH9EKRXDKJFLY/Screen+Shot+2021-06-09+at+9.35.25+PM.png" data-image-dimensions="1358x758" data-image-focal-point="0.5,0.5" alt="The files that were taken and extra data for each photo, like depth and gravity." data-load="false" src="https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/1623292554709-5CICQ16XH9EKRXDKJFLY/Screen+Shot+2021-06-09+at+9.35.25+PM.png" width="1358" height="758" alt="" sizes="100vw" style="display:block;object-fit: cover; width: 100%; height: 100%; object-position: 50% 50%" srcset="https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/1623292554709-5CICQ16XH9EKRXDKJFLY/Screen+Shot+2021-06-09+at+9.35.25+PM.png?format=100w 100w, https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/1623292554709-5CICQ16XH9EKRXDKJFLY/Screen+Shot+2021-06-09+at+9.35.25+PM.png?format=300w 300w, https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/1623292554709-5CICQ16XH9EKRXDKJFLY/Screen+Shot+2021-06-09+at+9.35.25+PM.png?format=500w 500w, https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/1623292554709-5CICQ16XH9EKRXDKJFLY/Screen+Shot+2021-06-09+at+9.35.25+PM.png?format=750w 750w, https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/1623292554709-5CICQ16XH9EKRXDKJFLY/Screen+Shot+2021-06-09+at+9.35.25+PM.png?format=1000w 1000w, https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/1623292554709-5CICQ16XH9EKRXDKJFLY/Screen+Shot+2021-06-09+at+9.35.25+PM.png?format=1500w 1500w, https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/1623292554709-5CICQ16XH9EKRXDKJFLY/Screen+Shot+2021-06-09+at+9.35.25+PM.png?format=2500w 2500w" loading="lazy" decoding="async" data-loader="sqs">
                
            </div>
          </div>
        
          
        

        
          
          <figcaption class="image-caption-wrapper">
            <div class="image-caption"><p class="" style="white-space:pre-wrap;">The files that were taken and extra data for each photo, like depth and gravity.</p></div>
          </figcaption>
        
      
        </figure>
      

    </div>
  


  




<div class="sqs-html-content">
  <p class="" style="white-space:pre-wrap;">As you can see, the images also have depth and gravity data since I used the iPhone XS. From what I understand, photos alone will work, but I haven’t checked the quality of that yet.</p><p class="" style="white-space:pre-wrap;">Finally, I compiled my command line tool on Xcode. When you do this, you want to open the Product in Finder like so.</p>
</div>













































  

    
  
    <div
        class="
          image-block-outer-wrapper
          layout-caption-below
          design-layout-inline
          combination-animation-site-default
          individual-animation-site-default
          individual-text-animation-site-default
        "
        data-test="image-block-inline-outer-wrapper"
    >

      

      
        <figure
            class="
              sqs-block-image-figure
              intrinsic
            "
            style="max-width:942px;"
        >
          
        
        

        
          
            
          <div
              
              
              class="image-block-wrapper"
              data-animation-role="image"
              
  

          >
            <div class="sqs-image-shape-container-element
              
          
        
              has-aspect-ratio
            " style="
                position: relative;
                
                  padding-bottom:150.31846618652344%;
                
                overflow: hidden;-webkit-mask-image: -webkit-radial-gradient(white, black);
              "
              >
                
                  
                  
                  
                  
                  
                  
                  <img data-stretch="false" src="https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/1623292705227-UQMQKSTSPEPV65WYJNLP/Screen+Shot+2021-06-09+at+9.38.14+PM.png" data-image="https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/1623292705227-UQMQKSTSPEPV65WYJNLP/Screen+Shot+2021-06-09+at+9.38.14+PM.png" data-image-dimensions="942x1416" data-image-focal-point="0.5,0.5" alt="Opening the command line product in Finder." data-load="false" src="https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/1623292705227-UQMQKSTSPEPV65WYJNLP/Screen+Shot+2021-06-09+at+9.38.14+PM.png" width="942" height="1416" alt="" sizes="100vw" style="display:block;object-fit: cover; width: 100%; height: 100%; object-position: 50% 50%" srcset="https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/1623292705227-UQMQKSTSPEPV65WYJNLP/Screen+Shot+2021-06-09+at+9.38.14+PM.png?format=100w 100w, https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/1623292705227-UQMQKSTSPEPV65WYJNLP/Screen+Shot+2021-06-09+at+9.38.14+PM.png?format=300w 300w, https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/1623292705227-UQMQKSTSPEPV65WYJNLP/Screen+Shot+2021-06-09+at+9.38.14+PM.png?format=500w 500w, https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/1623292705227-UQMQKSTSPEPV65WYJNLP/Screen+Shot+2021-06-09+at+9.38.14+PM.png?format=750w 750w, https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/1623292705227-UQMQKSTSPEPV65WYJNLP/Screen+Shot+2021-06-09+at+9.38.14+PM.png?format=1000w 1000w, https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/1623292705227-UQMQKSTSPEPV65WYJNLP/Screen+Shot+2021-06-09+at+9.38.14+PM.png?format=1500w 1500w, https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/1623292705227-UQMQKSTSPEPV65WYJNLP/Screen+Shot+2021-06-09+at+9.38.14+PM.png?format=2500w 2500w" loading="lazy" decoding="async" data-loader="sqs">
                
            </div>
          </div>
        
          
        

        
          
          <figcaption class="image-caption-wrapper">
            <div class="image-caption"><p class="" style="white-space:pre-wrap;">Opening the command line product in Finder.</p></div>
          </figcaption>
        
      
        </figure>
      

    </div>
  


  




<div class="sqs-html-content">
  <p class="" style="white-space:pre-wrap;">After that you open your Finder window in the terminal. You. can do that by Command, and right clicking (I use right click on my trackpad) on a folder in Finder.</p><p class="" style="white-space:pre-wrap;">Once I was where I wanted to be in Terminal I used the commands.</p>
</div>



<pre><code>./HelloPhotogrammetry ~/Desktop/yoda ~/Desktop/myYoda.usdz -d reduced</code></pre>


<div class="sqs-html-content">
  <p class="" style="white-space:pre-wrap;">This means run the command line program, taking the photos and data from the “yoda” folder on the Desktop and make a USDZ file on the desktop. The detail is to make it “reduced” quality. Watch the video linked above or read the transcript for more information about different settings you can use.</p><p class="" style="white-space:pre-wrap;"><a href="https://www.dropbox.com/s/fz01h11lasq0i3z/myYoda.usdz?dl=0">And that gave me this file I put on Dropbox, which should download to your iPhone if you let it.</a></p><p class="" style="white-space:pre-wrap;">Or you can watch this video!</p>
</div>



<div class="intrinsic" style="max-width:100%"><div class="embed-block-wrapper " style="padding-bottom:56.20609%;"><div class="sqs-video-wrapper" data-provider-name="YouTube" data-html="<br/><br/><br/><br/><br/><br/>  <br/>  &lt;iframe src=&quot;//www.youtube.com/embed/JCOMIlhOJGM?wmode=opaque&quot; height=&quot;480&quot; width=&quot;854&quot; scrolling=&quot;no&quot; frameborder=&quot;0&quot; allowfullscreen&gt;&lt;/iframe&gt;<br/><br/>"></div></div><div  class="video-caption-wrapper"><div class="video-caption"><p class="" style="white-space:pre-wrap;">Checking out this 3D model of Baby Yoda.</p></div></div></div>

<div class="sqs-html-content">
  <p class="" style="white-space:pre-wrap;">I mean it has shadows and everything. It’s pretty awesome.</p><p class="" style="white-space:pre-wrap;">Let me know what you think! I’m @wattmaller1 on Twitter. Would love to see your own awesome scans.</p>
</div>]]></content:encoded>
      <excerpt:encoded />
      <wp:post_name>wwdc-2021-photogrammetry-make-your-own-3d-models-and-somehow-it-actually-worked</wp:post_name>
      <wp:post_type>post</wp:post_type>
      <wp:post_id>8</wp:post_id>
      <wp:status>publish</wp:status>
      <pubDate>Thu, 10 Jun 2021 03:18:07 +0000</pubDate>
      <wp:post_date>2021-06-10 03:18:07</wp:post_date>
      <wp:post_date_gmt>2021-06-10 03:18:07</wp:post_date_gmt>
      <dc:creator>waller.matthew@gmail.com</dc:creator>
      <wp:comment_status>closed</wp:comment_status>
    </item>
    <item>
      <title>PDF Capture App Part 7: Summary &amp;amp; Epilogue</title>
      <link>/blog/pdf-capture-app-part-7-summary-amp-epilogue</link>
      <content:encoded><![CDATA[<div class="sqs-html-content">
  <h2 style="white-space:pre-wrap;">Summary</h2><p class="" style="white-space:pre-wrap;">We’ve reached the end, and to summarize, here is a little git log. And they’re all written as haiku. Five syllables, then seven syllables, then five syllables.</p>
</div>













































  

    
  
    <div
        class="
          image-block-outer-wrapper
          layout-caption-below
          design-layout-inline
          combination-animation-site-default
          individual-animation-site-default
          individual-text-animation-site-default
        "
        data-test="image-block-inline-outer-wrapper"
    >

      

      
        <figure
            class="
              sqs-block-image-figure
              intrinsic
            "
            style="max-width:920px;"
        >
          
        
        

        
          
            
          <div
              
              
              class="image-block-wrapper"
              data-animation-role="image"
              
  

          >
            <div class="sqs-image-shape-container-element
              
          
        
              has-aspect-ratio
            " style="
                position: relative;
                
                  padding-bottom:180.21739196777344%;
                
                overflow: hidden;-webkit-mask-image: -webkit-radial-gradient(white, black);
              "
              >
                
                  
                  
                  
                  
                  
                  
                  <img data-stretch="false" src="https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/1621189017803-3DIB9R4KVR4J7IG8K1XY/commits.png" data-image="https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/1621189017803-3DIB9R4KVR4J7IG8K1XY/commits.png" data-image-dimensions="920x1658" data-image-focal-point="0.5,0.5" alt="Commits written as haiku." data-load="false" src="https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/1621189017803-3DIB9R4KVR4J7IG8K1XY/commits.png" width="920" height="1658" alt="" sizes="100vw" style="display:block;object-fit: cover; width: 100%; height: 100%; object-position: 50% 50%" srcset="https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/1621189017803-3DIB9R4KVR4J7IG8K1XY/commits.png?format=100w 100w, https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/1621189017803-3DIB9R4KVR4J7IG8K1XY/commits.png?format=300w 300w, https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/1621189017803-3DIB9R4KVR4J7IG8K1XY/commits.png?format=500w 500w, https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/1621189017803-3DIB9R4KVR4J7IG8K1XY/commits.png?format=750w 750w, https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/1621189017803-3DIB9R4KVR4J7IG8K1XY/commits.png?format=1000w 1000w, https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/1621189017803-3DIB9R4KVR4J7IG8K1XY/commits.png?format=1500w 1500w, https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/1621189017803-3DIB9R4KVR4J7IG8K1XY/commits.png?format=2500w 2500w" loading="lazy" decoding="async" data-loader="sqs">
                
            </div>
          </div>
        
          
        

        
          
          <figcaption class="image-caption-wrapper">
            <div class="image-caption"><p class="" style="white-space:pre-wrap;">Commits written as haikus.</p></div>
          </figcaption>
        
      
        </figure>
      

    </div>
  


  




<div class="sqs-html-content">
  <p class="" style="white-space:pre-wrap;">Let’s summarize each one.</p><blockquote><p class="" style="white-space:pre-wrap;"><a href="https://www.cephalopod.studio/blog/making-a-pdf-capture-app-part-1">Getting started now</a></p><p class="" style="white-space:pre-wrap;"><a href="https://www.cephalopod.studio/blog/making-a-pdf-capture-app-part-1">The state is pretty well set</a></p><p class="" style="white-space:pre-wrap;"><a href="https://www.cephalopod.studio/blog/making-a-pdf-capture-app-part-1">Time to make magic</a></p></blockquote><p class="" style="white-space:pre-wrap;">With that one we created our initial PDF creation and viewing.</p><blockquote><p class="" style="white-space:pre-wrap;"><a href="https://www.cephalopod.studio/blog/making-a-pdf-capture-app-part-2">Remove save testing</a></p><p class="" style="white-space:pre-wrap;"><a href="https://www.cephalopod.studio/blog/making-a-pdf-capture-app-part-2">We don’t need it now, do we?</a></p><p class="" style="white-space:pre-wrap;"><a href="https://www.cephalopod.studio/blog/making-a-pdf-capture-app-part-2">The demo is done.</a></p></blockquote><p class="" style="white-space:pre-wrap;">With that we persisted our PDF and changes to it.</p><blockquote><p class="" style="white-space:pre-wrap;"><a href="https://www.cephalopod.studio/blog/making-pdf-capture-app-part-3">This is great right now!</a></p><p class="" style="white-space:pre-wrap;"><a href="https://www.cephalopod.studio/blog/making-pdf-capture-app-part-3">It scans documents; it rocks!</a></p><p class="" style="white-space:pre-wrap;"><a href="https://www.cephalopod.studio/blog/making-pdf-capture-app-part-3">Next we make it nice.</a></p></blockquote><p class="" style="white-space:pre-wrap;">With that we started saving actual documents! And it already proved to be more efficient than the notes app!</p><blockquote><p class="" style="white-space:pre-wrap;"><a href="https://www.cephalopod.studio/blog/pdf-capture-app-part-4-swiftui-pro-tip-amp-pdf-editing">Edit or delete</a></p><p class="" style="white-space:pre-wrap;"><a href="https://www.cephalopod.studio/blog/pdf-capture-app-part-4-swiftui-pro-tip-amp-pdf-editing">Or you can insert pages</a></p><p class="" style="white-space:pre-wrap;"><a href="https://www.cephalopod.studio/blog/pdf-capture-app-part-4-swiftui-pro-tip-amp-pdf-editing">And it’s all so clean</a></p></blockquote><p class="" style="white-space:pre-wrap;">With that we did our editing pages so that you can draw on them, add text annotations, or even add signatures! Also a bit of code combined in there that can delete and insert pages from a later post</p><blockquote><p class="" style="white-space:pre-wrap;">Starting a new branch</p><p class="" style="white-space:pre-wrap;">To make new discoveries</p><p class="" style="white-space:pre-wrap;">And share them online.</p></blockquote><p class="" style="white-space:pre-wrap;">Nothing to see here. Reorganizing, adjusting branches.</p><blockquote><p class="" style="white-space:pre-wrap;"><a href="https://www.cephalopod.studio/blog/pdf-capture-app-part-5-defeating-the-boss">Now we can add our</a></p><p class="" style="white-space:pre-wrap;"><a href="https://www.cephalopod.studio/blog/pdf-capture-app-part-5-defeating-the-boss">PDF pages through files.</a></p><p class="" style="white-space:pre-wrap;"><a href="https://www.cephalopod.studio/blog/pdf-capture-app-part-5-defeating-the-boss">Productivity!</a></p></blockquote><p class="" style="white-space:pre-wrap;">With that we finish the edit or delete pages bit, meaning that not only are we a step ahead of the Notes app in terms of efficiency and features for PDFs, we’re also ahead of the Files app because we can let the user append and delete pages. We’re now surpassed the built-in app competition.</p><blockquote><p class="" style="white-space:pre-wrap;">Now we have photos!</p><p class="" style="white-space:pre-wrap;">I could add baby pictures</p><p class="" style="white-space:pre-wrap;">To a PDF</p></blockquote><p class="" style="white-space:pre-wrap;">This is me doing extra credit. Now I can add existing PDFs and image through Files, and through the camera roll.</p><blockquote><p class="" style="white-space:pre-wrap;"><a href="https://www.cephalopod.studio/blog/making-a-pdf-capture-app-part-6-endgame">Text is recognized</a></p><p class="" style="white-space:pre-wrap;"><a href="https://www.cephalopod.studio/blog/making-a-pdf-capture-app-part-6-endgame">The PDF shows the words</a></p><p class="" style="white-space:pre-wrap;"><a href="https://www.cephalopod.studio/blog/making-a-pdf-capture-app-part-6-endgame">And progress is seen!</a></p></blockquote><p class="" style="white-space:pre-wrap;">Finally we add an awesome feature and a flourish: high-quality OCR in our PDF scanner. Awesome.</p><h2 style="white-space:pre-wrap;">Epilogue</h2><p class="" style="white-space:pre-wrap;">So, release the app next week eh?</p><p class="" style="white-space:pre-wrap;">Not so fast. There is a lot to do. First, I would want to make it look presentable. We’re only got three buttons and a form to adjust, but to get those right and add appropriate accessibility and really craft them out can take a lot of worthwhile time, so we’ll do that.</p><p class="" style="white-space:pre-wrap;">And then we’ve got all the sad-face paths. We’re got the happy paths, and now we need to decide what to do if things go wrong. What if a PDF already has text? What if users want to redo the text recognition? What if they want to cancel recognition? What if they try recognizing and no text gets recognized? What if an editing error occurs?</p><p class="" style="white-space:pre-wrap;">And then the testing. We want to be able to debug and refactor and maybe add new features without breaking the app. So all of this need thorough testing, both unit tests and UI tests. The whole bit.</p><p class="" style="white-space:pre-wrap;">Only then do we work on submittal and marketing and so on. We’ve come a long way and there is still plenty to do.</p><p class="" style="white-space:pre-wrap;">Including undoing what I may have done wrong! I’m still not sure my persistence schemes are the best. Or maybe I shouldn’t save in place with the preview controller and should request a copy of the object instead. Lots to think about as we discover more about DocumentGroup and the like.</p><p class="" style="white-space:pre-wrap;">Regardless, I hope you’ve found this series interesting or useful, and that you might have ideas of your own about where you can go with this. Until next time, happy coding.</p>
</div>]]></content:encoded>
      <excerpt:encoded />
      <wp:post_name>pdf-capture-app-part-7-summary-amp-epilogue</wp:post_name>
      <wp:post_type>post</wp:post_type>
      <wp:post_id>9</wp:post_id>
      <wp:status>publish</wp:status>
      <pubDate>Sun, 16 May 2021 18:42:27 +0000</pubDate>
      <wp:post_date>2021-05-16 18:42:27</wp:post_date>
      <wp:post_date_gmt>2021-05-16 18:42:27</wp:post_date_gmt>
      <dc:creator>waller.matthew@gmail.com</dc:creator>
      <wp:comment_status>closed</wp:comment_status>
    </item>
    <item>
      <title>Making a PDF Capture App Part 6: The OCR Endgame</title>
      <link>/blog/making-a-pdf-capture-app-part-6-endgame</link>
      <content:encoded><![CDATA[<div class="sqs-html-content">
  <p class="" style="white-space:pre-wrap;">Here it is, the final feature. We’ve already overcome in the native competition with our adding and removal of pages and making the process of capturing a PDF more efficient. Next we add OCR, or optical character recognition, to make our app even more worthwhile for customers, and to add a certain flair and fun.</p><p class="" style="white-space:pre-wrap;">OCR basically means we recognize text inside the PDF image. Now people won’t only have a digital version of their document; they can do whatever they want with the text!</p><p class="" style="white-space:pre-wrap;">This means our new app not only implements augmented reality (digitally perceiving and overlaying the real world through the scanner, in our case), but it also gets to implement top-of-the-line AI/ML. AND I would like to point out that all of this advanced processing is happening on the device. No Internet needed, no services, no accounts, no API. Just getting down to business with cutting-edge, privacy-focused technology. Pretty hot stuff.</p><p class="" style="white-space:pre-wrap;">Let’s get to it.</p><p class="" style="white-space:pre-wrap;">Here, first of all, is our text recognition code to extract text from an image:</p>
</div>



<pre><code>import Foundation
import PDFKit
import Vision
import VisionKit

class TextRecognizer {
    struct TextRecognitionValue {
        let pageIndex: Int
        let rect: CGRect
        let string: String
    }

    func recognizeText(inImage image: UIImage,
                       atIndex index: Int,
                       withProgressHandler progressHandler: @escaping (Double, Int) -&gt; Void,
                       withCompletionHandler completionHandler: @escaping ([TextRecognitionValue]) -&gt; Void) {
        // 1
        let request = VNRecognizeTextRequest { request, error in
            // 2
            if let observatons = request.results as? [VNRecognizedTextObservation] {
            // 3
                let values: [TextRecognitionValue] = observatons.compactMap {
                    // 4
                    if let topCandidate = $0.topCandidates(1).first, topCandidate.confidence &gt; 0.35 {
                        // 5
                        if let rect = try? topCandidate.boundingBox(for: topCandidate.string.startIndex..&lt;topCandidate.string.endIndex) {
                            return TextRecognitionValue(pageIndex: index, rect: rect.boundingBox, string: topCandidate.string)
                        }
                    }
                    return nil
                }

                DispatchQueue.main.async {
                    completionHandler(values)
                }
            }
        }

        // 6
        request.recognitionLanguages = ["en_US"]

        // 7
        request.progressHandler = { _, progress, _ in
            progressHandler(progress, index)
        }

        guard let imageToUse = image.cgImage else {
            completionHandler([])
            return
        }

        // 8
        let handler = VNImageRequestHandler(cgImage: imageToUse, options: [:])
        do {
            try handler.perform([request])
        } catch {
            // TODO: Handle error
        }
    }
}</code></pre>


<div class="sqs-html-content">
  <p class="" style="white-space:pre-wrap;">So going through the numbered comments:</p><ol data-rte-list="default"><li><p class="" style="white-space:pre-wrap;">First we make our request, which comes with a completion handler.</p></li><li><p class="" style="white-space:pre-wrap;">Inside the handler we unwrap the result to see if we got any observations</p></li><li><p class="" style="white-space:pre-wrap;">If we got observations we convert them into values, which are the TextRecognitionValue structs we defined as part of this class. These struct keep track of the PDF page of each value, the string, and the bounding box.</p></li><li><p class="" style="white-space:pre-wrap;">So next we take the top candidate, or best guess, and make sure it has a reasonable confidence level. This will keep us from trying to read things like signatures, but you may also want to let the user know it could limit the text it can get from PDFs, if they’re poor quality documents or pictures of documents.</p></li><li><p class="" style="white-space:pre-wrap;">And finally, we get the bounding box for the whole string o the top candidate</p></li><li><p class="" style="white-space:pre-wrap;">After that we set the language we’re looking for.</p></li><li><p class="" style="white-space:pre-wrap;">Then we create a progress handler that’ll let us tell the user how far along this operation is going.</p></li><li><p class="" style="white-space:pre-wrap;">After making sure we have the image in the format we need, we create a handler that performs the request and we’re off.</p></li></ol><p class="" style="white-space:pre-wrap;">That was it!</p><p class="" style="white-space:pre-wrap;">Now, when we create our progress view, you might be tempted to add yet another @Published variable to our PDFManager. I would recommend against this. Better to create a separate view model for our new property. This way, we don’t update all of the other views that are dependent on the PDFManager.</p><p class="" style="white-space:pre-wrap;">So we make this:</p>
</div>



<pre><code>import SwiftUI

class TextRecognitionProgressReporter: ObservableObject {
    @Published var progress: Double = 0
}</code></pre>


<div class="sqs-html-content">
  <p class="" style="white-space:pre-wrap;">And with that we can make our progress view.</p>
</div>



<pre><code>import SwiftUI

struct TextRecognitionProgressView: View {
    @ObservedObject var reporter: TextRecognitionProgressReporter
    var body: some View {
        VStack {
            Text("Recognizing Text")
            ProgressView(value: reporter.progress)
        }
        .padding()
    }
}

struct TextRecognitionProgressView_Previews: PreviewProvider {
    static var previews: some View {
        TextRecognitionProgressView(reporter: TextRecognitionProgressReporter())
    }
}</code></pre>


<div class="sqs-html-content">
  <p class="" style="white-space:pre-wrap;">It’s pretty plain, but it will do for this skeleton of an app.</p><p class="" style="white-space:pre-wrap;">Now to modify the PDFManager, where heavy lifting is done.</p><p class="" style="white-space:pre-wrap;">We’ll add some properties to PDFManager</p>
</div>



<pre><code>var pageCount: Int {
    document?.pdf.pageCount ?? 0
}

var textRecognitionProgressReporter = TextRecognitionProgressReporter()
private var completionTracker: Int = 0
private var textRecognizer = TextRecognizer()</code></pre>


<div class="sqs-html-content">
  <p class="" style="white-space:pre-wrap;">We’ll also update our PDFTrapperNavigation enum from last time to have a new category: .recognizingText</p><p class="" style="white-space:pre-wrap;">So far so good, but one thing we’re going to want to do is, if we’ve already scanned and captured our PDF, we’ll want to turn the PDF back into an image for the recognizer. So let’s add this method to PDFManager:</p>
</div>



<pre><code>private func getImage(fromPage page: PDFPage) -&gt; UIImage? {
        let pageRect = page.bounds(for: .mediaBox)

        let renderer = UIGraphicsImageRenderer(size: pageRect.size)

        let image = renderer.jpegData(withCompressionQuality: 1.0, actions: { context in
            UIColor.white.set()
            context.fill(pageRect)
            context.cgContext.translateBy(x: 0.0, y: pageRect.size.height);
            context.cgContext.scaleBy(x: 1.0, y: -1.0);
            page.draw(with: .mediaBox, to: context.cgContext)
        })

        return UIImage(data: image)
    }</code></pre>


<div class="sqs-html-content">
  <p class="" style="white-space:pre-wrap;">This gives us a nice high quality image to extract the most text we can.</p><p class="" style="white-space:pre-wrap;">Next, let’s add a method that will take the values and add them to the PDF:</p>
</div>



<pre><code>private func addTextToPDF(values: [TextRecognizer.TextRecognitionValue]) {
        // TODO
    }</code></pre>


<div class="sqs-html-content">
  <p class="" style="white-space:pre-wrap;">And now let’s use that method in another method that will fire when our text recognition is done:</p>
</div>



<pre><code>private func textCompletionHandler(_ values: [TextRecognizer.TextRecognitionValue]) {
        DispatchQueue.main.async {
            [weak self] in
                guard let self = self else {
                    return
                }

                self.addTextToPDF(values: values)

                self.completionTracker -= 1
                if self.completionTracker == 0 {
                    self.save()
                }
        }
    }</code></pre>


<div class="sqs-html-content">
  <p class="" style="white-space:pre-wrap;">As you can see, each time we get an array of values we’ve finished a page, and so each time we subtract until we get to zero, and we know that our pages are done.</p><p class="" style="white-space:pre-wrap;">This wouldn’t be very good form if the user was doing things like, recognizing multiple PDFs at once. Then you would want a queue system and such. But since we’re working with one PDF at a time, we should be good to go.</p><p class="" style="white-space:pre-wrap;">We’ll also want to create our progress handler, to take care of showing where we’re at in the recognition.</p>
</div>



<pre><code>private func progressHandler(_ progress: Double, index: Int) {
        DispatchQueue.main.async {[weak self] in
            guard let self = self else {
                return
            }

            self.textRecognitionProgressReporter.progress = (progress + Double(index) / Double(self.pageCount))

        }
    }</code></pre>


<div class="sqs-html-content">
  <p class="" style="white-space:pre-wrap;">And with that, we can create our new method to get the text!</p>
</div>



<pre><code>func getText() {
        // Show progress screen
        guard let pdf = document?.pdf else {
            // Show error message
            return
        }

        guard pdf.pageCount &gt; 0 else {
            // Show error message
            return
        }

        completionTracker = pageCount
        textRecognitionProgressReporter.progress = 0
        navigation = .recognizingText
        DispatchQueue.global(qos: .userInitiated).async { [weak self] in
            guard let self = self else { return }
            for pageIndex in 0 ..&lt; pdf.pageCount {
                if let page = pdf.page(at: pageIndex),
                   let image = self.getImage(fromPage: page) {
                    self.textRecognizer.recognizeText(inImage: image,
                                                 atIndex: pageIndex,
                                                 withProgressHandler: self.progressHandler,
                                                 withCompletionHandler: self.textCompletionHandler)
                }
            }
        }
    }</code></pre>


<div class="sqs-html-content">
  <p class="" style="white-space:pre-wrap;">To fire off this new method we’ve created I’m going to add a button to our controls and put it in its own view.</p>
</div>



<pre><code>import SwiftUI

struct PDFMainControls: View {
    @ObservedObject var manager = PDFManager()
    var body: some View {
        HStack {
            Button("Get Text") {
                manager.getText()
            }
            Button("Editing Canvas") {
                withAnimation {
                    manager.navigation = .showEditor
                }
                DispatchQueue.main.asyncAfter(deadline: .now() + 0.3) {
                    manager.startEditMode.send()
                }
            }
            Button("Add/Remove Pages") {
                withAnimation {
                    manager.navigation = .showAddRemovePages
                }
            }
        }
    }
}</code></pre>


<div class="sqs-html-content">
  <p class="" style="white-space:pre-wrap;">With that, we can put together our main ContentView, which now looks like this:</p>
</div>



<pre><code>import Combine
import PDFKit
import SwiftUI

struct ContentView: View {
    @StateObject var manager = PDFManager()
    @Binding var document: PDFTrapperDocument
    var fileURL: URL?

    private func save() {
        document.setAsNotBlank()
        document.saveTrigger.toggle()

       refresh()
    }

    private func refresh() {
        withAnimation {
            manager.navigation = .refreshing
        }

        DispatchQueue.main.asyncAfter(deadline: .now() + 0.3) {
            withAnimation {
                manager.navigation = .showPDFMain
            }
        }
    }

    var body: some View {
        ZStack {
            PhotoLibraryController(presenter: manager.photoPickerPresenter,
                                   reporter: manager.photoPickerReporter)
                .opacity(0)
            FilePickerController(presenter: manager.filePickerPresenter,
                                 reporter: manager.filePickerReporter)
                .opacity(0)
            if let url = fileURL {
                QuickLookController(startEditing: manager.startEditMode, url: url) {
                    if let refreshedPDF = PDFDocument(url: url) {
                        document.pdf = refreshedPDF
                        save()
                    }
                }
                .opacity(0)
            }
            switch manager.navigation {
            case .showPDFMain:
                if !document.isBlank {
                    VStack {
                        PDFDisplayView(pdf: document.pdf)
                        PDFMainControls(manager: manager)
                    }
                }                
            case .showScanner:
                ScannerView { images in
                    manager.addPhotos(images)
                }
            case .showAddRemovePages:
                AddRemovePagesView(pageCount: manager.pageCount, manager: manager)
            case .recognizingText:
                TextRecognitionProgressView(reporter: manager.textRecognitionProgressReporter)
            case .refreshing, .showEditor:
                ProgressView()
            }
        }
        .onAppear {
            manager.document = document
            if document.isBlank {
                withAnimation {
                    manager.navigation = .showScanner
                }
            }
        }
        .onReceive(manager.saveReporter, perform: save)
    }
}</code></pre>


<div class="sqs-html-content">
  <h2 style="white-space:pre-wrap;">Adding the text</h2><p class="" style="white-space:pre-wrap;">Alright, that was a lot of putting things together. And right now we will in fact be able to get text from our document!</p><p class="" style="white-space:pre-wrap;">But how do we show it? What do we do with it? We have the entire addTextToPDF method to fill out.</p><p class="" style="white-space:pre-wrap;">Let’s add a simple annotation to hold our text.</p>
</div>



<pre><code>private func addTextToPDF(values: [TextRecognizer.TextRecognitionValue]) {
        guard let index = values.first?.pageIndex,
              let page = document?.pdf.page(at: index) else {
            return
        }

        let completeTextArray = values.map {
            $0.string
        }

        let completeText = completeTextArray.joined(separator: "\n\n")

        let annotation = PDFAnnotation(bounds: CGRect(origin: .zero, size: CGSize(width: 200, height: 200)), forType: .text, withProperties: nil)
        annotation.iconType = .note
        annotation.contents = completeText
        annotation.font = UIFont.systemFont(ofSize: 15)
        annotation.fontColor = .black
        annotation.color = .yellow

        page.addAnnotation(annotation)
    }</code></pre>


<div class="sqs-html-content">
  <p class="" style="white-space:pre-wrap;">And here are the fruits of our labor!</p>
</div>



<div class="intrinsic" style="max-width:100%"><div class="embed-block-wrapper " style="padding-bottom:56.20609%;"><div class="sqs-video-wrapper" data-provider-name="YouTube" data-html="<br/><br/><br/><br/><br/><br/>  <br/>  &lt;iframe src=&quot;//www.youtube.com/embed/kTttxdh20o8?wmode=opaque&quot; height=&quot;480&quot; width=&quot;854&quot; scrolling=&quot;no&quot; frameborder=&quot;0&quot; allowfullscreen&gt;&lt;/iframe&gt;<br/><br/>"></div></div><div  class="video-caption-wrapper"><div class="video-caption"><p class="" style="white-space:pre-wrap;">Our app captures a PDF from a scan and recognizes even cursive handwriting.</p></div></div></div>

<div class="sqs-html-content">
  <h2 style="white-space:pre-wrap;">Next Level OCR - A Terrible Tease</h2><p class="" style="white-space:pre-wrap;">Okay, so we have the text. But we also have binding boxes. We know where the text goes on the page! So I took the next step and actually wrote the words on the page in clear color so that the text can be directly selected, copied, pasted and searched for on the page!</p><p class="" style="white-space:pre-wrap;">This however, is where the journey ends. For those who want extra credit though, and want to do what I did, I’ll give some hints:</p>
</div>



<pre><code>pageBox = page.bounds(for: .mediaBox)
            let renderer = UIGraphicsPDFRenderer(bounds: pageBox, format: format)
            let pageData = renderer.pdfData { [weak self] context in
                guard let self = self else { return }
                self.drawTextInPDF(withContext: context,
                                   pageBox: pageBox,
                                   page: page,
                                   values: values)
..........

private func drawTextInPDF(withContext context: UIGraphicsPDFRendererContext,
                               pageBox: CGRect,
                               page: PDFPage,
                               values: [TextRecognizer.TextRecognitionValue]) {
        let widthMultiplier = pageBox.width
        let heightMultiplier = pageBox.height
        context.beginPage()

        let flipVertical: CGAffineTransform = CGAffineTransform(a: 1, b: 0, c: 0, d: -1, tx: 0, ty: pageBox.size.height)
        context.cgContext.concatenate(flipVertical)

        page.draw(with: .mediaBox, to: context.cgContext)

        context.cgContext.concatenate(flipVertical)

............

let boundingBox = value.string.boundingRect(with: constraintRect,
                                                        options: [.usesLineFragmentOrigin, .usesFontLeading],
                                                        context: nil)</code></pre>


<div class="sqs-html-content">
  <p class="" style="white-space:pre-wrap;">Okay, okay, I’lll stop being cryptic. As a general overview, use UIGraphicsPDFRenderer to create a page draw the text with the cgContext. And scale the text into the shape of the bounding box. Which is normalized, BTW, so you’ll want to get the dimensions according to the size of the PDF.</p><p class="" style="white-space:pre-wrap;">And with all of that, you can get something as awesome as this:</p>
</div>



<div class="intrinsic" style="max-width:100%"><div class="embed-block-wrapper " style="padding-bottom:56.20609%;"><div class="sqs-video-wrapper" data-provider-name="YouTube" data-html="<br/><br/><br/><br/><br/><br/>  <br/>  &lt;iframe src=&quot;//www.youtube.com/embed/fid9wh0Vbc8?wmode=opaque&quot; height=&quot;480&quot; width=&quot;854&quot; scrolling=&quot;no&quot; frameborder=&quot;0&quot; allowfullscreen&gt;&lt;/iframe&gt;<br/><br/>"></div></div><div  class="video-caption-wrapper"><div class="video-caption"><p class="" style="white-space:pre-wrap;">PDF OCR done with drawing the text inline.</p></div></div></div>

<div class="sqs-html-content">
  <p class="" style="white-space:pre-wrap;">With that, our app’s core functionality is complete. Tune in next time for the epilogue, where we will go over all we have completed and what it will take to actually bring this app to market! Until next time, happy coding.</p>
</div>]]></content:encoded>
      <excerpt:encoded />
      <wp:post_name>making-a-pdf-capture-app-part-6-endgame</wp:post_name>
      <wp:post_type>post</wp:post_type>
      <wp:post_id>10</wp:post_id>
      <wp:status>publish</wp:status>
      <pubDate>Sat, 15 May 2021 16:08:13 +0000</pubDate>
      <wp:post_date>2021-05-15 16:08:13</wp:post_date>
      <wp:post_date_gmt>2021-05-15 16:08:13</wp:post_date_gmt>
      <dc:creator>waller.matthew@gmail.com</dc:creator>
      <wp:comment_status>closed</wp:comment_status>
    </item>
    <item>
      <title>Refining Accessibility: Lessons Learned</title>
      <link>/blog/refining-accessibility-lessons-learned</link>
      <content:encoded><![CDATA[<div class="sqs-html-content">
  <p class="" style="white-space:pre-wrap;">In my post about <a href="https://www.cephalopod.studio/blog/swiftui-aurora-background-animation">making a really cool aurora background</a> I had a section on adjusting for accessibility. I’ve since reconsidered what I wrote and wanted to share more about what I’ve learned.</p><h3 style="white-space:pre-wrap;">Rethinking Our Steps</h3><p class="" style="white-space:pre-wrap;">The first setting I adjusted for in my morphing, animating background is called reducedMotion.</p><p class="" style="white-space:pre-wrap;">The guidelines for motion are worth looking at in full:<br>This is from <a href="https://developer.apple.com/design/human-interface-guidelines/accessibility/overview/appearance-effects/#motion">Apple’s Human Interface Guidelines</a>:</p>
</div>



<p><strong>Motion</strong></p>
<p>Don’t require animations unless they’re vital to your app’s purpose. In general, people should be able to use your app without relying on any animations.</p>
<p>Play tightened animations when Reduce Motion is on. People can turn on Reduce Motion if they tend to get distracted or experience dizziness or nausea when viewing animations that include effects such as zooming, scaling, spinning, or peripheral motion. In response to this setting, consider tightening the physics of your animations so that they remain rich and engaging, but have reduced motion. For example:</p>
<p>Tighten springs to reduce bounce effects or track 1:1 with the user’s finger
Avoid animating depth changes in z-axis layers
Avoid animating into or out of blurs
Replace a slide with a fade to avoid motion
Let people control video and other motion effects. Avoid autoplaying video or effects without also providing a button or other way to control them.</p>
<p>Be cautious when displaying moving or blinking elements. Although subtle movement and blinking can draw the user’s attention, these effects can also be distracting and they aren’t useful for people with visual impairments. Worse, some blinking elements can cause epileptic episodes. In all cases, avoid using movement and blinking as the only way to convey information.</p>



<div class="sqs-html-content">
  <p class="" style="white-space:pre-wrap;">So, stopping the shapes from animating in our aurora background was the right way to go! Yay!</p><p class="" style="white-space:pre-wrap;">What about reducedTransparency? Last time I wrote:</p>
</div>



<p>"Technically our blur is not a transparency, but it gives off the same feel and requires more device calculations behind the scene, so we’ll go ahead and disable it.</p>
<p>However, the circles without the blur don’t look that great. Instead of just disabling the blur and the transparencies within the colors, let’s do something special for the user and provide a unique gradient. And we’ll have it go from top leading to bottom trailing so that it isn’t too plain."</p>



<div class="sqs-html-content">
  <p class="" style="white-space:pre-wrap;">From the Human Interface Guidelines (HIG) again:</p>
</div>



<p>"<strong>Change blurring and transparency when users turn on Reduce Transparency</strong>. For example, areas of blurred content and translucency should become mostly opaque. For best results, use a color value in the opaque area that’s different from the original color value you used when the area was blurred or translucent."</p>



<div class="sqs-html-content">
  <p class="" style="white-space:pre-wrap;">So, it doesn’t mean that we remove all transparency. And it means we should re-examine colors.</p><p class="" style="white-space:pre-wrap;">Again, I think we made the right decision.<br><br>It’s really the last area I gave the biggest rethink: accessibilityDifferentiateWithoutColor. The documentation for this property states: </p>
</div>



<p>If this property is YES, the user interface avoids conveying information using color alone. Instead, use shapes or glyphs to convey important information.</p>



<div class="sqs-html-content">
  <p class="" style="white-space:pre-wrap;">I turned the background into solid colors, but was this necessary? Our designers kept colorblindness in mind when making the designs and, most importantly, we’re not conveying any state information. The background is mostly aesthetic, meant to contribute to the mood and feel of the app. So, in this case, for our background we will ignore this property.</p><h3 style="white-space:pre-wrap;">Reduced Means Reduced</h3><p class="" style="white-space:pre-wrap;">Just something else to keep in mind as I made changes for things like headers in the Pearl app. If you have a color with opacity, you can make it more solid and adjust the color for things like reduced transparency. And if a button fades in slightly (like the trash icon when a deletion option becomes available), this isn’t really an animation that needs to be completely avoided in the course of making an app. </p><p class="" style="white-space:pre-wrap;">Reduced means reduced. We can make animations tighter where necessary, for instance. In general, we keep the end goals in mind of making the user not feel confused, dizzy, or nauseous. </p><h3 style="white-space:pre-wrap;">Large Text Adjustments</h3><p class="" style="white-space:pre-wrap;">I ran into a bunch of troubles getting the built-in SwiftUI Navigation bar to behave exactly as I wanted it to. I wanted buttons that were a bit more custom, and I wanted to fade in those buttons, and the navigation bar was giving me a tough time. I couldn’t animate anything in that bar! </p><p class="" style="white-space:pre-wrap;">But I also really liked the large title fading into the inline title. And I didn't need to worry about much actual navigating, my other screens presented are presented modally, so without too much trouble I recreated the navigation bar experience in concert with my LazyVGrid.</p>
</div>



<div class="intrinsic" style="max-width:100%"><div class="embed-block-wrapper " style="padding-bottom:75.0%;"><div class="sqs-video-wrapper" data-provider-name="YouTube" data-html="<br/><br/><br/><br/><br/><br/>  <br/>  &lt;iframe src=&quot;//www.youtube.com/embed/B0RdAhduBs0?wmode=opaque&quot; height=&quot;480&quot; width=&quot;640&quot; scrolling=&quot;no&quot; frameborder=&quot;0&quot; allowfullscreen&gt;&lt;/iframe&gt;<br/><br/>"></div></div></div>

<div class="sqs-html-content">
  <p class="" style="white-space:pre-wrap;">Not bad so far. What does it look like with the largest text enabled? With the trash icon enabled?</p>
</div>













































  

    
  
    <div
        class="
          image-block-outer-wrapper
          layout-caption-below
          design-layout-inline
          combination-animation-site-default
          individual-animation-site-default
          individual-text-animation-site-default
        "
        data-test="image-block-inline-outer-wrapper"
    >

      

      
        <figure
            class="
              sqs-block-image-figure
              intrinsic
            "
            style="max-width:600px;"
        >
          
        
        

        
          
            
          <div
              
              
              class="image-block-wrapper"
              data-animation-role="image"
              
  

          >
            <div class="sqs-image-shape-container-element
              
          
        
              has-aspect-ratio
            " style="
                position: relative;
                
                  padding-bottom:67.33333587646484%;
                
                overflow: hidden;-webkit-mask-image: -webkit-radial-gradient(white, black);
              "
              >
                
                  
                  
                  
                  
                  
                  
                  <img data-stretch="false" src="https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/1618083781118-JYQJ94NLYDNYFIVR5Y4L/MyPearlsNotFitting.png" data-image="https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/1618083781118-JYQJ94NLYDNYFIVR5Y4L/MyPearlsNotFitting.png" data-image-dimensions="600x404" data-image-focal-point="0.5,0.5" alt="The “My Pearls” text does not fit." data-load="false" src="https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/1618083781118-JYQJ94NLYDNYFIVR5Y4L/MyPearlsNotFitting.png" width="600" height="404" alt="" sizes="100vw" style="display:block;object-fit: cover; width: 100%; height: 100%; object-position: 50% 50%" srcset="https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/1618083781118-JYQJ94NLYDNYFIVR5Y4L/MyPearlsNotFitting.png?format=100w 100w, https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/1618083781118-JYQJ94NLYDNYFIVR5Y4L/MyPearlsNotFitting.png?format=300w 300w, https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/1618083781118-JYQJ94NLYDNYFIVR5Y4L/MyPearlsNotFitting.png?format=500w 500w, https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/1618083781118-JYQJ94NLYDNYFIVR5Y4L/MyPearlsNotFitting.png?format=750w 750w, https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/1618083781118-JYQJ94NLYDNYFIVR5Y4L/MyPearlsNotFitting.png?format=1000w 1000w, https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/1618083781118-JYQJ94NLYDNYFIVR5Y4L/MyPearlsNotFitting.png?format=1500w 1500w, https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/1618083781118-JYQJ94NLYDNYFIVR5Y4L/MyPearlsNotFitting.png?format=2500w 2500w" loading="lazy" decoding="async" data-loader="sqs">
                
            </div>
          </div>
        
          
        

        
          
          <figcaption class="image-caption-wrapper">
            <div class="image-caption"><p class="" style="white-space:pre-wrap;">The “My Pearls” text does not fit.</p></div>
          </figcaption>
        
      
        </figure>
      

    </div>
  


  




<div class="sqs-html-content">
  <p class="" style="white-space:pre-wrap;">Goodness, there is not way “My Pearls” is going to fit. So, what does Apple do in these instances (generally a pretty helpful question; and we can pull out first-party apps and take a look).</p><p class="" style="white-space:pre-wrap;">It turns out that the text doesn’t grow to a full size very often. So We can use fixed size here.</p>
</div>













































  

    
  
    <div
        class="
          image-block-outer-wrapper
          layout-caption-below
          design-layout-inline
          combination-animation-site-default
          individual-animation-site-default
          individual-text-animation-site-default
        "
        data-test="image-block-inline-outer-wrapper"
    >

      

      
        <figure
            class="
              sqs-block-image-figure
              intrinsic
            "
            style="max-width:600px;"
        >
          
        
        

        
          
            
          <div
              
              
              class="image-block-wrapper"
              data-animation-role="image"
              
  

          >
            <div class="sqs-image-shape-container-element
              
          
        
              has-aspect-ratio
            " style="
                position: relative;
                
                  padding-bottom:84.5%;
                
                overflow: hidden;-webkit-mask-image: -webkit-radial-gradient(white, black);
              "
              >
                
                  
                  
                  
                  
                  
                  
                  <img data-stretch="false" src="https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/1618083981806-35ADMMRXXWRFUZ0EAG6O/MyPearlsFits.png" data-image="https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/1618083981806-35ADMMRXXWRFUZ0EAG6O/MyPearlsFits.png" data-image-dimensions="600x507" data-image-focal-point="0.5,0.5" alt="Now “My Pearls fits." data-load="false" src="https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/1618083981806-35ADMMRXXWRFUZ0EAG6O/MyPearlsFits.png" width="600" height="507" alt="" sizes="100vw" style="display:block;object-fit: cover; width: 100%; height: 100%; object-position: 50% 50%" srcset="https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/1618083981806-35ADMMRXXWRFUZ0EAG6O/MyPearlsFits.png?format=100w 100w, https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/1618083981806-35ADMMRXXWRFUZ0EAG6O/MyPearlsFits.png?format=300w 300w, https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/1618083981806-35ADMMRXXWRFUZ0EAG6O/MyPearlsFits.png?format=500w 500w, https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/1618083981806-35ADMMRXXWRFUZ0EAG6O/MyPearlsFits.png?format=750w 750w, https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/1618083981806-35ADMMRXXWRFUZ0EAG6O/MyPearlsFits.png?format=1000w 1000w, https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/1618083981806-35ADMMRXXWRFUZ0EAG6O/MyPearlsFits.png?format=1500w 1500w, https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/1618083981806-35ADMMRXXWRFUZ0EAG6O/MyPearlsFits.png?format=2500w 2500w" loading="lazy" decoding="async" data-loader="sqs">
                
            </div>
          </div>
        
          
        

        
          
          <figcaption class="image-caption-wrapper">
            <div class="image-caption"><p class="" style="white-space:pre-wrap;">Now “My Pearls fits.</p></div>
          </figcaption>
        
      
        </figure>
      

    </div>
  


  




<div class="sqs-html-content">
  <p class="" style="white-space:pre-wrap;">Well, now it fits, but there is still something missing. We don’t want to leave our large text accessibility users in a lurch if they’re wondering what that tiny text says. So again, let’s do what Apple does! There is a great tool called UILargeContentViewerInteraction. You can learn more about this in this <a href="https://developer.apple.com/videos/play/wwdc2019/261/">great WWDC session</a> and <a href="https://www.fivestars.blog/articles/large-content-viewer/">in this blog post</a>.</p><p class="" style="white-space:pre-wrap;">Unfortunately, in our SwiftUI app, there isn’t a way to access it. I even tried wrapping a UILabel in UIViewRepresentable and UIViewControllerRepresentable, setting all the things and, no dice. So I filed my Feedback and started thinking.</p><p class="" style="white-space:pre-wrap;">What does the software developer do when the Suez Canal is blocked? We build a new canal! </p><p class="" style="white-space:pre-wrap;">So I made my own version of the feature as a holdover.</p><p class="" style="white-space:pre-wrap;">First I created an accessibilityAdjuster.</p>
</div>



<pre><code>import Combine
import SwiftUI

class AccessibilityAdjuster: ObservableObject {
    @Published var largeContentViewerText: String? = nil
    // Other things ...
}</code></pre>


<div class="sqs-html-content">
  <p class="" style="white-space:pre-wrap;">I’ve got a bunch of stuff in here to make adjustments, like changing the size of my grid to make room for the larger text and so on, but I’m keeping that away for now. What I did for this was add my published text.</p><p class="" style="white-space:pre-wrap;">Then as the last view in the ZStack where I show my custom navigation header I have:</p>
</div>



<pre><code>if let largeText = adjuster.largeContentViewerText {
                ZStack {
                    Text(largeText)
                        .foregroundColor(.white)
                        .padding()
                }
                .background(Theme.generalBackground.clipShape(RoundedRectangle(cornerRadius: 12)).shadow(radius: 10))

            }</code></pre>


<div class="sqs-html-content">
  <p class="" style="white-space:pre-wrap;">If the text is there, show it in white in large accessibility body, the default, with my theme’s general background color, which is dark in both light and dark mode. And round the corners of the background.</p><p class="" style="white-space:pre-wrap;">The text that people can tap on to see the bigger version looks like this:</p>
</div>



<pre><code>import SwiftUI

struct HeaderTitle: View {
    @EnvironmentObject var adjuster: AccessibilityAdjuster
    @Environment(\.sizeCategory) var category
    @GestureState private var isTapped = false
    var isInline: Bool
    var body: some View {
        Text(Words.pearls)
            .lineLimit(1)
            .font(.custom("Roboto-Bold", fixedSize: 18))
            .foregroundColor(Theme.lightTitle)
            .opacity(isInline ? 1 : 0)
            .animation(.linear(duration: 0.2))
            .gesture(DragGesture(minimumDistance: 0).updating($isTapped, body: { _, _, _ in
                switch category {
                case .accessibilityMedium,
                     .accessibilityLarge,
                     .accessibilityExtraLarge,
                     .accessibilityExtraExtraLarge,
                     .accessibilityExtraExtraExtraLarge:
                    adjuster.largeContentViewerText = Words.pearls
                default:
                    break
                }
            }).onEnded({ _ in
                adjuster.largeContentViewerText = nil
            }))
    }
}</code></pre>


<div class="sqs-html-content">
  <p class="" style="white-space:pre-wrap;">Here I have my custom font at a fixed size, and in the case of accessibility font sizes, I set the value to Words.pearls, which is the static variable of a struct that contains a reference to the “My Pearls” string.</p><p class="" style="white-space:pre-wrap;">When the gesture ends, we set it back to nil.</p><p class="" style="white-space:pre-wrap;">(The “isInline” stuff is to manage the transition for large title to inline title).</p><p class="" style="white-space:pre-wrap;">Now it looks like this!</p>
</div>



<div class="intrinsic" style="max-width:100%"><div class="embed-block-wrapper " style="padding-bottom:56.20609%;"><div class="sqs-video-wrapper" data-provider-name="YouTube" data-html="<br/><br/><br/><br/><br/><br/>  <br/>  &lt;iframe src=&quot;//www.youtube.com/embed/yX8CtVjOH0A?wmode=opaque&quot; height=&quot;480&quot; width=&quot;854&quot; scrolling=&quot;no&quot; frameborder=&quot;0&quot; allowfullscreen&gt;&lt;/iframe&gt;<br/><br/>"></div></div><div  class="video-caption-wrapper"><div class="video-caption"><p class="" style="white-space:pre-wrap;">Tapping and holding twice to make the homemade UILargeContentViewerInteraction to appear.</p></div></div></div>

<div class="sqs-html-content">
  <p class="" style="white-space:pre-wrap;">Awesome! Still looks a little weird to have the small “My Pearls” text off-center, so I may adjust that for the large accessibility size, but not bad overall.</p><p class="" style="white-space:pre-wrap;">As always, feel free to <a href="https://www.cephalopod.studio/work/pearl">jump into the beta of Pearl</a>. I’m hoping to have the redesign work I showed off in my aurora post and here working soon for iOS and iPad (and then we make it look good for the non-Catalyst SwiftUI Mac version!).</p><p class="" style="white-space:pre-wrap;">Thanks again y’all, and happy coding.</p>
</div>]]></content:encoded>
      <excerpt:encoded />
      <wp:post_name>refining-accessibility-lessons-learned</wp:post_name>
      <wp:post_type>post</wp:post_type>
      <wp:post_id>11</wp:post_id>
      <wp:status>publish</wp:status>
      <pubDate>Mon, 12 Apr 2021 02:48:31 +0000</pubDate>
      <wp:post_date>2021-04-12 02:48:31</wp:post_date>
      <wp:post_date_gmt>2021-04-12 02:48:31</wp:post_date_gmt>
      <dc:creator>waller.matthew@gmail.com</dc:creator>
      <wp:comment_status>closed</wp:comment_status>
    </item>
    <item>
      <title>PDF Capture App Part 5: Defeating the Boss</title>
      <link>/blog/pdf-capture-app-part-5-defeating-the-boss</link>
      <content:encoded><![CDATA[<div class="sqs-html-content">
  <p class="" style="white-space:pre-wrap;">It’s time. I’ve teased this challenger for two blog posts now, and i't’s time to reveal who it is. And it is…</p><p class="" style="white-space:pre-wrap;">THE FILES APP!</p><p class="" style="white-space:pre-wrap;">Yep, there is a handy button in the Files app that will let you use the same PDF scanner I’m using to save to any place in your files, just like us. That means that, for as many taps as my app takes, you can upload the PDFs directly to whatever file or cloud service is connected to your device.</p><p class="" style="white-space:pre-wrap;">Dang it! This was exactly what I wanted, and built! So, is it all for naught? Did I make an app that does exactly what the Files app does, except that the Files app is already on the phone and iPad? Is there no more value I can offer?</p><p class="" style="white-space:pre-wrap;">Well, as so often happens, new discoveries come to light, new competitors enter during development, etc. It’s a fact of entrepreneurial life. And our little app project is no exception. Even though <a href="https://support.apple.com/en-us/HT210336">Apple itself still advertises scanning via Notes</a>, and although our app at least does better than that, the Files app feature is amazing.</p><p class="" style="white-space:pre-wrap;">And now for a great truism in app development:</p><p class="" style="white-space:pre-wrap;">1) Everything worth doing has been done.</p><p class="" style="white-space:pre-wrap;">2) Not everything worth doing has been done well.</p><p class="" style="white-space:pre-wrap;">3) Everything can be done better.</p><p class="" style="white-space:pre-wrap;">Often people stop at the first point and turn around. Others push forward and bring new value to the world. And that’s what we will do. We’ll create something that has people say, well yes, I could use the Apple default but it isn’t as good as PDFTrapper because ___.</p><p class="" style="white-space:pre-wrap;">So what can fill those blanks?</p><p class="" style="white-space:pre-wrap;">It could look a little nicer, and arrange things better. A better design goes a long way. And by design I don’t just mean colors and aesthetics but arranging and setting a up a flow that makes more sense, is less prone to error, and overall does a better job.</p><p class="" style="white-space:pre-wrap;">However, with our simple app, we’re probably not going to optimize the flow much more, or make design improvements that would cause someone to download the app. It’s about as simple and slimmed down as it can be.</p><p class="" style="white-space:pre-wrap;">And it isn’t pretty yet! Once everything is functional, we’ll give an aesthetics pass to make sure our app has all the best looks and feels.</p><p class="" style="white-space:pre-wrap;">(More importantly, we’ll want to give our app the best accessibility, but that will be for another time).</p><p class="" style="white-space:pre-wrap;">Even once our app looks good, aesthetics won’t be enough to sell it.</p><p class="" style="white-space:pre-wrap;">So we go to the next thing you can do: which is, simply, more. You can add more features that help the user accomplish what they want.</p><p class="" style="white-space:pre-wrap;">As awesome as the Files scanner is, there is one thing it can’t do, and which we can make our app do. It’s something significant. Something that most folks would want who do a lot of scanning.</p><h3 style="white-space:pre-wrap;">The new feature</h3><p class="" style="white-space:pre-wrap;">We’re going to let the user delete and add more pages. It sounds so simple. But think about it. You’re doing your taxes and you’ve got several pages for one form. You scan four of them, but then, oh no! You forgot to scan one! Or you got one out of order! All you need to do is delete one here, and scan the other one here. Or maybe you forgot to scan one last page. You just need to add that last page to your already-scanned four pages.</p><p class="" style="white-space:pre-wrap;">But you can’t 😭.</p><p class="" style="white-space:pre-wrap;">You can’t because all you have is the Files scanner. And that scanner won’t let you append a page or delete a page to an existing scan. You can create a brand new PDF from a scan. That’s it. Nothing else. Now you’ve got to spend 5 times as long correcting your mistaking than you would if you only had …</p><p class="" style="white-space:pre-wrap;">PDFTrapper! Which lets users delete pages and add new pages at any point in the document!</p><p class="" style="white-space:pre-wrap;">That’s the idea. Now let’s make it happen.</p><h3 style="white-space:pre-wrap;">The code</h3><p class="" style="white-space:pre-wrap;">First, let’s adjust our PDFManager to include the PDFTrapperDocument itself. And we’ll have a handy variable that calculates the number of pages. And we’re going to do a bit of rewriting to make our navigation handling a little more scalable, so we’ll add an enum for the different ways we can add pages, and the different views that can be available to us on the main screen. And finally we’ll have a “pageNumberForInsertion” that we’ll use if one of “AddPDFOption” is active.</p><p class="" style="white-space:pre-wrap;">Long story short, the code now looks like this:</p>
</div>



<pre><code>import Combine
import PDFKit
import SwiftUI

class PDFManager: ObservableObject {
    enum PDFTrapperNavigation {
        case showEditor
        case showScanner
        case showPDFMain
        case showAddRemovePages
        case refreshing
    }

    enum AddPDFOption {
        case photoRoll
        case file
        case camera
        case none
    }

    var document: PDFTrapperDocument?

    @Published var pageNumberForInsertion = 0
    @Published var addPDFOption: AddPDFOption = .none

    @Published var navigation: PDFTrapperNavigation = .showPDFMain

    var saveReporter = PassthroughSubject&lt;Void, Never&gt;()
    var startEditMode = PassthroughSubject&lt;Void, Never&gt;()

    var pageCount: Int {
        document?.pdf.pageCount ?? 0
    }

    func addPhotos(_ photos: [UIImage]) {
        guard let pdfTrapperDocument = document else {
            return
        }

        let pages = photos.compactMap { PDFPage(image: $0) }

        if addPDFOption == .camera {
            for i in 0 ..&lt; pages.count {
                pdfTrapperDocument.pdf.insert(pages[i], at: pageNumberForInsertion + i)
            }
        }

        if pdfTrapperDocument.isBlank {
            // Remove the default blank page
            pdfTrapperDocument.pdf.removePage(at: 0)

            for i in 0 ..&lt; pages.count {
                pdfTrapperDocument.pdf.insert(pages[i], at: i)
            }
        }

        if !pages.isEmpty {
            save()
        }
    }

    func delete(page: Int) {
        guard let document = document else {
            return
        }

        document.pdf.removePage(at: page - 1)
        save()
    }

    func save() {
        saveReporter.send()
    }
}</code></pre>


<div class="sqs-html-content">
  <p class="" style="white-space:pre-wrap;">Now we’ll make our view to add and remove pages. We’ll use Picker to choose what page to delete and what insertion index to use.</p><p class="" style="white-space:pre-wrap;">And we’ll adjust the text to make our index’s understandable to normal people. So the last index can be “Append to the end of document” and such, instead of just the count. And we’ll increment the index by one to represent the page number.</p><p class="" style="white-space:pre-wrap;">We’ll use a Form view to fit in nicely with the system utility aesthetic.</p><p class="" style="white-space:pre-wrap;">The code looks like this:</p>
</div>



<pre><code>import SwiftUI

struct AddRemovePagesView: View {
    var pageCount: Int

    @ObservedObject var manager: PDFManager
    @State var pageToDelete = 1

    var pageToDeleteString: String {
        NumberFormatter.localizedString(from: NSNumber(integerLiteral: pageToDelete), number: .none)
    }

    var pageToInsertString: String {
        text(forOption: manager.pageNumberForInsertion)
    }

    func text(forOption option: Int) -&gt; String {
        if option == pageCount {
            return "Append to the end"
        }

        let generalPage = NumberFormatter.localizedString(from: NSNumber(integerLiteral: option + 1), number: .none)

        return "Insert above page " + generalPage
    }

    var body: some View {
        VStack {
            HStack(alignment: .top) {
                Button(action: {
                    withAnimation {
                        manager.navigation = .showPDFMain
                    }
                }) {
                    Image(systemName: "xmark")
                        .font(Font.body.weight(.bold))
                }
                Spacer()
                Text("Page Managerment")
                    .font(.title)
                    .bold()
            }
            .padding()
            Form {
                Section(header: Text("Page to delete")) {
                    Picker("Number \(pageToDeleteString)", selection: $pageToDelete) {
                        ForEach(1...pageCount, id: \.self) { value in
                            Text("\(value)").tag(value)
                        }

                    }
                    .pickerStyle(MenuPickerStyle())
                    Button("Delete Page") {
                        manager.delete(page: pageToDelete)
                    }
                }
                Section(header: Text("Page insertion placement")) {
                    Picker(pageToInsertString, selection: $manager.pageNumberForInsertion) {
                        ForEach(0...pageCount, id: \.self) { value in
                            Text(text(forOption: value)).tag(value)
                        }
                    }
                    .pickerStyle(MenuPickerStyle())
                }
                Section(header: Text("Insertion options")) {
                    HStack(spacing: 32) {
                        Button(action: {
                            manager.addPDFOption = .photoRoll
                        }) {
                            Image(systemName: "photo")
                                .font(.title)
                        }
                        Button(action: {
                            manager.addPDFOption = .file
                        }) {
                            Image(systemName: "folder")
                                .font(.title)
                        }
                        Button(action: {
                            manager.addPDFOption = .camera
                            manager.navigation = .showScanner
                        }) {
                            Image(systemName: "camera")
                                .font(.title)
                        }
                    }
                    .padding(.horizontal)
                }
            }
        }
        .background(Color(.systemGroupedBackground).ignoresSafeArea())

    }
}</code></pre>


<div class="sqs-html-content">
  <p class="" style="white-space:pre-wrap;">And that gives us:</p>
</div>













































  

    
  
    <div
        class="
          image-block-outer-wrapper
          layout-caption-below
          design-layout-inline
          combination-animation-site-default
          individual-animation-site-default
          individual-text-animation-site-default
        "
        data-test="image-block-inline-outer-wrapper"
    >

      

      
        <figure
            class="
              sqs-block-image-figure
              intrinsic
            "
            style="max-width:600px;"
        >
          
        
        

        
          
            
          <div
              
              
              class="image-block-wrapper"
              data-animation-role="image"
              
  

          >
            <div class="sqs-image-shape-container-element
              
          
        
              has-aspect-ratio
            " style="
                position: relative;
                
                  padding-bottom:131%;
                
                overflow: hidden;-webkit-mask-image: -webkit-radial-gradient(white, black);
              "
              >
                
                  
                  
                  
                  
                  
                  
                  <img data-stretch="false" src="https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/1617488043705-QLOPAPC6O2LYQMYKQOYC/PageManagement.png" data-image="https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/1617488043705-QLOPAPC6O2LYQMYKQOYC/PageManagement.png" data-image-dimensions="600x786" data-image-focal-point="0.5,0.5" alt="Page management" data-load="false" src="https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/1617488043705-QLOPAPC6O2LYQMYKQOYC/PageManagement.png" width="600" height="786" alt="" sizes="100vw" style="display:block;object-fit: cover; width: 100%; height: 100%; object-position: 50% 50%" srcset="https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/1617488043705-QLOPAPC6O2LYQMYKQOYC/PageManagement.png?format=100w 100w, https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/1617488043705-QLOPAPC6O2LYQMYKQOYC/PageManagement.png?format=300w 300w, https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/1617488043705-QLOPAPC6O2LYQMYKQOYC/PageManagement.png?format=500w 500w, https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/1617488043705-QLOPAPC6O2LYQMYKQOYC/PageManagement.png?format=750w 750w, https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/1617488043705-QLOPAPC6O2LYQMYKQOYC/PageManagement.png?format=1000w 1000w, https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/1617488043705-QLOPAPC6O2LYQMYKQOYC/PageManagement.png?format=1500w 1500w, https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/1617488043705-QLOPAPC6O2LYQMYKQOYC/PageManagement.png?format=2500w 2500w" loading="lazy" decoding="async" data-loader="sqs">
                
            </div>
          </div>
        
          
        

        
          
          <figcaption class="image-caption-wrapper">
            <div class="image-caption"><p class="" style="white-space:pre-wrap;">Page management</p></div>
          </figcaption>
        
      
        </figure>
      

    </div>
  


  












































  

    
  
    <div
        class="
          image-block-outer-wrapper
          layout-caption-below
          design-layout-inline
          combination-animation-site-default
          individual-animation-site-default
          individual-text-animation-site-default
        "
        data-test="image-block-inline-outer-wrapper"
    >

      

      
        <figure
            class="
              sqs-block-image-figure
              intrinsic
            "
            style="max-width:600px;"
        >
          
        
        

        
          
            
          <div
              
              
              class="image-block-wrapper"
              data-animation-role="image"
              
  

          >
            <div class="sqs-image-shape-container-element
              
          
        
              has-aspect-ratio
            " style="
                position: relative;
                
                  padding-bottom:100.74813079833984%;
                
                overflow: hidden;-webkit-mask-image: -webkit-radial-gradient(white, black);
              "
              >
                
                  
                  
                  
                  
                  
                  
                  <img data-stretch="false" src="https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/1617488204005-7ZS0JKX0HGMZ9ZFNCO6Y/Page+to+delete+picker.png" data-image="https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/1617488204005-7ZS0JKX0HGMZ9ZFNCO6Y/Page+to+delete+picker.png" data-image-dimensions="600x604" data-image-focal-point="0.5,0.5" alt="Choosing a page to delete" data-load="false" src="https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/1617488204005-7ZS0JKX0HGMZ9ZFNCO6Y/Page+to+delete+picker.png" width="600" height="604" alt="" sizes="100vw" style="display:block;object-fit: cover; width: 100%; height: 100%; object-position: 50% 50%" srcset="https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/1617488204005-7ZS0JKX0HGMZ9ZFNCO6Y/Page+to+delete+picker.png?format=100w 100w, https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/1617488204005-7ZS0JKX0HGMZ9ZFNCO6Y/Page+to+delete+picker.png?format=300w 300w, https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/1617488204005-7ZS0JKX0HGMZ9ZFNCO6Y/Page+to+delete+picker.png?format=500w 500w, https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/1617488204005-7ZS0JKX0HGMZ9ZFNCO6Y/Page+to+delete+picker.png?format=750w 750w, https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/1617488204005-7ZS0JKX0HGMZ9ZFNCO6Y/Page+to+delete+picker.png?format=1000w 1000w, https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/1617488204005-7ZS0JKX0HGMZ9ZFNCO6Y/Page+to+delete+picker.png?format=1500w 1500w, https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/1617488204005-7ZS0JKX0HGMZ9ZFNCO6Y/Page+to+delete+picker.png?format=2500w 2500w" loading="lazy" decoding="async" data-loader="sqs">
                
            </div>
          </div>
        
          
        

        
          
          <figcaption class="image-caption-wrapper">
            <div class="image-caption"><p class="" style="white-space:pre-wrap;">Choosing a page to delete</p></div>
          </figcaption>
        
      
        </figure>
      

    </div>
  


  












































  

    
  
    <div
        class="
          image-block-outer-wrapper
          layout-caption-below
          design-layout-inline
          combination-animation-site-default
          individual-animation-site-default
          individual-text-animation-site-default
        "
        data-test="image-block-inline-outer-wrapper"
    >

      

      
        <figure
            class="
              sqs-block-image-figure
              intrinsic
            "
            style="max-width:600px;"
        >
          
        
        

        
          
            
          <div
              
              
              class="image-block-wrapper"
              data-animation-role="image"
              
  

          >
            <div class="sqs-image-shape-container-element
              
          
        
              has-aspect-ratio
            " style="
                position: relative;
                
                  padding-bottom:127.33332824707031%;
                
                overflow: hidden;-webkit-mask-image: -webkit-radial-gradient(white, black);
              "
              >
                
                  
                  
                  
                  
                  
                  
                  <img data-stretch="false" src="https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/1617488298797-0B7FIDYC6YNNY6DG7M3K/Page+to+insert.png" data-image="https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/1617488298797-0B7FIDYC6YNNY6DG7M3K/Page+to+insert.png" data-image-dimensions="600x764" data-image-focal-point="0.5,0.5" alt="Page insertion" data-load="false" src="https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/1617488298797-0B7FIDYC6YNNY6DG7M3K/Page+to+insert.png" width="600" height="764" alt="" sizes="100vw" style="display:block;object-fit: cover; width: 100%; height: 100%; object-position: 50% 50%" srcset="https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/1617488298797-0B7FIDYC6YNNY6DG7M3K/Page+to+insert.png?format=100w 100w, https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/1617488298797-0B7FIDYC6YNNY6DG7M3K/Page+to+insert.png?format=300w 300w, https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/1617488298797-0B7FIDYC6YNNY6DG7M3K/Page+to+insert.png?format=500w 500w, https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/1617488298797-0B7FIDYC6YNNY6DG7M3K/Page+to+insert.png?format=750w 750w, https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/1617488298797-0B7FIDYC6YNNY6DG7M3K/Page+to+insert.png?format=1000w 1000w, https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/1617488298797-0B7FIDYC6YNNY6DG7M3K/Page+to+insert.png?format=1500w 1500w, https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/1617488298797-0B7FIDYC6YNNY6DG7M3K/Page+to+insert.png?format=2500w 2500w" loading="lazy" decoding="async" data-loader="sqs">
                
            </div>
          </div>
        
          
        

        
          
          <figcaption class="image-caption-wrapper">
            <div class="image-caption"><p class="" style="white-space:pre-wrap;">Page insertion</p></div>
          </figcaption>
        
      
        </figure>
      

    </div>
  


  




<div class="sqs-html-content">
  <p class="" style="white-space:pre-wrap;">Awesome.</p><p class="" style="white-space:pre-wrap;">And one more thing to do is to move our controls, the buttons to edit and manage PDF pages, to a new view. It looks like this:</p>
</div>



<pre><code>import SwiftUI

struct PDFMainControls: View {
    @ObservedObject var manager = PDFManager()
    var body: some View {
        HStack {
            Button("Editing Canvas") {
                withAnimation {
                    manager.navigation = .showEditor
                }
                DispatchQueue.main.asyncAfter(deadline: .now() + 0.3) {
                    manager.startEditMode.send()
                }
            }
            Button("Add/Remove Pages") {
                withAnimation {
                    manager.navigation = .showAddRemovePages
                }
            }
        }
    }
}</code></pre>


<div class="sqs-html-content">
  <p class="" style="white-space:pre-wrap;">And finally we adjust our ContentView with several improvements.</p>
</div>



<pre><code>import Combine
import PDFKit
import SwiftUI

struct ContentView: View {
    @StateObject var manager = PDFManager()
    @Binding var document: PDFTrapperDocument
    var fileURL: URL?

    private func save() {
        document.setAsNotBlank()
        document.saveTrigger.toggle()

       refresh()
    }

    private func refresh() {
        withAnimation {
            manager.navigation = .refreshing
        }

        DispatchQueue.main.asyncAfter(deadline: .now() + 0.3) {
            manager.navigation = .showPDFMain
        }
    }

    var body: some View {
        ZStack {
            if let url = fileURL {
                QuickLookController(startEditing: manager.startEditMode, url: url) {
                    if let refreshedPDF = PDFDocument(url: url) {
                        document.pdf = refreshedPDF
                        save()
                    }
                }
                .opacity(0)
            }
            switch manager.navigation {
            case .showPDFMain:
                if !document.isBlank {
                    VStack {
                        PDFDisplayView(pdf: document.pdf)
                        PDFMainControls(manager: manager)
                    }
                }                
            case .showScanner:
                ScannerView { images in
                    manager.addPhotos(images)
                }
            case .showAddRemovePages:
                AddRemovePagesView(pageCount: manager.pageCount, manager: manager)
            case .refreshing, .showEditor:
                ProgressView()
            }
        }
        .onAppear {
            manager.document = document
            if document.isBlank {
                withAnimation {
                    manager.navigation = .showScanner
                }
            }
        }
        .onReceive(manager.saveReporter, perform: save)
    }
}</code></pre>


<div class="sqs-html-content">
  <p class="" style="white-space:pre-wrap;">One thing we’ve done here is added the different sections in a handy switch statement. However, we don’t include the QuickLookController. That’s because we want the QuickLookController to always be available to push the actual preview controller, and the QuickLookController is invisible.</p><p class="" style="white-space:pre-wrap;">Another excellent thing we’ve done is attach a refresh mechanism, so that whenever we save our document, the first thing that happens is that we get a progress view and a fade, and that gives our app time to refetch the edited PDF.</p><p class="" style="white-space:pre-wrap;">That gives us this!</p>
</div>



<div class="intrinsic" style="max-width:100%"><div class="embed-block-wrapper " style="padding-bottom:56.20609%;"><div class="sqs-video-wrapper" data-provider-name="YouTube" data-html="<br/><br/><br/><br/><br/><br/>  <br/>  &lt;iframe src=&quot;//www.youtube.com/embed/zleDS1bemro?wmode=opaque&quot; height=&quot;480&quot; width=&quot;854&quot; scrolling=&quot;no&quot; frameborder=&quot;0&quot; allowfullscreen&gt;&lt;/iframe&gt;<br/><br/>"></div></div><div  class="video-caption-wrapper"><div class="video-caption"><p class="" style="white-space:pre-wrap;">Adding and deleting PDF pages.</p></div></div></div>

<div class="sqs-html-content">
  <p class="" style="white-space:pre-wrap;">Awesome, everything is working!</p><p class="" style="white-space:pre-wrap;">You may notice that there is filler for choosing a photo via the image picker and via the document picker. I leave these for you to implement on your own. My strategy: the same as the QuickLookController: rather than wrapping the views directly, have the UIDocumentPickerViewController and the UIImagePickerController be pushed by an invisible view controller so that more of the appropriate UIKit environment is around them.</p><p class="" style="white-space:pre-wrap;">If you missed this novel, but pro way of wrapping specialty view controllers in SwiftUI, <a href="https://www.cephalopod.studio/blog/pdf-capture-app-part-4-swiftui-pro-tip-amp-pdf-editing">checkout my last post here</a>. </p><h3 style="white-space:pre-wrap;">Next Steps</h3><p class="" style="white-space:pre-wrap;">Now we have an app that is more convenient and efficient than Notes, as capable as Files, and with more helpful features than Files.</p><p class="" style="white-space:pre-wrap;">So, is it time to actually make the app look good?</p><p class="" style="white-space:pre-wrap;">Getting close, but now that we’re here, let’s do something really cool. And I mean, it’s the kind of feature that people actually subscribe to high-priced apps for because, up until recently, it has been really hard to do.</p><p class="" style="white-space:pre-wrap;">What is that feature? Tune in next time! And hit me up at <a href="https://twitter.com/wattmaller1">wattmaller1</a> on Twitter for thoughts and suggestions! Until next time, happy coding.</p>
</div>]]></content:encoded>
      <excerpt:encoded />
      <wp:post_name>pdf-capture-app-part-5-defeating-the-boss</wp:post_name>
      <wp:post_type>post</wp:post_type>
      <wp:post_id>12</wp:post_id>
      <wp:status>publish</wp:status>
      <pubDate>Sun, 04 Apr 2021 01:00:10 +0000</pubDate>
      <wp:post_date>2021-04-04 01:00:10</wp:post_date>
      <wp:post_date_gmt>2021-04-04 01:00:10</wp:post_date_gmt>
      <dc:creator>waller.matthew@gmail.com</dc:creator>
      <wp:comment_status>closed</wp:comment_status>
    </item>
    <item>
      <title>SwiftUI Aurora Background Animation</title>
      <link>/blog/swiftui-aurora-background-animation</link>
      <content:encoded><![CDATA[<div class="sqs-html-content">
  <p class="" style="white-space:pre-wrap;">Lately I’ve been working on <a href="https://www.cephalopod.studio/work/pearl">my well-being app Pearl</a>. I’m going through a redesign with the help of my friends Joel and Jillian at <a href="https://return.team">Return Technologies</a>! And I was interested in making a beautiful gradient background. Something using a sort of <a href="https://uxdesign.cc/aurora-ui-new-visual-trend-for-2021-c763a7daa7e2">aurora design</a>.</p><p class="" style="white-space:pre-wrap;">What we have in SwiftUI are some excellent gradient helpers: Linear, Radial, Conical. They are all really cool! But I was wanting to put something together that is more organic. And Joel and Jillian brought up the point that it could look really nice animated.</p><p class="" style="white-space:pre-wrap;">My strategy: add multi-colored, animating shapes and apply a blur, which was essentially how the Figma specs were made.</p><p class="" style="white-space:pre-wrap;">So, let’s make a beautiful aurora background with great accessibility to boot!</p><h3 style="white-space:pre-wrap;">The Shapes</h3><p class="" style="white-space:pre-wrap;">First, I’m going to put my shapes on the screen. I’ll just go with circles for now. I’m going to put each one in a quadrant of the screen.</p><p class="" style="white-space:pre-wrap;">I do this by putting all my circles in a ZStack and giving each circle two frames: one frame for the size, and one to expand the circle’s area to the size of the screen, with an alignment to put it in the right corner.</p>
</div>



<pre><code>import SwiftUI

struct ContentView: View {

    var body: some View {
        FloatingClouds()
    }
}

struct Cloud: View {
    let alignment: Alignment
    var body: some View {
        Circle()
            .frame(width: 100, height: 100)
            .frame(maxWidth: .infinity, maxHeight: .infinity, alignment: alignment)
    }
}

struct FloatingClouds: View {
    var body: some View {
        ZStack {
            Color.green
            Cloud(alignment: .topLeading)
            Cloud(alignment: .topTrailing)
            Cloud(alignment: .bottomLeading)
            Cloud(alignment: .bottomTrailing)
        }
        .ignoresSafeArea()
    }
}

struct ContentView_Previews: PreviewProvider {
    static var previews: some View {
        ContentView()
    }
}</code></pre>










































  

    
  
    <div
        class="
          image-block-outer-wrapper
          layout-caption-below
          design-layout-inline
          combination-animation-site-default
          individual-animation-site-default
          individual-text-animation-site-default
        "
        data-test="image-block-inline-outer-wrapper"
    >

      

      
        <figure
            class="
              sqs-block-image-figure
              intrinsic
            "
            style="max-width:600px;"
        >
          
        
        

        
          
            
          <div
              
              
              class="image-block-wrapper"
              data-animation-role="image"
              
  

          >
            <div class="sqs-image-shape-container-element
              
          
        
              has-aspect-ratio
            " style="
                position: relative;
                
                  padding-bottom:186%;
                
                overflow: hidden;-webkit-mask-image: -webkit-radial-gradient(white, black);
              "
              >
                
                  
                  
                  
                  
                  
                  
                  <img data-stretch="false" src="https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/1616952897054-QXESSVPU1YSFPIXM2TP8/Circles+in+Corners.png" data-image="https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/1616952897054-QXESSVPU1YSFPIXM2TP8/Circles+in+Corners.png" data-image-dimensions="600x1116" data-image-focal-point="0.5,0.5" alt="Our four circles added to the screen." data-load="false" src="https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/1616952897054-QXESSVPU1YSFPIXM2TP8/Circles+in+Corners.png" width="600" height="1116" alt="" sizes="100vw" style="display:block;object-fit: cover; width: 100%; height: 100%; object-position: 50% 50%" srcset="https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/1616952897054-QXESSVPU1YSFPIXM2TP8/Circles+in+Corners.png?format=100w 100w, https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/1616952897054-QXESSVPU1YSFPIXM2TP8/Circles+in+Corners.png?format=300w 300w, https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/1616952897054-QXESSVPU1YSFPIXM2TP8/Circles+in+Corners.png?format=500w 500w, https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/1616952897054-QXESSVPU1YSFPIXM2TP8/Circles+in+Corners.png?format=750w 750w, https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/1616952897054-QXESSVPU1YSFPIXM2TP8/Circles+in+Corners.png?format=1000w 1000w, https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/1616952897054-QXESSVPU1YSFPIXM2TP8/Circles+in+Corners.png?format=1500w 1500w, https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/1616952897054-QXESSVPU1YSFPIXM2TP8/Circles+in+Corners.png?format=2500w 2500w" loading="lazy" decoding="async" data-loader="sqs">
                
            </div>
          </div>
        
          
        

        
          
          <figcaption class="image-caption-wrapper">
            <div class="image-caption"><p class="" style="white-space:pre-wrap;">Our four circles added to the screen.</p></div>
          </figcaption>
        
      
        </figure>
      

    </div>
  


  




<div class="sqs-html-content">
  <p class="" style="white-space:pre-wrap;">Awesome. Now, we want our circles to have some random sizes and offsets, for the organic look. And we want those sizes to fit in with the size of the screen, so that this works with iPhone, iPad and Mac. For that we’ll need GeometryReader.</p><p class="" style="white-space:pre-wrap;">We also want our randomization to not be decided in the view, so that when the view is recalculated we don't randomize all over again and stutter all the time. So we’ll but our randomization in an object that will get created once and then reused. Yep, we’ll use an ObservableObject. And let’s call it CloudProvider, for kicks.</p>
</div>



<pre><code>struct Cloud: View {
    @StateObject var provider = CloudProvider()
    let alignment: Alignment
    let proxy: GeometryProxy
    var body: some View {
        Circle()
            .frame(height: proxy.size.height /  provider.frameHeightRatio)
            .offset(provider.offset)
            .frame(maxWidth: .infinity, maxHeight: .infinity, alignment: alignment)
    }
}

class CloudProvider: ObservableObject {
    let offset: CGSize
    let frameHeightRatio: CGFloat
    init() {
        frameHeightRatio = CGFloat.random(in: 0.7 ..&lt; 1.4)
        offset = CGSize(width: CGFloat.random(in: -150 ..&lt; 150),
                        height: CGFloat.random(in: -150 ..&lt; 150))
    }
}

struct FloatingClouds: View {
    var body: some View {
        GeometryReader { proxy in
            ZStack {
                Color.green
                Cloud(alignment: .topLeading, proxy: proxy)
                Cloud(alignment: .topTrailing, proxy: proxy)
                Cloud(alignment: .bottomLeading, proxy: proxy)
                Cloud(alignment: .bottomTrailing, proxy: proxy)
            }
            .ignoresSafeArea()
        }
    }
}</code></pre>










































  

    
  
    <div
        class="
          image-block-outer-wrapper
          layout-caption-below
          design-layout-inline
          combination-animation-site-default
          individual-animation-site-default
          individual-text-animation-site-default
        "
        data-test="image-block-inline-outer-wrapper"
    >

      

      
        <figure
            class="
              sqs-block-image-figure
              intrinsic
            "
            style="max-width:600px;"
        >
          
        
        

        
          
            
          <div
              
              
              class="image-block-wrapper"
              data-animation-role="image"
              
  

          >
            <div class="sqs-image-shape-container-element
              
          
        
              has-aspect-ratio
            " style="
                position: relative;
                
                  padding-bottom:189.6666717529297%;
                
                overflow: hidden;-webkit-mask-image: -webkit-radial-gradient(white, black);
              "
              >
                
                  
                  
                  
                  
                  
                  
                  <img data-stretch="false" src="https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/1616953470235-HX6AWZPTRFIOMCXA2MFN/Circles+Random+Placement+Size.png" data-image="https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/1616953470235-HX6AWZPTRFIOMCXA2MFN/Circles+Random+Placement+Size.png" data-image-dimensions="600x1138" data-image-focal-point="0.5,0.5" alt="Our clouds now with random placement and size." data-load="false" src="https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/1616953470235-HX6AWZPTRFIOMCXA2MFN/Circles+Random+Placement+Size.png" width="600" height="1138" alt="" sizes="100vw" style="display:block;object-fit: cover; width: 100%; height: 100%; object-position: 50% 50%" srcset="https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/1616953470235-HX6AWZPTRFIOMCXA2MFN/Circles+Random+Placement+Size.png?format=100w 100w, https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/1616953470235-HX6AWZPTRFIOMCXA2MFN/Circles+Random+Placement+Size.png?format=300w 300w, https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/1616953470235-HX6AWZPTRFIOMCXA2MFN/Circles+Random+Placement+Size.png?format=500w 500w, https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/1616953470235-HX6AWZPTRFIOMCXA2MFN/Circles+Random+Placement+Size.png?format=750w 750w, https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/1616953470235-HX6AWZPTRFIOMCXA2MFN/Circles+Random+Placement+Size.png?format=1000w 1000w, https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/1616953470235-HX6AWZPTRFIOMCXA2MFN/Circles+Random+Placement+Size.png?format=1500w 1500w, https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/1616953470235-HX6AWZPTRFIOMCXA2MFN/Circles+Random+Placement+Size.png?format=2500w 2500w" loading="lazy" decoding="async" data-loader="sqs">
                
            </div>
          </div>
        
          
        

        
          
          <figcaption class="image-caption-wrapper">
            <div class="image-caption"><p class="" style="white-space:pre-wrap;">Our clouds now with random placement and size.</p></div>
          </figcaption>
        
      
        </figure>
      

    </div>
  


  




<div class="sqs-html-content">
  <p class="" style="white-space:pre-wrap;">Okay, not much to look at here. Now is the time to add the design’s colors!</p>
</div>



<pre><code>struct Theme {
    static var generalBackground: Color {
        Color(red: 0.043, green: 0.467, blue: 0.494)
    }

    static func ellipsesTopLeading(forScheme scheme: ColorScheme) -&gt; Color {
        let any = Color(red: 0.039, green: 0.388, blue: 0.502, opacity: 0.81)
        let dark = Color(red: 0.000, green: 0.176, blue: 0.216, opacity: 80.0)
        switch scheme {
        case .light:
            return any
        case .dark:
            return dark
        @unknown default:
            return any
        }
    }

    static func ellipsesTopTrailing(forScheme scheme: ColorScheme) -&gt; Color {
        let any = Color(red: 0.196, green: 0.796, blue: 0.329, opacity: 0.5)
        let dark = Color(red: 0.408, green: 0.698, blue: 0.420, opacity: 0.61)
        switch scheme {
        case .light:
            return any
        case .dark:
            return dark
        @unknown default:
            return any
        }
    }

    static func ellipsesBottomTrailing(forScheme scheme: ColorScheme) -&gt; Color {
        Color(red: 0.541, green: 0.733, blue: 0.812, opacity: 0.7)
    }

    static func ellipsesBottomLeading(forScheme scheme: ColorScheme) -&gt; Color {
        let any = Color(red: 0.196, green: 0.749, blue: 0.486, opacity: 0.55)
        let dark = Color(red: 0.525, green: 0.859, blue: 0.655, opacity: 0.45)
        switch scheme {
        case .light:
            return any
        case .dark:
            return dark
        @unknown default:
            return any
        }
    }
}</code></pre>


<div class="sqs-html-content">
  <p class="" style="white-space:pre-wrap;">And then we adjust the circles like so:</p>
</div>



<pre><code>struct Cloud: View {
    @StateObject var provider = CloudProvider()
    let alignment: Alignment
    let proxy: GeometryProxy
    let color: Color
    var body: some View {
        Circle()
            .fill(color)
            .frame(height: proxy.size.height /  provider.frameHeightRatio)
            .offset(provider.offset)
            .frame(maxWidth: .infinity, maxHeight: .infinity, alignment: alignment)
    }
}

struct FloatingClouds: View {
    @Environment(\.colorScheme) var scheme

    var body: some View {
        GeometryReader { proxy in
            ZStack {
                Theme.generalBackground
                Cloud(alignment: .bottomTrailing,
                      proxy: proxy,
                      color: Theme.ellipsesBottomTrailing(forScheme: scheme))
                Cloud(alignment: .topTrailing,
                      proxy: proxy,
                      color: Theme.ellipsesTopTrailing(forScheme: scheme))
                Cloud(alignment: .bottomLeading,
                      proxy: proxy,
                      color: Theme.ellipsesBottomLeading(forScheme: scheme))
                Cloud(alignment: .topLeading,
                      proxy: proxy,
                      color: Theme.ellipsesTopLeading(forScheme: scheme))

            }
            .ignoresSafeArea()
        }
    }
}</code></pre>










































  

    
  
    <div
        class="
          image-block-outer-wrapper
          layout-caption-below
          design-layout-inline
          combination-animation-site-default
          individual-animation-site-default
          individual-text-animation-site-default
        "
        data-test="image-block-inline-outer-wrapper"
    >

      

      
        <figure
            class="
              sqs-block-image-figure
              intrinsic
            "
            style="max-width:600px;"
        >
          
        
        

        
          
            
          <div
              
              
              class="image-block-wrapper"
              data-animation-role="image"
              
  

          >
            <div class="sqs-image-shape-container-element
              
          
        
              has-aspect-ratio
            " style="
                position: relative;
                
                  padding-bottom:199.6666717529297%;
                
                overflow: hidden;-webkit-mask-image: -webkit-radial-gradient(white, black);
              "
              >
                
                  
                  
                  
                  
                  
                  
                  <img data-stretch="false" src="https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/1616954722424-C60128FZ1EZGSS3LG11D/Colors+added+to+Circles.png" data-image="https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/1616954722424-C60128FZ1EZGSS3LG11D/Colors+added+to+Circles.png" data-image-dimensions="600x1198" data-image-focal-point="0.5,0.5" alt="Colors have been added to the circles." data-load="false" src="https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/1616954722424-C60128FZ1EZGSS3LG11D/Colors+added+to+Circles.png" width="600" height="1198" alt="" sizes="100vw" style="display:block;object-fit: cover; width: 100%; height: 100%; object-position: 50% 50%" srcset="https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/1616954722424-C60128FZ1EZGSS3LG11D/Colors+added+to+Circles.png?format=100w 100w, https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/1616954722424-C60128FZ1EZGSS3LG11D/Colors+added+to+Circles.png?format=300w 300w, https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/1616954722424-C60128FZ1EZGSS3LG11D/Colors+added+to+Circles.png?format=500w 500w, https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/1616954722424-C60128FZ1EZGSS3LG11D/Colors+added+to+Circles.png?format=750w 750w, https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/1616954722424-C60128FZ1EZGSS3LG11D/Colors+added+to+Circles.png?format=1000w 1000w, https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/1616954722424-C60128FZ1EZGSS3LG11D/Colors+added+to+Circles.png?format=1500w 1500w, https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/1616954722424-C60128FZ1EZGSS3LG11D/Colors+added+to+Circles.png?format=2500w 2500w" loading="lazy" decoding="async" data-loader="sqs">
                
            </div>
          </div>
        
          
        

        
          
          <figcaption class="image-caption-wrapper">
            <div class="image-caption"><p class="" style="white-space:pre-wrap;">Colors have been added to the circles.</p></div>
          </figcaption>
        
      
        </figure>
      

    </div>
  


  




<div class="sqs-html-content">
  <p class="" style="white-space:pre-wrap;"><br>Now we’re getting somewhere!</p><h3 style="white-space:pre-wrap;">The Animation</h3><p class="" style="white-space:pre-wrap;">Now we have our clouds. How could we make them animate and float around?</p><p class="" style="white-space:pre-wrap;">Well, the trick here is to add an offset first. This will move the circle away from a center. Then we can apply a rotation animation. So that way it will be like the circle is rotating around that offset center. And that’s how we can make the circles rotate in a circular pattern in their quadrant.</p><p class="" style="white-space:pre-wrap;">We also want to give a starting point on that rotation path. And a different speed for each circle. It’s a little like making a solar system!</p><p class="" style="white-space:pre-wrap;">(I’ll also adjust to opacity of each circle for softer colors)</p>
</div>



<pre><code>class CloudProvider: ObservableObject {
    let offset: CGSize
    let frameHeightRatio: CGFloat

    init() {
        frameHeightRatio = CGFloat.random(in: 0.7 ..&lt; 1.4)
        offset = CGSize(width: CGFloat.random(in: -150 ..&lt; 150),
                        height: CGFloat.random(in: -150 ..&lt; 150))
    }
}

struct Cloud: View {
    @StateObject var provider = CloudProvider()
    @State var move = false
    let proxy: GeometryProxy
    let color: Color
    let rotationStart: Double
    let duration: Double
    let alignment: Alignment

    var body: some View {
        Circle()
            .fill(color)
            .frame(height: proxy.size.height /  provider.frameHeightRatio)
            .offset(provider.offset)
            .rotationEffect(.init(degrees: move ? rotationStart : rotationStart + 360) )
            .animation(Animation.linear(duration: duration).repeatForever(autoreverses: false))
            .frame(maxWidth: .infinity, maxHeight: .infinity, alignment: alignment)
            .opacity(0.8)
            .onAppear {
                move.toggle()
            }
    }
}

struct FloatingClouds: View {
    @Environment(\.colorScheme) var scheme

    var body: some View {
        GeometryReader { proxy in
            ZStack {
                Theme.generalBackground
                Cloud(proxy: proxy,
                      color: Theme.ellipsesBottomTrailing(forScheme: scheme),
                      rotationStart: 0,
                      duration: 60,
                      alignment: .bottomTrailing)
                Cloud(proxy: proxy,
                      color: Theme.ellipsesTopTrailing(forScheme: scheme),
                      rotationStart: 240,
                      duration: 50,
                      alignment: .topTrailing)
                Cloud(proxy: proxy,
                      color: Theme.ellipsesBottomLeading(forScheme: scheme),
                      rotationStart: 120,
                      duration: 80,
                      alignment: .bottomLeading)
                Cloud(proxy: proxy,
                      color: Theme.ellipsesTopLeading(forScheme: scheme),
                      rotationStart: 180,
                      duration: 70,
                      alignment: .topLeading)
            }
            .ignoresSafeArea()
        }
    }
}</code></pre>
<div class="intrinsic" style="max-width:100%"><div class="embed-block-wrapper " style="padding-bottom:56.20609%;"><div class="sqs-video-wrapper" data-provider-name="YouTube" data-html="<br/><br/><br/><br/><br/><br/>  <br/>  &lt;iframe src=&quot;//www.youtube.com/embed/NlbDJLq5xdc?wmode=opaque&quot; height=&quot;480&quot; width=&quot;854&quot; scrolling=&quot;no&quot; frameborder=&quot;0&quot; allowfullscreen&gt;&lt;/iframe&gt;<br/><br/>"></div></div><div  class="video-caption-wrapper"><div class="video-caption"><p class="" style="white-space:pre-wrap;">Video of circles animating</p></div></div></div>

<div class="sqs-html-content">
  <p class="" style="white-space:pre-wrap;">Not bad! Kind of a lava lamp feel. Very floaty and peaceful, what I’m going for. You’ll notice I also hard coded some things on initialization: the speed and rotation start. That’s because, while randomization can be really cool and helpful, it doesn’t alway aesthetically produce the best results, so I’ve done some guiding that should still translate well to other platforms.</p><h3 style="white-space:pre-wrap;">The Blur</h3><p class="" style="white-space:pre-wrap;">This part, you might think, is easy. Just put your shapes behind a UIVisualEffectView, which is easy to wrap in SwiftUI. </p><p class="" style="white-space:pre-wrap;">Well, I tried it. And the blur was too intense for all the styles I tried, and the colors too muddled. I would need to think of something else.</p><p class="" style="white-space:pre-wrap;">So instead, I’m using .blur in SwiftUI.</p><p class="" style="white-space:pre-wrap;">.blur isn’t the same thing as UIVisualEffectView. What it does is apply a gaussian blur. It makes the edges fuzzy! So it won’t work to provide blur as a window to things underneath, the way UIVisualEffectView does.</p><p class="" style="white-space:pre-wrap;">First I used it on the whole background like this:</p>
</div>



<pre><code>struct FloatingClouds: View {
    @Environment(\.colorScheme) var scheme
    let blur: CGFloat = 60

    var body: some View {
        GeometryReader { proxy in
            ZStack {
                Theme.generalBackground
                Cloud(proxy: proxy,
                      color: Theme.ellipsesBottomTrailing(forScheme: scheme),
                      rotationStart: 0,
                      duration: 60,
                      alignment: .bottomTrailing)
                Cloud(proxy: proxy,
                      color: Theme.ellipsesTopTrailing(forScheme: scheme),
                      rotationStart: 240,
                      duration: 50,
                      alignment: .topTrailing)
                Cloud(proxy: proxy,
                      color: Theme.ellipsesBottomLeading(forScheme: scheme),
                      rotationStart: 120,
                      duration: 80,
                      alignment: .bottomLeading)
                Cloud(proxy: proxy,
                      color: Theme.ellipsesTopLeading(forScheme: scheme),
                      rotationStart: 180,
                      duration: 70,
                      alignment: .topLeading)
            }
            .blur(radius: blur)
            .ignoresSafeArea()
        }
    }
}</code></pre>


<div class="sqs-html-content">
  <p class="" style="white-space:pre-wrap;">But that cause too much transparency along the edges. See here:</p>
</div>













































  

    
  
    <div
        class="
          image-block-outer-wrapper
          layout-caption-below
          design-layout-inline
          combination-animation-site-default
          individual-animation-site-default
          individual-text-animation-site-default
        "
        data-test="image-block-inline-outer-wrapper"
    >

      

      
        <figure
            class="
              sqs-block-image-figure
              intrinsic
            "
            style="max-width:600px;"
        >
          
        
        

        
          
            
          <div
              
              
              class="image-block-wrapper"
              data-animation-role="image"
              
  

          >
            <div class="sqs-image-shape-container-element
              
          
        
              has-aspect-ratio
            " style="
                position: relative;
                
                  padding-bottom:191.8333282470703%;
                
                overflow: hidden;-webkit-mask-image: -webkit-radial-gradient(white, black);
              "
              >
                
                  
                  
                  
                  
                  
                  
                  <img data-stretch="false" src="https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/1616955946229-ZOA2WWLTU4Z5ULDAR67D/View+with+blurred+edges.png" data-image="https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/1616955946229-ZOA2WWLTU4Z5ULDAR67D/View+with+blurred+edges.png" data-image-dimensions="600x1151" data-image-focal-point="0.5,0.5" alt="View with blurred edges." data-load="false" src="https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/1616955946229-ZOA2WWLTU4Z5ULDAR67D/View+with+blurred+edges.png" width="600" height="1151" alt="" sizes="100vw" style="display:block;object-fit: cover; width: 100%; height: 100%; object-position: 50% 50%" srcset="https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/1616955946229-ZOA2WWLTU4Z5ULDAR67D/View+with+blurred+edges.png?format=100w 100w, https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/1616955946229-ZOA2WWLTU4Z5ULDAR67D/View+with+blurred+edges.png?format=300w 300w, https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/1616955946229-ZOA2WWLTU4Z5ULDAR67D/View+with+blurred+edges.png?format=500w 500w, https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/1616955946229-ZOA2WWLTU4Z5ULDAR67D/View+with+blurred+edges.png?format=750w 750w, https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/1616955946229-ZOA2WWLTU4Z5ULDAR67D/View+with+blurred+edges.png?format=1000w 1000w, https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/1616955946229-ZOA2WWLTU4Z5ULDAR67D/View+with+blurred+edges.png?format=1500w 1500w, https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/1616955946229-ZOA2WWLTU4Z5ULDAR67D/View+with+blurred+edges.png?format=2500w 2500w" loading="lazy" decoding="async" data-loader="sqs">
                
            </div>
          </div>
        
          
        

        
          
          <figcaption class="image-caption-wrapper">
            <div class="image-caption"><p class="" style="white-space:pre-wrap;">View with blurred edges.</p></div>
          </figcaption>
        
      
        </figure>
      

    </div>
  


  




<div class="sqs-html-content">
  <p class="" style="white-space:pre-wrap;">What works better is to only blur the circles. Like this:</p>
</div>



<pre><code>struct FloatingClouds: View {
    @Environment(\.colorScheme) var scheme
    let blur: CGFloat = 60

    var body: some View {
        GeometryReader { proxy in
            ZStack {
                Theme.generalBackground
                ZStack {
                    Cloud(proxy: proxy,
                          color: Theme.ellipsesBottomTrailing(forScheme: scheme),
                          rotationStart: 0,
                          duration: 60,
                          alignment: .bottomTrailing)
                    Cloud(proxy: proxy,
                          color: Theme.ellipsesTopTrailing(forScheme: scheme),
                          rotationStart: 240,
                          duration: 50,
                          alignment: .topTrailing)
                    Cloud(proxy: proxy,
                          color: Theme.ellipsesBottomLeading(forScheme: scheme),
                          rotationStart: 120,
                          duration: 80,
                          alignment: .bottomLeading)
                    Cloud(proxy: proxy,
                          color: Theme.ellipsesTopLeading(forScheme: scheme),
                          rotationStart: 180,
                          duration: 70,
                          alignment: .topLeading)
                }
                .blur(radius: blur)
            }
            .ignoresSafeArea()
        }
    }
}</code></pre>


<div class="sqs-html-content">
  <p class="" style="white-space:pre-wrap;">That gives you this:</p>
</div>













































  

    
  
    <div
        class="
          image-block-outer-wrapper
          layout-caption-below
          design-layout-inline
          combination-animation-site-default
          individual-animation-site-default
          individual-text-animation-site-default
        "
        data-test="image-block-inline-outer-wrapper"
    >

      

      
        <figure
            class="
              sqs-block-image-figure
              intrinsic
            "
            style="max-width:600px;"
        >
          
        
        

        
          
            
          <div
              
              
              class="image-block-wrapper"
              data-animation-role="image"
              
  

          >
            <div class="sqs-image-shape-container-element
              
          
        
              has-aspect-ratio
            " style="
                position: relative;
                
                  padding-bottom:190.8333282470703%;
                
                overflow: hidden;-webkit-mask-image: -webkit-radial-gradient(white, black);
              "
              >
                
                  
                  
                  
                  
                  
                  
                  <img data-stretch="false" src="https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/1616956146008-76IKMG25IY10FDTMCDJL/View+without+blurred+edges.png" data-image="https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/1616956146008-76IKMG25IY10FDTMCDJL/View+without+blurred+edges.png" data-image-dimensions="600x1145" data-image-focal-point="0.5,0.5" alt="View without blurred edges." data-load="false" src="https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/1616956146008-76IKMG25IY10FDTMCDJL/View+without+blurred+edges.png" width="600" height="1145" alt="" sizes="100vw" style="display:block;object-fit: cover; width: 100%; height: 100%; object-position: 50% 50%" srcset="https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/1616956146008-76IKMG25IY10FDTMCDJL/View+without+blurred+edges.png?format=100w 100w, https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/1616956146008-76IKMG25IY10FDTMCDJL/View+without+blurred+edges.png?format=300w 300w, https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/1616956146008-76IKMG25IY10FDTMCDJL/View+without+blurred+edges.png?format=500w 500w, https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/1616956146008-76IKMG25IY10FDTMCDJL/View+without+blurred+edges.png?format=750w 750w, https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/1616956146008-76IKMG25IY10FDTMCDJL/View+without+blurred+edges.png?format=1000w 1000w, https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/1616956146008-76IKMG25IY10FDTMCDJL/View+without+blurred+edges.png?format=1500w 1500w, https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/1616956146008-76IKMG25IY10FDTMCDJL/View+without+blurred+edges.png?format=2500w 2500w" loading="lazy" decoding="async" data-loader="sqs">
                
            </div>
          </div>
        
          
        

        
          
          <figcaption class="image-caption-wrapper">
            <div class="image-caption"><p class="" style="white-space:pre-wrap;">View without blurred edges.</p></div>
          </figcaption>
        
      
        </figure>
      

    </div>
  


  




<div class="sqs-html-content">
  <p class="" style="white-space:pre-wrap;">And finally we apply the animation and we get …</p>
</div>



<div class="intrinsic" style="max-width:100%"><div class="embed-block-wrapper " style="padding-bottom:56.20609%;"><div class="sqs-video-wrapper" data-provider-name="YouTube" data-html="<br/><br/><br/><br/><br/><br/>  <br/>  &lt;iframe src=&quot;//www.youtube.com/embed/aiIdZNE1O4s?wmode=opaque&quot; height=&quot;480&quot; width=&quot;854&quot; scrolling=&quot;no&quot; frameborder=&quot;0&quot; allowfullscreen&gt;&lt;/iframe&gt;<br/><br/>"></div></div><div  class="video-caption-wrapper"><div class="video-caption"><p class="" style="white-space:pre-wrap;">Animation with the blur applied.</p></div></div></div>

<div class="sqs-html-content">
  <p class="" style="white-space:pre-wrap;">Awesome, we’ve got a mesmerizing and calming animation for the well being app. Now to make sure it’s accessible!</p><h3 style="white-space:pre-wrap;">Accessibility</h3><p class="" style="white-space:pre-wrap;">As you can see, we’ve already adjusted our accessibility for light mode and dark mode. So that’s nice.</p><p class="" style="white-space:pre-wrap;">Now we need to respect reduced motion. We’ll add a check to decide whether we should trigger the animation. We’ll use <a href="https://www.hackingwithswift.com/books/ios-swiftui/supporting-specific-accessibility-needs-with-swiftui">the clever trick here</a>.</p>
</div>



<pre><code>func withOptionalAnimation&lt;Result&gt;(_ animation: Animation? = .default, _ body: () throws -&gt; Result) rethrows -&gt; Result {
    if UIAccessibility.isReduceMotionEnabled {
        return try body()
    } else {
        return try withAnimation(animation, body)
    }
}</code></pre>


<div class="sqs-html-content">
  <p class="" style="white-space:pre-wrap;">We can use that as a global function and use it anywhere else now too. And we can now remove the animation modifier and use it in the Cloud.</p>
</div>



<pre><code>struct Cloud: View {
    @StateObject var provider = CloudProvider()
    @State var move = false
    let proxy: GeometryProxy
    let color: Color
    let rotationStart: Double
    let duration: Double
    let alignment: Alignment

    var body: some View {
        Circle()
            .fill(color)
            .frame(height: proxy.size.height /  provider.frameHeightRatio)
            .offset(provider.offset)
            .rotationEffect(.init(degrees: move ? rotationStart : rotationStart + 360) )
            .frame(maxWidth: .infinity, maxHeight: .infinity, alignment: alignment)
            .opacity(0.8)
            .onAppear {
                withOptionalAnimation(Animation.linear(duration: duration).repeatForever(autoreverses: false)) {
                    move.toggle()
                }
            }
    }
}</code></pre>


<div class="sqs-html-content">
  <p class="" style="white-space:pre-wrap;">Next, let’s respect reduced transparency. Technically our blur is not a transparency, but it gives off the same feel and requires more device calculations behind the scene, so we’ll go ahead and disable it.</p><p class="" style="white-space:pre-wrap;">However, the circles without the blur don’t look that great. Instead of just disabling the blur and the transparencies within the colors, let’s do something special for the user and provide a unique gradient. And we’ll have it go from top leading to bottom trailing so that it isn’t too plain.</p>
</div>



<pre><code>struct ContentView: View {
    @Environment(\.accessibilityReduceTransparency) var reduceTransparency
    var testReduceTransparency = false

    var body: some View {
        if reduceTransparency || testReduceTransparency {
            LinearNonTransparency()
        } else {
            FloatingClouds()
        }
    }
}

struct LinearNonTransparency: View {
    @Environment(\.colorScheme) var scheme
    var gradient: Gradient {
        Gradient(colors: [Theme.ellipsesTopLeading(forScheme: scheme), Theme.ellipsesTopTrailing(forScheme: scheme)])
    }

    var body: some View {
        LinearGradient(gradient: gradient, startPoint: .topLeading, endPoint: .bottomTrailing)
            .ignoresSafeArea()
    }
}</code></pre>


<div class="sqs-html-content">
  <p class="" style="white-space:pre-wrap;">You’ll notice I also have a testReduceTransparency variable. That’s so I can test it in SwiftUI Previews. All of the screen shots and videos so far have come from Previews! And there isn’t a way to set the environment variable for accessibilityReduceTransparency the way there is for color schemes.<br></p><p class="" style="white-space:pre-wrap;">So now, with reduce transparency, we get this:</p>
</div>













































  

    
  
    <div
        class="
          image-block-outer-wrapper
          layout-caption-below
          design-layout-inline
          combination-animation-site-default
          individual-animation-site-default
          individual-text-animation-site-default
        "
        data-test="image-block-inline-outer-wrapper"
    >

      

      
        <figure
            class="
              sqs-block-image-figure
              intrinsic
            "
            style="max-width:600px;"
        >
          
        
        

        
          
            
          <div
              
              
              class="image-block-wrapper"
              data-animation-role="image"
              
  

          >
            <div class="sqs-image-shape-container-element
              
          
        
              has-aspect-ratio
            " style="
                position: relative;
                
                  padding-bottom:192.16665649414062%;
                
                overflow: hidden;-webkit-mask-image: -webkit-radial-gradient(white, black);
              "
              >
                
                  
                  
                  
                  
                  
                  
                  <img data-stretch="false" src="https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/1616957770492-ZLK1FD5FYVJGRRFZ76PT/LinearGradient.png" data-image="https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/1616957770492-ZLK1FD5FYVJGRRFZ76PT/LinearGradient.png" data-image-dimensions="600x1153" data-image-focal-point="0.5,0.5" alt="A linear gradient applied for reduced transparency." data-load="false" src="https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/1616957770492-ZLK1FD5FYVJGRRFZ76PT/LinearGradient.png" width="600" height="1153" alt="" sizes="100vw" style="display:block;object-fit: cover; width: 100%; height: 100%; object-position: 50% 50%" srcset="https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/1616957770492-ZLK1FD5FYVJGRRFZ76PT/LinearGradient.png?format=100w 100w, https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/1616957770492-ZLK1FD5FYVJGRRFZ76PT/LinearGradient.png?format=300w 300w, https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/1616957770492-ZLK1FD5FYVJGRRFZ76PT/LinearGradient.png?format=500w 500w, https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/1616957770492-ZLK1FD5FYVJGRRFZ76PT/LinearGradient.png?format=750w 750w, https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/1616957770492-ZLK1FD5FYVJGRRFZ76PT/LinearGradient.png?format=1000w 1000w, https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/1616957770492-ZLK1FD5FYVJGRRFZ76PT/LinearGradient.png?format=1500w 1500w, https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/1616957770492-ZLK1FD5FYVJGRRFZ76PT/LinearGradient.png?format=2500w 2500w" loading="lazy" decoding="async" data-loader="sqs">
                
            </div>
          </div>
        
          
        

        
          
          <figcaption class="image-caption-wrapper">
            <div class="image-caption"><p class="" style="white-space:pre-wrap;">A linear gradient applied for reduced transparency.</p></div>
          </figcaption>
        
      
        </figure>
      

    </div>
  


  




<div class="sqs-html-content">
  <p class="" style="white-space:pre-wrap;">Awesome! And finally, we’ll add accessibilityDifferentiateWithoutColor.</p><p class="" style="white-space:pre-wrap;">This is more so that people with colorblindness (like me) can understand signals and controls without colors getting in the way. I’ve already asked my designers to provide colors that are colorblind friendly, but let’s go the extra mile of setting the background to something nice and plain, an off-white and off-black, with this setting enabled.</p><p class="" style="white-space:pre-wrap;">In the Theme we’ll add:</p>
</div>



<pre><code>static func differentiateWithoutColorBackground(forScheme scheme: ColorScheme) -&gt; Color {
        let any = Color(white: 0.95)
        let dark = Color(white: 0.2)
        switch scheme {
        case .light:
            return any
        case .dark:
            return dark
        @unknown default:
            return any
        }
    }</code></pre>


<div class="sqs-html-content">
  <p class="" style="white-space:pre-wrap;">And now our ContentView looks like this:</p>
</div>



<pre><code>struct ContentView: View {
    @Environment(\.accessibilityReduceTransparency) var reduceTransparency
    @Environment(\.accessibilityDifferentiateWithoutColor) var differentiateWithoutColor
    @Environment(\.colorScheme) var scheme
    var testReduceTransparency = false
    var testDifferentiateWithoutColor = false

    var body: some View {
        if differentiateWithoutColor || testDifferentiateWithoutColor {
            Theme.differentiateWithoutColorBackground(forScheme: scheme)
                .ignoresSafeArea()
        } else {
            if reduceTransparency || testReduceTransparency {
                LinearNonTransparency()
            } else {
                FloatingClouds()
            }
        }
    }
}</code></pre>


<div class="sqs-html-content">
  <p class="" style="white-space:pre-wrap;">Now our preview …</p>
</div>



<pre><code>struct ContentView_Previews: PreviewProvider {
    static var previews: some View {
        ContentView()

        ContentView(testReduceTransparency: true)

        ContentView(testDifferentiateWithoutColor: true)
            .environment(\.colorScheme, .dark)

        ContentView(testDifferentiateWithoutColor: true)
            .environment(\.colorScheme, .light)
    }
}</code></pre>


<div class="sqs-html-content">
  <p class="" style="white-space:pre-wrap;">Looks like this!</p>
</div>













































  

    
  
    <div
        class="
          image-block-outer-wrapper
          layout-caption-below
          design-layout-inline
          combination-animation-site-default
          individual-animation-site-default
          individual-text-animation-site-default
        "
        data-test="image-block-inline-outer-wrapper"
    >

      

      
        <figure
            class="
              sqs-block-image-figure
              intrinsic
            "
            style="max-width:600px;"
        >
          
        
        

        
          
            
          <div
              
              
              class="image-block-wrapper"
              data-animation-role="image"
              
  

          >
            <div class="sqs-image-shape-container-element
              
          
        
              has-aspect-ratio
            " style="
                position: relative;
                
                  padding-bottom:306.8333435058594%;
                
                overflow: hidden;-webkit-mask-image: -webkit-radial-gradient(white, black);
              "
              >
                
                  
                  
                  
                  
                  
                  
                  <img data-stretch="false" src="https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/1616958673946-BU4WBQ9YG1QU79CQMV4J/Preview+Altogether.png" data-image="https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/1616958673946-BU4WBQ9YG1QU79CQMV4J/Preview+Altogether.png" data-image-dimensions="600x1841" data-image-focal-point="0.5,0.5" alt="All of our previews together." data-load="false" src="https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/1616958673946-BU4WBQ9YG1QU79CQMV4J/Preview+Altogether.png" width="600" height="1841" alt="" sizes="100vw" style="display:block;object-fit: cover; width: 100%; height: 100%; object-position: 50% 50%" srcset="https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/1616958673946-BU4WBQ9YG1QU79CQMV4J/Preview+Altogether.png?format=100w 100w, https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/1616958673946-BU4WBQ9YG1QU79CQMV4J/Preview+Altogether.png?format=300w 300w, https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/1616958673946-BU4WBQ9YG1QU79CQMV4J/Preview+Altogether.png?format=500w 500w, https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/1616958673946-BU4WBQ9YG1QU79CQMV4J/Preview+Altogether.png?format=750w 750w, https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/1616958673946-BU4WBQ9YG1QU79CQMV4J/Preview+Altogether.png?format=1000w 1000w, https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/1616958673946-BU4WBQ9YG1QU79CQMV4J/Preview+Altogether.png?format=1500w 1500w, https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/1616958673946-BU4WBQ9YG1QU79CQMV4J/Preview+Altogether.png?format=2500w 2500w" loading="lazy" decoding="async" data-loader="sqs">
                
            </div>
          </div>
        
          
        

        
          
          <figcaption class="image-caption-wrapper">
            <div class="image-caption"><p class="" style="white-space:pre-wrap;">All of our previews together.</p></div>
          </figcaption>
        
      
        </figure>
      

    </div>
  


  




<div class="sqs-html-content">
  <h3 style="white-space:pre-wrap;">Conclusion</h3><p class="" style="white-space:pre-wrap;">We’ve done it! We have a accessible, organic, mediative, mesmerizing background.</p><p class="" style="white-space:pre-wrap;">I hope you’ve enjoyed this journey. And feel free to sign up for the beta of Pearl here. It’s an app that has given me personally a lot of meaningful joy and spontaneity, honestly. I use it all the time (insofar as I set it up and receive the wonderful reminders). <a href="https://www.cephalopod.studio/work/pearl">Here is the link for it again</a>.</p><p class="" style="white-space:pre-wrap;">Reach out to me on Twitter <a href="https://twitter.com/wattmaller1">@wattmaller1</a> for any questions, and as always, happy coding.</p>
</div>]]></content:encoded>
      <excerpt:encoded />
      <wp:post_name>swiftui-aurora-background-animation</wp:post_name>
      <wp:post_type>post</wp:post_type>
      <wp:post_id>13</wp:post_id>
      <wp:status>publish</wp:status>
      <pubDate>Sun, 28 Mar 2021 19:16:33 +0000</pubDate>
      <wp:post_date>2021-03-28 19:16:33</wp:post_date>
      <wp:post_date_gmt>2021-03-28 19:16:33</wp:post_date_gmt>
      <category domain="post_tag" nicename="ui"><![CDATA[UI]]></category>
      <category domain="post_tag" nicename="star"><![CDATA[star]]></category>
      <dc:creator>waller.matthew@gmail.com</dc:creator>
      <wp:comment_status>closed</wp:comment_status>
    </item>
    <item>
      <title>PDF Capture App - Part 4: SwiftUI Pro tip &amp;amp; PDF editing.</title>
      <link>/blog/pdf-capture-app-part-4-swiftui-pro-tip-amp-pdf-editing</link>
      <content:encoded><![CDATA[<div class="sqs-html-content">
  <p class="" style="white-space:pre-wrap;">Alright, we’ve got a nice, useful little app for PDFs so far. Now let’s add some nice features that can put it at parity with what the Notes app can do with PDFs, now that we’ve made capturing the PDF smoother and more efficient.</p><p class="" style="white-space:pre-wrap;">You may have seen a screen like this:</p>
</div>













































  

    
  
    <div
        class="
          image-block-outer-wrapper
          layout-caption-hidden
          design-layout-inline
          combination-animation-site-default
          individual-animation-site-default
          individual-text-animation-site-default
        "
        data-test="image-block-inline-outer-wrapper"
    >

      

      
        <figure
            class="
              sqs-block-image-figure
              intrinsic
            "
            style="max-width:300px;"
        >
          
        
        

        
          
            
          <div
              
              
              class="image-block-wrapper"
              data-animation-role="image"
              
  

          >
            <div class="sqs-image-shape-container-element
              
          
        
              has-aspect-ratio
            " style="
                position: relative;
                
                  padding-bottom:216.6666717529297%;
                
                overflow: hidden;-webkit-mask-image: -webkit-radial-gradient(white, black);
              "
              >
                
                  
                  
                  
                  
                  
                  
                  <img data-stretch="false" src="https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/1616287010260-KEB6SWF5EJRXOSTKYR6M/notes_editing.jpeg" data-image="https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/1616287010260-KEB6SWF5EJRXOSTKYR6M/notes_editing.jpeg" data-image-dimensions="300x650" data-image-focal-point="0.5,0.5" alt="Example of editing a PDF in the Notes app with editing controls at the bottom." data-load="false" src="https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/1616287010260-KEB6SWF5EJRXOSTKYR6M/notes_editing.jpeg" width="300" height="650" alt="" sizes="100vw" style="display:block;object-fit: cover; width: 100%; height: 100%; object-position: 50% 50%" srcset="https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/1616287010260-KEB6SWF5EJRXOSTKYR6M/notes_editing.jpeg?format=100w 100w, https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/1616287010260-KEB6SWF5EJRXOSTKYR6M/notes_editing.jpeg?format=300w 300w, https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/1616287010260-KEB6SWF5EJRXOSTKYR6M/notes_editing.jpeg?format=500w 500w, https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/1616287010260-KEB6SWF5EJRXOSTKYR6M/notes_editing.jpeg?format=750w 750w, https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/1616287010260-KEB6SWF5EJRXOSTKYR6M/notes_editing.jpeg?format=1000w 1000w, https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/1616287010260-KEB6SWF5EJRXOSTKYR6M/notes_editing.jpeg?format=1500w 1500w, https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/1616287010260-KEB6SWF5EJRXOSTKYR6M/notes_editing.jpeg?format=2500w 2500w" loading="lazy" decoding="async" data-loader="sqs">
                
            </div>
          </div>
        
          
        

        
      
        </figure>
      

    </div>
  


  




<div class="sqs-html-content">
  <p class="" style="white-space:pre-wrap;"><strong>﻿</strong><br><br><br></p><p class="" style="white-space:pre-wrap;">Look at all the goodies in that editing toolbar! All kinds of markups, rulers, color pickers. Erasers!  Back and forth undo! And if you use the plus button, you can add text and <strong>gasp</strong> signatures! Saved signatures! It’s all there.</p><p class="" style="white-space:pre-wrap;">Dang. This would take us forever to make on our own. Is there a way to get this for ourselves?</p><p class="" style="white-space:pre-wrap;">There is! It’s called the QLPreviewController. The QL stands for Quick Look. And Quick Look has an editing mode with all of these features in it.</p><p class="" style="white-space:pre-wrap;">It would be nice to just take the controls of QLPreviewController and use them on our own, without needing an entirely separate view to appear. But that is the tradeoff.</p><p class="" style="white-space:pre-wrap;">So once again, we need to dip into UIKit and bring this into our SwiftUI. But we’ll do something different this time.</p><h4 style="white-space:pre-wrap;">Wrapping QLPreviewController, First Try</h4><p class="" style="white-space:pre-wrap;">You can see one handy method of adding the preview controller <a href="https://lostmoa.com/blog/PreviewFilesWithQuickLookInSwiftUI/ ">here</a>:</p><p class="" style="white-space:pre-wrap;">However, we need to add a delegate method to return QLPreviewItemEditingMode.updateContents to it so that it knows that it’s allowed to edit content.</p><p class="" style="white-space:pre-wrap;"><strong>﻿</strong>We’ll also need a URL. So we need to pass one in from our DocumentGroup.</p><p class="" style="white-space:pre-wrap;">We simply add a variable called var fileURL: URL? toward the top of our ContentView and then our DocumentGroup does this:</p>
</div>



<pre><code>struct PDFTrapperApp: App {
    var body: some Scene {
        DocumentGroup(newDocument: PDFTrapperDocument()) { file in
            ContentView(document: file.$document, fileURL: file.fileURL)
        }
    }
}</code></pre>


<div class="sqs-html-content">
  <p class="" style="white-space:pre-wrap;"><br>I won’t give the code for this version of the PreviewController since there is a better way, but so far we get this!</p>
</div>



<div class="intrinsic" style="max-width:100%"><div class="embed-block-wrapper " style="padding-bottom:56.20609%;"><div class="sqs-video-wrapper" data-provider-name="YouTube" data-html="<br/><br/><br/><br/><br/><br/>  <br/>  &lt;iframe src=&quot;//www.youtube.com/embed/3sMhpf1FVcA?wmode=opaque&quot; height=&quot;480&quot; width=&quot;854&quot; scrolling=&quot;no&quot; frameborder=&quot;0&quot; allowfullscreen&gt;&lt;/iframe&gt;<br/><br/>"></div></div></div>

<div class="sqs-html-content">
  <p class="" style="white-space:pre-wrap;">Not bad! The controls appear, we can edit our PDF. We can swipe down to dismiss. But, there are a number of problems.</p><p class="" style="white-space:pre-wrap;">First, we needed a NavigationController to hold the top editing controls, and we don’t get a back or a done button because we’re the first view controller in the stack! So we would need to manually add our editing button.</p><p class="" style="white-space:pre-wrap;">Another problem. We want a distraction free area for editing, and this modal has the background visible and a chance of accidentally swiping down to dismiss. </p><p class="" style="white-space:pre-wrap;">And one other problem, you’ll notice in the video that the top left button transforms from a share icon to the pen icon. That’s not great. Looks a little buggy.</p><p class="" style="white-space:pre-wrap;">What’s the solution? A new way to present view controllers in SwiftUI.</p><h4 style="white-space:pre-wrap;">Wrapping QLPreviewController, A Better Way</h4><p class="" style="white-space:pre-wrap;">One trick with wrapping what I call specialty view controllers (UIDocumentPickerViewController, UIImagePickerController, UIReferenceLibraryViewController, etc.), is that they often expect more of a UIKit environment.</p><p class="" style="white-space:pre-wrap;">For instance,, to get the “Done” button you present QLPreviewController modally like this: present(previewController, animated: true, completion: nil) from a plain view controller.</p><p class="" style="white-space:pre-wrap;">So how can we do that in SwiftUI?</p><p class="" style="white-space:pre-wrap;">What I’ve found helpful is to wrap a plain UIViewController whose only job is to present these specialty controllers.</p><p class="" style="white-space:pre-wrap;">Kind of like this. First we have our PreviewControllerHolder:</p>
</div>



<pre><code>import Combine
import QuickLook

class PreviewControllerHolder: UIViewController {
    var cancellables = Set&lt;AnyCancellable&gt;()
    var url: URL
    var startEditing: PassthroughSubject&lt;Void, Never&gt;
    var endEditing: () -&gt; Void

    var previewController = QLPreviewController()

    init(url: URL, startEditing: PassthroughSubject&lt;Void, Never&gt;, endEditing: @escaping () -&gt; Void) {
        self.url = url
        self.startEditing = startEditing
        self.endEditing = endEditing
        super.init(nibName: nil, bundle: nil)
    }

    required init?(coder: NSCoder) {
        url = URL(fileURLWithPath: "")
        startEditing = PassthroughSubject&lt;Void, Never&gt;()
        endEditing = { }
        super.init(coder: coder)
    }

    override func viewDidLoad() {
        super.viewDidLoad()
        view.alpha = 0

        previewController.delegate = self
        previewController.dataSource = self

        startEditing
            .sink { [weak self] in
                guard let self = self else { return }
                self.present(self.previewController, animated: true, completion: nil)
        }
        .store(in: &amp;cancellables)
    }
}

extension PreviewControllerHolder: QLPreviewControllerDataSource {
    func numberOfPreviewItems(in controller: QLPreviewController) -&gt; Int {
        1
    }

    func previewController(_ controller: QLPreviewController, previewItemAt index: Int) -&gt; QLPreviewItem {
        url as QLPreviewItem
    }
}

extension PreviewControllerHolder: QLPreviewControllerDelegate {
    func previewController(_ controller: QLPreviewController, editingModeFor previewItem: QLPreviewItem) -&gt; QLPreviewItemEditingMode {
        .updateContents
    }

    func previewControllerDidDismiss(_ controller: QLPreviewController) {
        endEditing()
    }
}</code></pre>


<div class="sqs-html-content">
  <p class="" style="white-space:pre-wrap;">And then we have our simple representable, QuickLookController:</p>
</div>



<pre><code>struct QuickLookController: UIViewControllerRepresentable {
    var startEditing: PassthroughSubject&lt;Void, Never&gt;
    var url: URL
    var endEditing: () -&gt; Void

    func makeUIViewController(context: Context) -&gt; PreviewControllerHolder {
        PreviewControllerHolder(url: url, startEditing: startEditing, endEditing: endEditing)
    }

    func updateUIViewController(_ viewController: PreviewControllerHolder, context: Context) {
        //
    }
}</code></pre>


<div class="sqs-html-content">
  <p class="" style="white-space:pre-wrap;">I added publisher to say when to fire because we’re going to basically hide the holder somewhere on the ContentView (wherever we want really), and let it present the QuickLookController when ready. So it just lives in waiting within our SwiftUI views.</p><p class="" style="white-space:pre-wrap;">So I’m going to add this:</p><p class="" style="white-space:pre-wrap;">var startEditMode = PassthroughSubject&lt;Void, Never&gt;()</p><p class="" style="white-space:pre-wrap;">to the PDFManager.</p><p class="" style="white-space:pre-wrap;">We also have closure to know refresh the PDF in our ContentView when done editing. And we add a progress indicator and opacity animation for smooth transitions.</p><p class="" style="white-space:pre-wrap;">Now our ContentView looks like this!</p>
</div>



<pre><code>import Combine
import PDFKit
import SwiftUI

struct ContentView: View {
    @StateObject var manager = PDFManager()
    @Binding var document: PDFTrapperDocument
    @State var showScanner = false
    @State var isEditing = false
    var fileURL: URL?

    private func save() {
        document.setAsNotBlank()
        document.saveTrigger.toggle()
    }

    var body: some View {
        ZStack {
            if let url = fileURL {
                QuickLookController(startEditing: manager.startEditMode, url: url) {
                    if let refreshedPDF = PDFDocument(url: url) {
                        document.pdf = refreshedPDF
                        manager.saveReporter.send()
                        isEditing = false
                    }
                }
            }
            if showScanner {
                ScannerView { images in
                    manager.addPhotos(images, toPDFDocument: document)
                    withAnimation {
                        showScanner = false
                    }
                }
            } else {
                if !isEditing {
                    VStack {
                        PDFDisplayView(pdf: document.pdf)
                        Button("Editing Canvas") {
                            isEditing = true
                            DispatchQueue.main.asyncAfter(deadline: .now() + 0.3) {
                                manager.startEditMode.send()
                            }
                        }
                    }
                    .transition(AnyTransition.opacity.animation(.default))
                }
            }
            if isEditing {
                ProgressView()
            }
        }
        .onAppear {
            if document.isBlank {
                showScanner = true
            }
        }
        .onReceive(manager.saveReporter, perform: save)
    }
}</code></pre>


<div class="sqs-html-content">
  <p class="" style="white-space:pre-wrap;">Awesome! And this is what it looks like:</p>
</div>



<div class="intrinsic" style="max-width:100%"><div class="embed-block-wrapper " style="padding-bottom:56.20609%;"><div class="sqs-video-wrapper" data-provider-name="YouTube" data-html="<br/><br/><br/><br/><br/><br/>  <br/>  &lt;iframe src=&quot;//www.youtube.com/embed/vnEKhgLE5uY?wmode=opaque&quot; height=&quot;480&quot; width=&quot;854&quot; scrolling=&quot;no&quot; frameborder=&quot;0&quot; allowfullscreen&gt;&lt;/iframe&gt;<br/><br/>"></div></div></div>

<div class="sqs-html-content">
  <p class="" style="white-space:pre-wrap;">Nice, it’s full screen. No glitchy button change. We have our dismiss button. Looking great!</p><p class="" style="white-space:pre-wrap;">Now, it would be nice to remove the bottom sharing tool bar, and automatically trigger the editing tools. There are some way to do that, but they generally involve digging into the subviews of a subclassed QLPreviewController.</p><p class="" style="white-space:pre-wrap;">It’s a little hacky, and it could fail in the future if something undocumented changes, but at worst the code does nothing. So I’ve done that in my own view controller, but consider it a challenge to figure out if you want to try!</p><p class="" style="white-space:pre-wrap;">This is awesome! We have an app that captures PDFs faster than the Notes app, and it now has editing features on par with the Notes app!</p><p class="" style="white-space:pre-wrap;">However, as I mentioned in the last post, it turns out that the Notes app was never our main challenger! There is another, more powerful boss to defeat in our game to make an awesome PDF app.</p><p class="" style="white-space:pre-wrap;">Find out about this challenger in the next post, and, as always <a href="https://t.co/ybrkcoWDEe?amp=1">sign up here</a> if you're interested in checking out the beta when it's ready. </p><p class="" style="white-space:pre-wrap;">Until then, happy coding :)</p>
</div>]]></content:encoded>
      <excerpt:encoded />
      <wp:post_name>pdf-capture-app-part-4-swiftui-pro-tip-amp-pdf-editing</wp:post_name>
      <wp:post_type>post</wp:post_type>
      <wp:post_id>14</wp:post_id>
      <wp:status>publish</wp:status>
      <pubDate>Mon, 22 Mar 2021 02:59:16 +0000</pubDate>
      <wp:post_date>2021-03-22 02:59:16</wp:post_date>
      <wp:post_date_gmt>2021-03-22 02:59:16</wp:post_date_gmt>
      <category domain="post_tag" nicename="pdftrapper"><![CDATA[PDFTrapper]]></category>
      <dc:creator>waller.matthew@gmail.com</dc:creator>
      <wp:comment_status>closed</wp:comment_status>
    </item>
    <item>
      <title>Making PDF Capture App - Part 3</title>
      <link>/blog/making-pdf-capture-app-part-3</link>
      <content:encoded><![CDATA[<div class="sqs-html-content">
  <p class="" style="white-space:pre-wrap;">Alright, as promised, time to do some fun things. Let’s add the document scanner!</p><p class="" style="white-space:pre-wrap;">First things first. I’m going to create my ScannerView. This is just a VNDocumentCameraViewController wrapped in a UIViewControllerRepresentable, with a completion handler for when the images come back in the delegate, which will be our Coordinator.</p>
</div>













































  

    
  
    <div
        class="
          image-block-outer-wrapper
          layout-caption-below
          design-layout-inline
          combination-animation-site-default
          individual-animation-site-default
          individual-text-animation-site-default
        "
        data-test="image-block-inline-outer-wrapper"
    >

      

      
        <figure
            class="
              sqs-block-image-figure
              intrinsic
            "
            style="max-width:1200px;"
        >
          
        
        

        
          
            
          <div
              
              
              class="image-block-wrapper"
              data-animation-role="image"
              
  

          >
            <div class="sqs-image-shape-container-element
              
          
        
              has-aspect-ratio
            " style="
                position: relative;
                
                  padding-bottom:78.83333587646484%;
                
                overflow: hidden;-webkit-mask-image: -webkit-radial-gradient(white, black);
              "
              >
                
                  
                  
                  
                  
                  
                  
                  <img data-stretch="false" src="https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/1614486005417-JVCB6YGJL835Q306X0M8/scannerview.png" data-image="https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/1614486005417-JVCB6YGJL835Q306X0M8/scannerview.png" data-image-dimensions="1200x946" data-image-focal-point="0.5,0.5" alt="scannerview.png" data-load="false" src="https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/1614486005417-JVCB6YGJL835Q306X0M8/scannerview.png" width="1200" height="946" alt="" sizes="100vw" style="display:block;object-fit: cover; width: 100%; height: 100%; object-position: 50% 50%" srcset="https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/1614486005417-JVCB6YGJL835Q306X0M8/scannerview.png?format=100w 100w, https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/1614486005417-JVCB6YGJL835Q306X0M8/scannerview.png?format=300w 300w, https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/1614486005417-JVCB6YGJL835Q306X0M8/scannerview.png?format=500w 500w, https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/1614486005417-JVCB6YGJL835Q306X0M8/scannerview.png?format=750w 750w, https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/1614486005417-JVCB6YGJL835Q306X0M8/scannerview.png?format=1000w 1000w, https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/1614486005417-JVCB6YGJL835Q306X0M8/scannerview.png?format=1500w 1500w, https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/1614486005417-JVCB6YGJL835Q306X0M8/scannerview.png?format=2500w 2500w" loading="lazy" decoding="async" data-loader="sqs">
                
            </div>
          </div>
        
          
        

        
      
        </figure>
      

    </div>
  


  




<div class="sqs-html-content">
  <p class="" style="white-space:pre-wrap;">We’re going to think ahead about adding a button that lets you bring up the scanner to insert or append pages if you open an existing PDF. So I’ll add some logic to show the scanner if the document is blank, but otherwise, look to the scanner-button-pressed variable.</p><p class="" style="white-space:pre-wrap;">And of course, we add the code to take the image we get from the completion handler and feed them to our PDF manager, which will add the images to the PDF as individual pages!</p><p class="" style="white-space:pre-wrap;">So the PDFManager looks like this:</p>
</div>













































  

    
  
    <div
        class="
          image-block-outer-wrapper
          layout-caption-below
          design-layout-inline
          combination-animation-site-default
          individual-animation-site-default
          individual-text-animation-site-default
        "
        data-test="image-block-inline-outer-wrapper"
    >

      

      
        <figure
            class="
              sqs-block-image-figure
              intrinsic
            "
            style="max-width:1200px;"
        >
          
        
        

        
          
            
          <div
              
              
              class="image-block-wrapper"
              data-animation-role="image"
              
  

          >
            <div class="sqs-image-shape-container-element
              
          
        
              has-aspect-ratio
            " style="
                position: relative;
                
                  padding-bottom:60.41666793823242%;
                
                overflow: hidden;-webkit-mask-image: -webkit-radial-gradient(white, black);
              "
              >
                
                  
                  
                  
                  
                  
                  
                  <img data-stretch="false" src="https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/1614486029059-QEHMOSETX9EEXZLEU0N6/new_pdfmanager.png" data-image="https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/1614486029059-QEHMOSETX9EEXZLEU0N6/new_pdfmanager.png" data-image-dimensions="1200x725" data-image-focal-point="0.5,0.5" alt="new_pdfmanager.png" data-load="false" src="https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/1614486029059-QEHMOSETX9EEXZLEU0N6/new_pdfmanager.png" width="1200" height="725" alt="" sizes="100vw" style="display:block;object-fit: cover; width: 100%; height: 100%; object-position: 50% 50%" srcset="https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/1614486029059-QEHMOSETX9EEXZLEU0N6/new_pdfmanager.png?format=100w 100w, https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/1614486029059-QEHMOSETX9EEXZLEU0N6/new_pdfmanager.png?format=300w 300w, https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/1614486029059-QEHMOSETX9EEXZLEU0N6/new_pdfmanager.png?format=500w 500w, https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/1614486029059-QEHMOSETX9EEXZLEU0N6/new_pdfmanager.png?format=750w 750w, https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/1614486029059-QEHMOSETX9EEXZLEU0N6/new_pdfmanager.png?format=1000w 1000w, https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/1614486029059-QEHMOSETX9EEXZLEU0N6/new_pdfmanager.png?format=1500w 1500w, https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/1614486029059-QEHMOSETX9EEXZLEU0N6/new_pdfmanager.png?format=2500w 2500w" loading="lazy" decoding="async" data-loader="sqs">
                
            </div>
          </div>
        
          
        

        
      
        </figure>
      

    </div>
  


  




<div class="sqs-html-content">
  <p class="" style="white-space:pre-wrap;">And the ContentView looks like this (please notice the nice slide animation we are going to have going on; it is wonderful :)</p>
</div>













































  

    
  
    <div
        class="
          image-block-outer-wrapper
          layout-caption-below
          design-layout-inline
          combination-animation-site-default
          individual-animation-site-default
          individual-text-animation-site-default
        "
        data-test="image-block-inline-outer-wrapper"
    >

      

      
        <figure
            class="
              sqs-block-image-figure
              intrinsic
            "
            style="max-width:1200px;"
        >
          
        
        

        
          
            
          <div
              
              
              class="image-block-wrapper"
              data-animation-role="image"
              
  

          >
            <div class="sqs-image-shape-container-element
              
          
        
              has-aspect-ratio
            " style="
                position: relative;
                
                  padding-bottom:118.08333587646484%;
                
                overflow: hidden;-webkit-mask-image: -webkit-radial-gradient(white, black);
              "
              >
                
                  
                  
                  
                  
                  
                  
                  <img data-stretch="false" src="https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/1614486047602-L38G9VOC7R8NJT5E85WJ/new_contentview.png" data-image="https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/1614486047602-L38G9VOC7R8NJT5E85WJ/new_contentview.png" data-image-dimensions="1200x1417" data-image-focal-point="0.5,0.5" alt="new_contentview.png" data-load="false" src="https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/1614486047602-L38G9VOC7R8NJT5E85WJ/new_contentview.png" width="1200" height="1417" alt="" sizes="100vw" style="display:block;object-fit: cover; width: 100%; height: 100%; object-position: 50% 50%" srcset="https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/1614486047602-L38G9VOC7R8NJT5E85WJ/new_contentview.png?format=100w 100w, https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/1614486047602-L38G9VOC7R8NJT5E85WJ/new_contentview.png?format=300w 300w, https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/1614486047602-L38G9VOC7R8NJT5E85WJ/new_contentview.png?format=500w 500w, https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/1614486047602-L38G9VOC7R8NJT5E85WJ/new_contentview.png?format=750w 750w, https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/1614486047602-L38G9VOC7R8NJT5E85WJ/new_contentview.png?format=1000w 1000w, https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/1614486047602-L38G9VOC7R8NJT5E85WJ/new_contentview.png?format=1500w 1500w, https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/1614486047602-L38G9VOC7R8NJT5E85WJ/new_contentview.png?format=2500w 2500w" loading="lazy" decoding="async" data-loader="sqs">
                
            </div>
          </div>
        
          
        

        
      
        </figure>
      

    </div>
  


  




<div class="sqs-html-content">
  <p class="" style="white-space:pre-wrap;">And, now that you’ll need to use the actual camera, don’t forget to add your privacy messages to the Info.plist, to tell the user why you need access to the camera.</p><p class="" style="white-space:pre-wrap;">And this is what we get!!!</p>
</div>



<div class="intrinsic" style="max-width:100%"><div class="embed-block-wrapper " style="padding-bottom:56.20609%;"><div class="sqs-video-wrapper" data-provider-name="YouTube" data-html="<br/><br/><br/><br/><br/><br/>  <br/>  &lt;iframe src=&quot;//www.youtube.com/embed/-gdW6Uk4yBY?wmode=opaque&quot; height=&quot;480&quot; width=&quot;854&quot; scrolling=&quot;no&quot; frameborder=&quot;0&quot; allowfullscreen&gt;&lt;/iframe&gt;<br/><br/>"></div></div></div>

<div class="sqs-html-content">
  <p class="" style="white-space:pre-wrap;">Welp. We’ve done it. We made a scanner app. And I have a confession to make. I already used it for my taxes! It went loads faster than previous years when I uploaded everything with the Notes app. </p><p class="" style="white-space:pre-wrap;">It takes 2 taps to get to a saved scan in this app while it take 4 taps to do the same thing in the Notes app. Document after document, it adds up.</p><p class="" style="white-space:pre-wrap;">However, let’s not pat ourselves on the back too much just yet. For one, Notes does more than just save PDFs, even when working just with PDFs and it would be nice if our app did a bit more too, on the editing front.</p><p class="" style="white-space:pre-wrap;">And two, there is another built in challenger on the horizon. A little feature in a default app that I hadn’t known about. Do you know what that is? Find out next time as we go from an app that gets a job done, to an app that starts to become competitive!</p>
</div>]]></content:encoded>
      <excerpt:encoded />
      <wp:post_name>making-pdf-capture-app-part-3</wp:post_name>
      <wp:post_type>post</wp:post_type>
      <wp:post_id>15</wp:post_id>
      <wp:status>publish</wp:status>
      <pubDate>Tue, 16 Mar 2021 02:25:17 +0000</pubDate>
      <wp:post_date>2021-03-16 02:25:17</wp:post_date>
      <wp:post_date_gmt>2021-03-16 02:25:17</wp:post_date_gmt>
      <category domain="post_tag" nicename="pdftrapper"><![CDATA[PDFTrapper]]></category>
      <dc:creator>waller.matthew@gmail.com</dc:creator>
      <wp:comment_status>closed</wp:comment_status>
    </item>
    <item>
      <title>Making a PDF Capture App - Part 2</title>
      <link>/blog/making-a-pdf-capture-app-part-2</link>
      <content:encoded><![CDATA[<div class="sqs-html-content">
  <p class="" style="white-space:pre-wrap;"><a href="https://www.cephalopod.studio/blog/making-a-pdf-capture-app-part-1">Last time</a>, we left off with a cliff hanger. What was wrong with our PDF editing?</p><p class="" style="white-space:pre-wrap;">Answer: our changes didn’t persist. The fileWrapper function that saves the app never got called. Hmmm.</p><p class="" style="white-space:pre-wrap;">If you remember our text editing app, the string we passed in changed. And a String is a value type. In fact, the whole document is a value type! This means when we change something, the whole document changes, and that’s when the document get saved.</p><p class="" style="white-space:pre-wrap;">But the PDFDocument we’re using isn’t a struct or a value type. It’s a reference type. So when we change it, it doesn’t register for the whole document.</p><p class="" style="white-space:pre-wrap;">So how do we change it? I made a little hack. I give it something that can be changed, and when changed, triggers the save.</p><p class="" style="white-space:pre-wrap;">I added a simple Boolean to the document called “saveTrigger.”</p><p class="" style="white-space:pre-wrap;">And in my ContentView, I simply toggle the value on the document (the value doesn't matter; only changing the value matters).</p><p class="" style="white-space:pre-wrap;">But I don’t only want to save the view when I’m on the ContentView. So I have ContentView subscribe to the publisher of a StateObject I call PDFManager.</p>
</div>













































  

    
  
    <div
        class="
          image-block-outer-wrapper
          layout-caption-below
          design-layout-inline
          combination-animation-site-default
          individual-animation-site-default
          individual-text-animation-site-default
        "
        data-test="image-block-inline-outer-wrapper"
    >

      

      
        <figure
            class="
              sqs-block-image-figure
              intrinsic
            "
            style="max-width:600px;"
        >
          
        
        

        
          
            
          <div
              
              
              class="image-block-wrapper"
              data-animation-role="image"
              
  

          >
            <div class="sqs-image-shape-container-element
              
          
        
              has-aspect-ratio
            " style="
                position: relative;
                
                  padding-bottom:56.83333206176758%;
                
                overflow: hidden;-webkit-mask-image: -webkit-radial-gradient(white, black);
              "
              >
                
                  
                  
                  
                  
                  
                  
                  <img data-stretch="false" src="https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/1614478491436-GHTC73TXLO9D0YHUFM3W/pdfmanager.png" data-image="https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/1614478491436-GHTC73TXLO9D0YHUFM3W/pdfmanager.png" data-image-dimensions="600x341" data-image-focal-point="0.5,0.5" alt="pdfmanager.png" data-load="false" src="https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/1614478491436-GHTC73TXLO9D0YHUFM3W/pdfmanager.png" width="600" height="341" alt="" sizes="100vw" style="display:block;object-fit: cover; width: 100%; height: 100%; object-position: 50% 50%" srcset="https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/1614478491436-GHTC73TXLO9D0YHUFM3W/pdfmanager.png?format=100w 100w, https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/1614478491436-GHTC73TXLO9D0YHUFM3W/pdfmanager.png?format=300w 300w, https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/1614478491436-GHTC73TXLO9D0YHUFM3W/pdfmanager.png?format=500w 500w, https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/1614478491436-GHTC73TXLO9D0YHUFM3W/pdfmanager.png?format=750w 750w, https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/1614478491436-GHTC73TXLO9D0YHUFM3W/pdfmanager.png?format=1000w 1000w, https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/1614478491436-GHTC73TXLO9D0YHUFM3W/pdfmanager.png?format=1500w 1500w, https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/1614478491436-GHTC73TXLO9D0YHUFM3W/pdfmanager.png?format=2500w 2500w" loading="lazy" decoding="async" data-loader="sqs">
                
            </div>
          </div>
        
          
        

        
      
        </figure>
      

    </div>
  


  




<div class="sqs-html-content">
  <p class="" style="white-space:pre-wrap;">And now my ContentView looks like this</p>
</div>













































  

    
  
    <div
        class="
          image-block-outer-wrapper
          layout-caption-below
          design-layout-inline
          combination-animation-site-default
          individual-animation-site-default
          individual-text-animation-site-default
        "
        data-test="image-block-inline-outer-wrapper"
    >

      

      
        <figure
            class="
              sqs-block-image-figure
              intrinsic
            "
            style="max-width:1200px;"
        >
          
        
        

        
          
            
          <div
              
              
              class="image-block-wrapper"
              data-animation-role="image"
              
  

          >
            <div class="sqs-image-shape-container-element
              
          
        
              has-aspect-ratio
            " style="
                position: relative;
                
                  padding-bottom:51.75%;
                
                overflow: hidden;-webkit-mask-image: -webkit-radial-gradient(white, black);
              "
              >
                
                  
                  
                  
                  
                  
                  
                  <img data-stretch="false" src="https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/1614478776876-X1YA878PX5X762UXW7VT/contentview.png" data-image="https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/1614478776876-X1YA878PX5X762UXW7VT/contentview.png" data-image-dimensions="1200x621" data-image-focal-point="0.5,0.5" alt="contentview.png" data-load="false" src="https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/1614478776876-X1YA878PX5X762UXW7VT/contentview.png" width="1200" height="621" alt="" sizes="100vw" style="display:block;object-fit: cover; width: 100%; height: 100%; object-position: 50% 50%" srcset="https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/1614478776876-X1YA878PX5X762UXW7VT/contentview.png?format=100w 100w, https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/1614478776876-X1YA878PX5X762UXW7VT/contentview.png?format=300w 300w, https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/1614478776876-X1YA878PX5X762UXW7VT/contentview.png?format=500w 500w, https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/1614478776876-X1YA878PX5X762UXW7VT/contentview.png?format=750w 750w, https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/1614478776876-X1YA878PX5X762UXW7VT/contentview.png?format=1000w 1000w, https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/1614478776876-X1YA878PX5X762UXW7VT/contentview.png?format=1500w 1500w, https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/1614478776876-X1YA878PX5X762UXW7VT/contentview.png?format=2500w 2500w" loading="lazy" decoding="async" data-loader="sqs">
                
            </div>
          </div>
        
          
        

        
      
        </figure>
      

    </div>
  


  




<div class="sqs-html-content">
  <p class="" style="white-space:pre-wrap;">Persistence problem solved.</p><p class="" style="white-space:pre-wrap;">Now, before we get to the fun stuff, I have another setup issue I need to solve. I want to know if I’m looking at a newly created, blank PDF, or if the user has just selected a previously created PDF. Well, after searching around, there don’t seem to be any definitive answers on knowing whether a PDF has no content. So, when we create the PDF, let’s just leave some metadata that we’ve created a blank PDF!</p><p class="" style="white-space:pre-wrap;">Now, PDFKit won’t let you leave just any metadata with PDFDocument. You need to use a predefined PDFDocumentAttribute. The most useful one for our purposes is called keywordsAttribute. So we’ll set a keyword to value that is unlikely to be used elsewhere as a keyword, so that someone doesn’t accidentally use our keyword.</p><p class="" style="white-space:pre-wrap;">So now our init for PDFTrapperDocument looks like this:</p>
</div>













































  

    
  
    <div
        class="
          image-block-outer-wrapper
          layout-caption-below
          design-layout-inline
          combination-animation-site-default
          individual-animation-site-default
          individual-text-animation-site-default
        "
        data-test="image-block-inline-outer-wrapper"
    >

      

      
        <figure
            class="
              sqs-block-image-figure
              intrinsic
            "
            style="max-width:1200px;"
        >
          
        
        

        
          
            
          <div
              
              
              class="image-block-wrapper"
              data-animation-role="image"
              
  

          >
            <div class="sqs-image-shape-container-element
              
          
        
              has-aspect-ratio
            " style="
                position: relative;
                
                  padding-bottom:53.583335876464844%;
                
                overflow: hidden;-webkit-mask-image: -webkit-radial-gradient(white, black);
              "
              >
                
                  
                  
                  
                  
                  
                  
                  <img data-stretch="false" src="https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/1614482009046-GZE1LKFKFCQKQ0EET5KD/new_init.png" data-image="https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/1614482009046-GZE1LKFKFCQKQ0EET5KD/new_init.png" data-image-dimensions="1200x643" data-image-focal-point="0.5,0.5" alt="new_init.png" data-load="false" src="https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/1614482009046-GZE1LKFKFCQKQ0EET5KD/new_init.png" width="1200" height="643" alt="" sizes="100vw" style="display:block;object-fit: cover; width: 100%; height: 100%; object-position: 50% 50%" srcset="https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/1614482009046-GZE1LKFKFCQKQ0EET5KD/new_init.png?format=100w 100w, https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/1614482009046-GZE1LKFKFCQKQ0EET5KD/new_init.png?format=300w 300w, https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/1614482009046-GZE1LKFKFCQKQ0EET5KD/new_init.png?format=500w 500w, https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/1614482009046-GZE1LKFKFCQKQ0EET5KD/new_init.png?format=750w 750w, https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/1614482009046-GZE1LKFKFCQKQ0EET5KD/new_init.png?format=1000w 1000w, https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/1614482009046-GZE1LKFKFCQKQ0EET5KD/new_init.png?format=1500w 1500w, https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/1614482009046-GZE1LKFKFCQKQ0EET5KD/new_init.png?format=2500w 2500w" loading="lazy" decoding="async" data-loader="sqs">
                
            </div>
          </div>
        
          
        

        
      
        </figure>
      

    </div>
  


  




<div class="sqs-html-content">
  <p class="" style="white-space:pre-wrap;">And we add a blankness property and a way to set it to not blank like this:</p>
</div>













































  

    
  
    <div
        class="
          image-block-outer-wrapper
          layout-caption-below
          design-layout-inline
          combination-animation-site-default
          individual-animation-site-default
          individual-text-animation-site-default
        "
        data-test="image-block-inline-outer-wrapper"
    >

      

      
        <figure
            class="
              sqs-block-image-figure
              intrinsic
            "
            style="max-width:1200px;"
        >
          
        
        

        
          
            
          <div
              
              
              class="image-block-wrapper"
              data-animation-role="image"
              
  

          >
            <div class="sqs-image-shape-container-element
              
          
        
              has-aspect-ratio
            " style="
                position: relative;
                
                  padding-bottom:68.58333587646484%;
                
                overflow: hidden;-webkit-mask-image: -webkit-radial-gradient(white, black);
              "
              >
                
                  
                  
                  
                  
                  
                  
                  <img data-stretch="false" src="https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/1614482075592-R6VEL9LAEU6Q37DGFS93/is_blank_setnotblank.png" data-image="https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/1614482075592-R6VEL9LAEU6Q37DGFS93/is_blank_setnotblank.png" data-image-dimensions="1200x823" data-image-focal-point="0.5,0.5" alt="is_blank_setnotblank.png" data-load="false" src="https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/1614482075592-R6VEL9LAEU6Q37DGFS93/is_blank_setnotblank.png" width="1200" height="823" alt="" sizes="100vw" style="display:block;object-fit: cover; width: 100%; height: 100%; object-position: 50% 50%" srcset="https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/1614482075592-R6VEL9LAEU6Q37DGFS93/is_blank_setnotblank.png?format=100w 100w, https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/1614482075592-R6VEL9LAEU6Q37DGFS93/is_blank_setnotblank.png?format=300w 300w, https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/1614482075592-R6VEL9LAEU6Q37DGFS93/is_blank_setnotblank.png?format=500w 500w, https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/1614482075592-R6VEL9LAEU6Q37DGFS93/is_blank_setnotblank.png?format=750w 750w, https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/1614482075592-R6VEL9LAEU6Q37DGFS93/is_blank_setnotblank.png?format=1000w 1000w, https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/1614482075592-R6VEL9LAEU6Q37DGFS93/is_blank_setnotblank.png?format=1500w 1500w, https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/1614482075592-R6VEL9LAEU6Q37DGFS93/is_blank_setnotblank.png?format=2500w 2500w" loading="lazy" decoding="async" data-loader="sqs">
                
            </div>
          </div>
        
          
        

        
      
        </figure>
      

    </div>
  


  




<div class="sqs-html-content">
  <p class="" style="white-space:pre-wrap;">Now we can test whether our PDF is marked as blank or not!</p>
</div>













































  

    
  
    <div
        class="
          image-block-outer-wrapper
          layout-caption-below
          design-layout-inline
          combination-animation-site-default
          individual-animation-site-default
          individual-text-animation-site-default
        "
        data-test="image-block-inline-outer-wrapper"
    >

      

      
        <figure
            class="
              sqs-block-image-figure
              intrinsic
            "
            style="max-width:1200px;"
        >
          
        
        

        
          
            
          <div
              
              
              class="image-block-wrapper"
              data-animation-role="image"
              
  

          >
            <div class="sqs-image-shape-container-element
              
          
        
              has-aspect-ratio
            " style="
                position: relative;
                
                  padding-bottom:67.33333587646484%;
                
                overflow: hidden;-webkit-mask-image: -webkit-radial-gradient(white, black);
              "
              >
                
                  
                  
                  
                  
                  
                  
                  <img data-stretch="false" src="https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/1614482195743-9SYJRRAFHOO90IIH7ASQ/is_blank_test.png" data-image="https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/1614482195743-9SYJRRAFHOO90IIH7ASQ/is_blank_test.png" data-image-dimensions="1200x808" data-image-focal-point="0.5,0.5" alt="is_blank_test.png" data-load="false" src="https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/1614482195743-9SYJRRAFHOO90IIH7ASQ/is_blank_test.png" width="1200" height="808" alt="" sizes="100vw" style="display:block;object-fit: cover; width: 100%; height: 100%; object-position: 50% 50%" srcset="https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/1614482195743-9SYJRRAFHOO90IIH7ASQ/is_blank_test.png?format=100w 100w, https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/1614482195743-9SYJRRAFHOO90IIH7ASQ/is_blank_test.png?format=300w 300w, https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/1614482195743-9SYJRRAFHOO90IIH7ASQ/is_blank_test.png?format=500w 500w, https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/1614482195743-9SYJRRAFHOO90IIH7ASQ/is_blank_test.png?format=750w 750w, https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/1614482195743-9SYJRRAFHOO90IIH7ASQ/is_blank_test.png?format=1000w 1000w, https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/1614482195743-9SYJRRAFHOO90IIH7ASQ/is_blank_test.png?format=1500w 1500w, https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/1614482195743-9SYJRRAFHOO90IIH7ASQ/is_blank_test.png?format=2500w 2500w" loading="lazy" decoding="async" data-loader="sqs">
                
            </div>
          </div>
        
          
        

        
      
        </figure>
      

    </div>
  


  




<div class="sqs-html-content">
  <p class="" style="white-space:pre-wrap;">Try it out and you’ll see that it starts as blank and after about 3 seconds the edit happens and the document says it is not blank. Success!</p><p class="" style="white-space:pre-wrap;">(BTW, at this point, don’t open an existing PDF that you don’t want edited, or it will get edited!) </p>
</div>













































  

    
  
    <div
        class="
          image-block-outer-wrapper
          layout-caption-below
          design-layout-inline
          combination-animation-site-default
          individual-animation-site-default
          individual-text-animation-site-default
        "
        data-test="image-block-inline-outer-wrapper"
    >

      

      
        <figure
            class="
              sqs-block-image-figure
              intrinsic
            "
            style="max-width:300px;"
        >
          
        
        

        
          
            
          <div
              
              
              class="image-block-wrapper"
              data-animation-role="image"
              
  

          >
            <div class="sqs-image-shape-container-element
              
          
        
              has-aspect-ratio
            " style="
                position: relative;
                
                  padding-bottom:216.33334350585938%;
                
                overflow: hidden;-webkit-mask-image: -webkit-radial-gradient(white, black);
              "
              >
                
                  
                  
                  
                  
                  
                  
                  <img data-stretch="false" src="https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/1614482405385-BHHH3GC5LY2XLW6X90MV/is_blank_screen.png" data-image="https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/1614482405385-BHHH3GC5LY2XLW6X90MV/is_blank_screen.png" data-image-dimensions="300x649" data-image-focal-point="0.5,0.5" alt="is_blank_screen.png" data-load="false" src="https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/1614482405385-BHHH3GC5LY2XLW6X90MV/is_blank_screen.png" width="300" height="649" alt="" sizes="100vw" style="display:block;object-fit: cover; width: 100%; height: 100%; object-position: 50% 50%" srcset="https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/1614482405385-BHHH3GC5LY2XLW6X90MV/is_blank_screen.png?format=100w 100w, https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/1614482405385-BHHH3GC5LY2XLW6X90MV/is_blank_screen.png?format=300w 300w, https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/1614482405385-BHHH3GC5LY2XLW6X90MV/is_blank_screen.png?format=500w 500w, https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/1614482405385-BHHH3GC5LY2XLW6X90MV/is_blank_screen.png?format=750w 750w, https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/1614482405385-BHHH3GC5LY2XLW6X90MV/is_blank_screen.png?format=1000w 1000w, https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/1614482405385-BHHH3GC5LY2XLW6X90MV/is_blank_screen.png?format=1500w 1500w, https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/1614482405385-BHHH3GC5LY2XLW6X90MV/is_blank_screen.png?format=2500w 2500w" loading="lazy" decoding="async" data-loader="sqs">
                
            </div>
          </div>
        
          
        

        
      
        </figure>
      

    </div>
  


  












































  

    
  
    <div
        class="
          image-block-outer-wrapper
          layout-caption-below
          design-layout-inline
          combination-animation-site-default
          individual-animation-site-default
          individual-text-animation-site-default
        "
        data-test="image-block-inline-outer-wrapper"
    >

      

      
        <figure
            class="
              sqs-block-image-figure
              intrinsic
            "
            style="max-width:300px;"
        >
          
        
        

        
          
            
          <div
              
              
              class="image-block-wrapper"
              data-animation-role="image"
              
  

          >
            <div class="sqs-image-shape-container-element
              
          
        
              has-aspect-ratio
            " style="
                position: relative;
                
                  padding-bottom:216.33334350585938%;
                
                overflow: hidden;-webkit-mask-image: -webkit-radial-gradient(white, black);
              "
              >
                
                  
                  
                  
                  
                  
                  
                  <img data-stretch="false" src="https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/1614482418563-OP8JXT2TS9NHT0RGYR1G/is_not_blank.png" data-image="https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/1614482418563-OP8JXT2TS9NHT0RGYR1G/is_not_blank.png" data-image-dimensions="300x649" data-image-focal-point="0.5,0.5" alt="is_not_blank.png" data-load="false" src="https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/1614482418563-OP8JXT2TS9NHT0RGYR1G/is_not_blank.png" width="300" height="649" alt="" sizes="100vw" style="display:block;object-fit: cover; width: 100%; height: 100%; object-position: 50% 50%" srcset="https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/1614482418563-OP8JXT2TS9NHT0RGYR1G/is_not_blank.png?format=100w 100w, https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/1614482418563-OP8JXT2TS9NHT0RGYR1G/is_not_blank.png?format=300w 300w, https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/1614482418563-OP8JXT2TS9NHT0RGYR1G/is_not_blank.png?format=500w 500w, https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/1614482418563-OP8JXT2TS9NHT0RGYR1G/is_not_blank.png?format=750w 750w, https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/1614482418563-OP8JXT2TS9NHT0RGYR1G/is_not_blank.png?format=1000w 1000w, https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/1614482418563-OP8JXT2TS9NHT0RGYR1G/is_not_blank.png?format=1500w 1500w, https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/1614482418563-OP8JXT2TS9NHT0RGYR1G/is_not_blank.png?format=2500w 2500w" loading="lazy" decoding="async" data-loader="sqs">
                
            </div>
          </div>
        
          
        

        
      
        </figure>
      

    </div>
  


  




<div class="sqs-html-content">
  <p class="" style="white-space:pre-wrap;">Cool cool. Next week we can get to the fun stuff. Actually adding the document scanner! Stay tuned. <a href="https://t.co/ybrkcoWDEe?amp=1">Sign up here</a> if you're interested in checking out the beta when it's ready :) And for any other comments, say hi to me on Twitter at <a href="https://twitter.com/wattmaller1">wattmaller1</a>.</p>
</div>]]></content:encoded>
      <excerpt:encoded />
      <wp:post_name>making-a-pdf-capture-app-part-2</wp:post_name>
      <wp:post_type>post</wp:post_type>
      <wp:post_id>16</wp:post_id>
      <wp:status>publish</wp:status>
      <pubDate>Wed, 10 Mar 2021 02:06:56 +0000</pubDate>
      <wp:post_date>2021-03-10 02:06:56</wp:post_date>
      <wp:post_date_gmt>2021-03-10 02:06:56</wp:post_date_gmt>
      <category domain="post_tag" nicename="pdftrapper"><![CDATA[PDFTrapper]]></category>
      <dc:creator>waller.matthew@gmail.com</dc:creator>
      <wp:comment_status>closed</wp:comment_status>
    </item>
    <item>
      <title>Making a PDF Capture App - Part 1</title>
      <link>/blog/making-a-pdf-capture-app-part-1</link>
      <content:encoded><![CDATA[<div class="sqs-html-content">
  <p class="" style="white-space:pre-wrap;">What I want to make is a simple PDF capture app. Lately with tax season, I'm uploading tons of docs, and I think I can offer something new.</p><p class="" style="white-space:pre-wrap;">PDF apps I've tried are often junky &amp; ad-ridden, or they are too nice for me &amp; with expensive subscriptions. I want to hit a sweet spot (or if I'm unlucky, a dead zone), with a single-purchase app that does just enough for a casual user. Like the Notes app’s PDF capture but more direct.</p><p class="" style="white-space:pre-wrap;">So, I've got a plan. We'll go with the flow of iOS and SwiftUI. Nothing terribly fancy, adjusting our designs to the direction of the APIs, and still get a lot out of it.</p><p class="" style="white-space:pre-wrap;">My first plan. Let's use DocumentGroup, new in iOS 14. So let's get started! First open Xcode and select "Create a new Xcode project"</p>
</div>













































  

    
  
    <div
        class="
          image-block-outer-wrapper
          layout-caption-below
          design-layout-inline
          combination-animation-site-default
          individual-animation-site-default
          individual-text-animation-site-default
        "
        data-test="image-block-inline-outer-wrapper"
    >

      

      
        <figure
            class="
              sqs-block-image-figure
              intrinsic
            "
            style="max-width:100%;"
        >
          
        
        

        
          
            
          <div
              
              
              class="image-block-wrapper"
              data-animation-role="image"
              
  

          >
            <div class="sqs-image-shape-container-element
              
          
        
              has-aspect-ratio
            " style="
                position: relative;
                
                  padding-bottom:93.85542297363281%;
                
                overflow: hidden;-webkit-mask-image: -webkit-radial-gradient(white, black);
              "
              >
                
                  
                  
                  
                  
                  
                  
                  <img data-stretch="true" src="https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/1614474939258-WZPLBXO55K0Q9AK7FP4B/create_project.jpg" data-image="https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/1614474939258-WZPLBXO55K0Q9AK7FP4B/create_project.jpg" data-image-dimensions="600x552" data-image-focal-point="0.5,0.5" alt="create_project.jpg" data-load="false" src="https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/1614474939258-WZPLBXO55K0Q9AK7FP4B/create_project.jpg" width="600" height="552" alt="" sizes="100vw" style="display:block;object-fit: cover; width: 100%; height: 100%; object-position: 50% 50%" srcset="https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/1614474939258-WZPLBXO55K0Q9AK7FP4B/create_project.jpg?format=100w 100w, https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/1614474939258-WZPLBXO55K0Q9AK7FP4B/create_project.jpg?format=300w 300w, https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/1614474939258-WZPLBXO55K0Q9AK7FP4B/create_project.jpg?format=500w 500w, https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/1614474939258-WZPLBXO55K0Q9AK7FP4B/create_project.jpg?format=750w 750w, https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/1614474939258-WZPLBXO55K0Q9AK7FP4B/create_project.jpg?format=1000w 1000w, https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/1614474939258-WZPLBXO55K0Q9AK7FP4B/create_project.jpg?format=1500w 1500w, https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/1614474939258-WZPLBXO55K0Q9AK7FP4B/create_project.jpg?format=2500w 2500w" loading="lazy" decoding="async" data-loader="sqs">
                
            </div>
          </div>
        
          
        

        
      
        </figure>
      

    </div>
  


  




<div class="sqs-html-content">
  <p class="" style="white-space:pre-wrap;">Now select iOS (no sense making a Mac app at the moment, since the most useful part of the app is PDF capture with a camera). And the choose "Document App"</p>
</div>













































  

    
  
    <div
        class="
          image-block-outer-wrapper
          layout-caption-below
          design-layout-inline
          combination-animation-site-default
          individual-animation-site-default
          individual-text-animation-site-default
        "
        data-test="image-block-inline-outer-wrapper"
    >

      

      
        <figure
            class="
              sqs-block-image-figure
              intrinsic
            "
            style="max-width:600px;"
        >
          
        
        

        
          
            
          <div
              
              
              class="image-block-wrapper"
              data-animation-role="image"
              
  

          >
            <div class="sqs-image-shape-container-element
              
          
        
              has-aspect-ratio
            " style="
                position: relative;
                
                  padding-bottom:70.5%;
                
                overflow: hidden;-webkit-mask-image: -webkit-radial-gradient(white, black);
              "
              >
                
                  
                  
                  
                  
                  
                  
                  <img data-stretch="false" src="https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/1614474953659-8WB2R65NOR5ZBZTNOS06/create_document_app.jpg" data-image="https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/1614474953659-8WB2R65NOR5ZBZTNOS06/create_document_app.jpg" data-image-dimensions="600x423" data-image-focal-point="0.5,0.5" alt="create_document_app.jpg" data-load="false" src="https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/1614474953659-8WB2R65NOR5ZBZTNOS06/create_document_app.jpg" width="600" height="423" alt="" sizes="100vw" style="display:block;object-fit: cover; width: 100%; height: 100%; object-position: 50% 50%" srcset="https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/1614474953659-8WB2R65NOR5ZBZTNOS06/create_document_app.jpg?format=100w 100w, https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/1614474953659-8WB2R65NOR5ZBZTNOS06/create_document_app.jpg?format=300w 300w, https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/1614474953659-8WB2R65NOR5ZBZTNOS06/create_document_app.jpg?format=500w 500w, https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/1614474953659-8WB2R65NOR5ZBZTNOS06/create_document_app.jpg?format=750w 750w, https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/1614474953659-8WB2R65NOR5ZBZTNOS06/create_document_app.jpg?format=1000w 1000w, https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/1614474953659-8WB2R65NOR5ZBZTNOS06/create_document_app.jpg?format=1500w 1500w, https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/1614474953659-8WB2R65NOR5ZBZTNOS06/create_document_app.jpg?format=2500w 2500w" loading="lazy" decoding="async" data-loader="sqs">
                
            </div>
          </div>
        
          
        

        
      
        </figure>
      

    </div>
  


  




<div class="sqs-html-content">
  <p class="" style="white-space:pre-wrap;">Now let's give it a name, I'll call mine PDFTrapper, and make sure that you have selected Interface SwiftUI and lifecycle SwiftUI App.</p>
</div>













































  

    
  
    <div
        class="
          image-block-outer-wrapper
          layout-caption-below
          design-layout-inline
          combination-animation-site-default
          individual-animation-site-default
          individual-text-animation-site-default
        "
        data-test="image-block-inline-outer-wrapper"
    >

      

      
        <figure
            class="
              sqs-block-image-figure
              intrinsic
            "
            style="max-width:600px;"
        >
          
        
        

        
          
            
          <div
              
              
              class="image-block-wrapper"
              data-animation-role="image"
              
  

          >
            <div class="sqs-image-shape-container-element
              
          
        
              has-aspect-ratio
            " style="
                position: relative;
                
                  padding-bottom:72%;
                
                overflow: hidden;-webkit-mask-image: -webkit-radial-gradient(white, black);
              "
              >
                
                  
                  
                  
                  
                  
                  
                  <img data-stretch="false" src="https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/1614475083065-TPMDRC9L6BMCJ61DZXA4/name_project.jpg" data-image="https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/1614475083065-TPMDRC9L6BMCJ61DZXA4/name_project.jpg" data-image-dimensions="600x432" data-image-focal-point="0.5,0.5" alt="name_project.jpg" data-load="false" src="https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/1614475083065-TPMDRC9L6BMCJ61DZXA4/name_project.jpg" width="600" height="432" alt="" sizes="100vw" style="display:block;object-fit: cover; width: 100%; height: 100%; object-position: 50% 50%" srcset="https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/1614475083065-TPMDRC9L6BMCJ61DZXA4/name_project.jpg?format=100w 100w, https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/1614475083065-TPMDRC9L6BMCJ61DZXA4/name_project.jpg?format=300w 300w, https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/1614475083065-TPMDRC9L6BMCJ61DZXA4/name_project.jpg?format=500w 500w, https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/1614475083065-TPMDRC9L6BMCJ61DZXA4/name_project.jpg?format=750w 750w, https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/1614475083065-TPMDRC9L6BMCJ61DZXA4/name_project.jpg?format=1000w 1000w, https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/1614475083065-TPMDRC9L6BMCJ61DZXA4/name_project.jpg?format=1500w 1500w, https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/1614475083065-TPMDRC9L6BMCJ61DZXA4/name_project.jpg?format=2500w 2500w" loading="lazy" decoding="async" data-loader="sqs">
                
            </div>
          </div>
        
          
        

        
      
        </figure>
      

    </div>
  


  




<div class="sqs-html-content">
  <p class="" style="white-space:pre-wrap;">Now let's see what we've got. I'll put all the code in one spot just for show and do some condensing, and we've got this.</p>
</div>













































  

    
  
    <div
        class="
          image-block-outer-wrapper
          layout-caption-below
          design-layout-inline
          combination-animation-site-default
          individual-animation-site-default
          individual-text-animation-site-default
        "
        data-test="image-block-inline-outer-wrapper"
    >

      

      
        <figure
            class="
              sqs-block-image-figure
              intrinsic
            "
            style="max-width:600px;"
        >
          
        
        

        
          
            
          <div
              
              
              class="image-block-wrapper"
              data-animation-role="image"
              
  

          >
            <div class="sqs-image-shape-container-element
              
          
        
              has-aspect-ratio
            " style="
                position: relative;
                
                  padding-bottom:92.33333587646484%;
                
                overflow: hidden;-webkit-mask-image: -webkit-radial-gradient(white, black);
              "
              >
                
                  
                  
                  
                  
                  
                  
                  <img data-stretch="false" src="https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/1614475128623-GII6RMMIVQSAROB464C8/condensed_code_start.jpg" data-image="https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/1614475128623-GII6RMMIVQSAROB464C8/condensed_code_start.jpg" data-image-dimensions="600x554" data-image-focal-point="0.5,0.5" alt="condensed_code_start.jpg" data-load="false" src="https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/1614475128623-GII6RMMIVQSAROB464C8/condensed_code_start.jpg" width="600" height="554" alt="" sizes="100vw" style="display:block;object-fit: cover; width: 100%; height: 100%; object-position: 50% 50%" srcset="https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/1614475128623-GII6RMMIVQSAROB464C8/condensed_code_start.jpg?format=100w 100w, https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/1614475128623-GII6RMMIVQSAROB464C8/condensed_code_start.jpg?format=300w 300w, https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/1614475128623-GII6RMMIVQSAROB464C8/condensed_code_start.jpg?format=500w 500w, https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/1614475128623-GII6RMMIVQSAROB464C8/condensed_code_start.jpg?format=750w 750w, https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/1614475128623-GII6RMMIVQSAROB464C8/condensed_code_start.jpg?format=1000w 1000w, https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/1614475128623-GII6RMMIVQSAROB464C8/condensed_code_start.jpg?format=1500w 1500w, https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/1614475128623-GII6RMMIVQSAROB464C8/condensed_code_start.jpg?format=2500w 2500w" loading="lazy" decoding="async" data-loader="sqs">
                
            </div>
          </div>
        
          
        

        
      
        </figure>
      

    </div>
  


  




<div class="sqs-html-content">
  <p class="" style="white-space:pre-wrap;">What this gives us is really incredible for under 50 lines of code. The features are:</p><ul data-rte-list="default"><li><p class="" style="white-space:pre-wrap;">Free file name changing</p></li><li><p class="" style="white-space:pre-wrap;">Free cloud saving, local saving and any device integrated saving (Google Drive, Box, etc.) </p></li><li><p class="" style="white-space:pre-wrap;">Free sharing</p></li><li><p class="" style="white-space:pre-wrap;">Free viewing as icons or list </p></li><li><p class="" style="white-space:pre-wrap;">Free deletion </p></li><li><p class="" style="white-space:pre-wrap;">Free duplication </p></li><li><p class="" style="white-space:pre-wrap;">Free ordering </p></li><li><p class="" style="white-space:pre-wrap;">Free metadata viewing</p></li><li><p class="" style="white-space:pre-wrap;">Free tagging </p></li><li><p class="" style="white-space:pre-wrap;">Free folder management </p></li><li><p class="" style="white-space:pre-wrap;">Free searching </p></li><li><p class="" style="white-space:pre-wrap;">Free recents tab </p></li><li><p class="" style="white-space:pre-wrap;">Free accessibility</p></li></ul>
</div>













































  

    
  
    <div
        class="
          image-block-outer-wrapper
          layout-caption-below
          design-layout-inline
          combination-animation-site-default
          individual-animation-site-default
          individual-text-animation-site-default
        "
        data-test="image-block-inline-outer-wrapper"
    >

      

      
        <figure
            class="
              sqs-block-image-figure
              intrinsic
            "
            style="max-width:300px;"
        >
          
        
        

        
          
            
          <div
              
              
              class="image-block-wrapper"
              data-animation-role="image"
              
  

          >
            <div class="sqs-image-shape-container-element
              
          
        
              has-aspect-ratio
            " style="
                position: relative;
                
                  padding-bottom:216.6666717529297%;
                
                overflow: hidden;-webkit-mask-image: -webkit-radial-gradient(white, black);
              "
              >
                
                  
                  
                  
                  
                  
                  
                  <img data-stretch="false" src="https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/1614475385713-UY8T4NBVPXNZ8PQLLOHK/create_screen_1_of_2.jpg" data-image="https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/1614475385713-UY8T4NBVPXNZ8PQLLOHK/create_screen_1_of_2.jpg" data-image-dimensions="300x650" data-image-focal-point="0.5,0.5" alt="create_screen_1_of_2.jpg" data-load="false" src="https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/1614475385713-UY8T4NBVPXNZ8PQLLOHK/create_screen_1_of_2.jpg" width="300" height="650" alt="" sizes="100vw" style="display:block;object-fit: cover; width: 100%; height: 100%; object-position: 50% 50%" srcset="https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/1614475385713-UY8T4NBVPXNZ8PQLLOHK/create_screen_1_of_2.jpg?format=100w 100w, https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/1614475385713-UY8T4NBVPXNZ8PQLLOHK/create_screen_1_of_2.jpg?format=300w 300w, https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/1614475385713-UY8T4NBVPXNZ8PQLLOHK/create_screen_1_of_2.jpg?format=500w 500w, https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/1614475385713-UY8T4NBVPXNZ8PQLLOHK/create_screen_1_of_2.jpg?format=750w 750w, https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/1614475385713-UY8T4NBVPXNZ8PQLLOHK/create_screen_1_of_2.jpg?format=1000w 1000w, https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/1614475385713-UY8T4NBVPXNZ8PQLLOHK/create_screen_1_of_2.jpg?format=1500w 1500w, https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/1614475385713-UY8T4NBVPXNZ8PQLLOHK/create_screen_1_of_2.jpg?format=2500w 2500w" loading="lazy" decoding="async" data-loader="sqs">
                
            </div>
          </div>
        
          
        

        
      
        </figure>
      

    </div>
  


  












































  

    
  
    <div
        class="
          image-block-outer-wrapper
          layout-caption-below
          design-layout-inline
          combination-animation-site-default
          individual-animation-site-default
          individual-text-animation-site-default
        "
        data-test="image-block-inline-outer-wrapper"
    >

      

      
        <figure
            class="
              sqs-block-image-figure
              intrinsic
            "
            style="max-width:300px;"
        >
          
        
        

        
          
            
          <div
              
              
              class="image-block-wrapper"
              data-animation-role="image"
              
  

          >
            <div class="sqs-image-shape-container-element
              
          
        
              has-aspect-ratio
            " style="
                position: relative;
                
                  padding-bottom:216.6666717529297%;
                
                overflow: hidden;-webkit-mask-image: -webkit-radial-gradient(white, black);
              "
              >
                
                  
                  
                  
                  
                  
                  
                  <img data-stretch="false" src="https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/1614475562012-LIDHGLDKNHG8SET7L3CU/create_screen_2_of_2.jpg" data-image="https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/1614475562012-LIDHGLDKNHG8SET7L3CU/create_screen_2_of_2.jpg" data-image-dimensions="300x650" data-image-focal-point="0.5,0.5" alt="create_screen_2_of_2.jpg" data-load="false" src="https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/1614475562012-LIDHGLDKNHG8SET7L3CU/create_screen_2_of_2.jpg" width="300" height="650" alt="" sizes="100vw" style="display:block;object-fit: cover; width: 100%; height: 100%; object-position: 50% 50%" srcset="https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/1614475562012-LIDHGLDKNHG8SET7L3CU/create_screen_2_of_2.jpg?format=100w 100w, https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/1614475562012-LIDHGLDKNHG8SET7L3CU/create_screen_2_of_2.jpg?format=300w 300w, https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/1614475562012-LIDHGLDKNHG8SET7L3CU/create_screen_2_of_2.jpg?format=500w 500w, https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/1614475562012-LIDHGLDKNHG8SET7L3CU/create_screen_2_of_2.jpg?format=750w 750w, https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/1614475562012-LIDHGLDKNHG8SET7L3CU/create_screen_2_of_2.jpg?format=1000w 1000w, https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/1614475562012-LIDHGLDKNHG8SET7L3CU/create_screen_2_of_2.jpg?format=1500w 1500w, https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/1614475562012-LIDHGLDKNHG8SET7L3CU/create_screen_2_of_2.jpg?format=2500w 2500w" loading="lazy" decoding="async" data-loader="sqs">
                
            </div>
          </div>
        
          
        

        
      
        </figure>
      

    </div>
  


  




<div class="sqs-html-content">
  <p class="" style="white-space:pre-wrap;">All of this comes with tradeoffs though. There isn't much of a way at all to change the appearance. What you see is what you get. What we're making is a simple utility app though. So this approach is great for us.</p><p class="" style="white-space:pre-wrap;">At the moment though, this is a plan text editor. We just made a mini notes app with a lot of nice features! Now let's start making it our PDFTrapper app. Now my document looks like this, using PDFKit to replace the text with a PDF and handle the saving and reading</p>
</div>













































  

    
  
    <div
        class="
          image-block-outer-wrapper
          layout-caption-below
          design-layout-inline
          combination-animation-site-default
          individual-animation-site-default
          individual-text-animation-site-default
        "
        data-test="image-block-inline-outer-wrapper"
    >

      

      
        <figure
            class="
              sqs-block-image-figure
              intrinsic
            "
            style="max-width:600px;"
        >
          
        
        

        
          
            
          <div
              
              
              class="image-block-wrapper"
              data-animation-role="image"
              
  

          >
            <div class="sqs-image-shape-container-element
              
          
        
              has-aspect-ratio
            " style="
                position: relative;
                
                  padding-bottom:84.83333587646484%;
                
                overflow: hidden;-webkit-mask-image: -webkit-radial-gradient(white, black);
              "
              >
                
                  
                  
                  
                  
                  
                  
                  <img data-stretch="false" src="https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/1614475658265-RF2UQOIPAEANH8CUCOTM/new_pdf_document.jpg" data-image="https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/1614475658265-RF2UQOIPAEANH8CUCOTM/new_pdf_document.jpg" data-image-dimensions="600x509" data-image-focal-point="0.5,0.5" alt="new_pdf_document.jpg" data-load="false" src="https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/1614475658265-RF2UQOIPAEANH8CUCOTM/new_pdf_document.jpg" width="600" height="509" alt="" sizes="100vw" style="display:block;object-fit: cover; width: 100%; height: 100%; object-position: 50% 50%" srcset="https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/1614475658265-RF2UQOIPAEANH8CUCOTM/new_pdf_document.jpg?format=100w 100w, https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/1614475658265-RF2UQOIPAEANH8CUCOTM/new_pdf_document.jpg?format=300w 300w, https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/1614475658265-RF2UQOIPAEANH8CUCOTM/new_pdf_document.jpg?format=500w 500w, https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/1614475658265-RF2UQOIPAEANH8CUCOTM/new_pdf_document.jpg?format=750w 750w, https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/1614475658265-RF2UQOIPAEANH8CUCOTM/new_pdf_document.jpg?format=1000w 1000w, https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/1614475658265-RF2UQOIPAEANH8CUCOTM/new_pdf_document.jpg?format=1500w 1500w, https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/1614475658265-RF2UQOIPAEANH8CUCOTM/new_pdf_document.jpg?format=2500w 2500w" loading="lazy" decoding="async" data-loader="sqs">
                
            </div>
          </div>
        
          
        

        
      
        </figure>
      

    </div>
  


  




<div class="sqs-html-content">
  <p class="" style="white-space:pre-wrap;">So this is good, but we still need a way to display the PDF. To do that, I'll simply add a file to wrap PDFView and use it in my ContentView, like this:</p>
</div>













































  

    
  
    <div
        class="
          image-block-outer-wrapper
          layout-caption-below
          design-layout-inline
          combination-animation-site-default
          individual-animation-site-default
          individual-text-animation-site-default
        "
        data-test="image-block-inline-outer-wrapper"
    >

      

      
        <figure
            class="
              sqs-block-image-figure
              intrinsic
            "
            style="max-width:600px;"
        >
          
        
        

        
          
            
          <div
              
              
              class="image-block-wrapper"
              data-animation-role="image"
              
  

          >
            <div class="sqs-image-shape-container-element
              
          
        
              has-aspect-ratio
            " style="
                position: relative;
                
                  padding-bottom:74.66666412353516%;
                
                overflow: hidden;-webkit-mask-image: -webkit-radial-gradient(white, black);
              "
              >
                
                  
                  
                  
                  
                  
                  
                  <img data-stretch="false" src="https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/1614475698424-QSZD5YX6DWYQVOX8474M/pdf_display_view.jpg" data-image="https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/1614475698424-QSZD5YX6DWYQVOX8474M/pdf_display_view.jpg" data-image-dimensions="600x448" data-image-focal-point="0.5,0.5" alt="pdf_display_view.jpg" data-load="false" src="https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/1614475698424-QSZD5YX6DWYQVOX8474M/pdf_display_view.jpg" width="600" height="448" alt="" sizes="100vw" style="display:block;object-fit: cover; width: 100%; height: 100%; object-position: 50% 50%" srcset="https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/1614475698424-QSZD5YX6DWYQVOX8474M/pdf_display_view.jpg?format=100w 100w, https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/1614475698424-QSZD5YX6DWYQVOX8474M/pdf_display_view.jpg?format=300w 300w, https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/1614475698424-QSZD5YX6DWYQVOX8474M/pdf_display_view.jpg?format=500w 500w, https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/1614475698424-QSZD5YX6DWYQVOX8474M/pdf_display_view.jpg?format=750w 750w, https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/1614475698424-QSZD5YX6DWYQVOX8474M/pdf_display_view.jpg?format=1000w 1000w, https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/1614475698424-QSZD5YX6DWYQVOX8474M/pdf_display_view.jpg?format=1500w 1500w, https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/1614475698424-QSZD5YX6DWYQVOX8474M/pdf_display_view.jpg?format=2500w 2500w" loading="lazy" decoding="async" data-loader="sqs">
                
            </div>
          </div>
        
          
        

        
      
        </figure>
      

    </div>
  


  












































  

    
  
    <div
        class="
          image-block-outer-wrapper
          layout-caption-below
          design-layout-inline
          combination-animation-site-default
          individual-animation-site-default
          individual-text-animation-site-default
        "
        data-test="image-block-inline-outer-wrapper"
    >

      

      
        <figure
            class="
              sqs-block-image-figure
              intrinsic
            "
            style="max-width:600px;"
        >
          
        
        

        
          
            
          <div
              
              
              class="image-block-wrapper"
              data-animation-role="image"
              
  

          >
            <div class="sqs-image-shape-container-element
              
          
        
              has-aspect-ratio
            " style="
                position: relative;
                
                  padding-bottom:70.66666412353516%;
                
                overflow: hidden;-webkit-mask-image: -webkit-radial-gradient(white, black);
              "
              >
                
                  
                  
                  
                  
                  
                  
                  <img data-stretch="false" src="https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/1614475719333-04RCJAGNEWACS80KBEKG/new_content_view.jpg" data-image="https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/1614475719333-04RCJAGNEWACS80KBEKG/new_content_view.jpg" data-image-dimensions="600x424" data-image-focal-point="0.5,0.5" alt="new_content_view.jpg" data-load="false" src="https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/1614475719333-04RCJAGNEWACS80KBEKG/new_content_view.jpg" width="600" height="424" alt="" sizes="100vw" style="display:block;object-fit: cover; width: 100%; height: 100%; object-position: 50% 50%" srcset="https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/1614475719333-04RCJAGNEWACS80KBEKG/new_content_view.jpg?format=100w 100w, https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/1614475719333-04RCJAGNEWACS80KBEKG/new_content_view.jpg?format=300w 300w, https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/1614475719333-04RCJAGNEWACS80KBEKG/new_content_view.jpg?format=500w 500w, https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/1614475719333-04RCJAGNEWACS80KBEKG/new_content_view.jpg?format=750w 750w, https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/1614475719333-04RCJAGNEWACS80KBEKG/new_content_view.jpg?format=1000w 1000w, https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/1614475719333-04RCJAGNEWACS80KBEKG/new_content_view.jpg?format=1500w 1500w, https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/1614475719333-04RCJAGNEWACS80KBEKG/new_content_view.jpg?format=2500w 2500w" loading="lazy" decoding="async" data-loader="sqs">
                
            </div>
          </div>
        
          
        

        
      
        </figure>
      

    </div>
  


  




<div class="sqs-html-content">
  <p class="" style="white-space:pre-wrap;">Now we've created a blank PDF. Let's edited a little just as a sanity check, with a quick and dirty edit in the onAppear, and we get the annotation!</p>
</div>













































  

    
  
    <div
        class="
          image-block-outer-wrapper
          layout-caption-below
          design-layout-inline
          combination-animation-site-default
          individual-animation-site-default
          individual-text-animation-site-default
        "
        data-test="image-block-inline-outer-wrapper"
    >

      

      
        <figure
            class="
              sqs-block-image-figure
              intrinsic
            "
            style="max-width:600px;"
        >
          
        
        

        
          
            
          <div
              
              
              class="image-block-wrapper"
              data-animation-role="image"
              
  

          >
            <div class="sqs-image-shape-container-element
              
          
        
              has-aspect-ratio
            " style="
                position: relative;
                
                  padding-bottom:49%;
                
                overflow: hidden;-webkit-mask-image: -webkit-radial-gradient(white, black);
              "
              >
                
                  
                  
                  
                  
                  
                  
                  <img data-stretch="false" src="https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/1614475750890-M3GU9X2LLJUIH4ELIV6E/edit_pdf_on_appear.jpg" data-image="https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/1614475750890-M3GU9X2LLJUIH4ELIV6E/edit_pdf_on_appear.jpg" data-image-dimensions="600x294" data-image-focal-point="0.5,0.5" alt="edit_pdf_on_appear.jpg" data-load="false" src="https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/1614475750890-M3GU9X2LLJUIH4ELIV6E/edit_pdf_on_appear.jpg" width="600" height="294" alt="" sizes="100vw" style="display:block;object-fit: cover; width: 100%; height: 100%; object-position: 50% 50%" srcset="https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/1614475750890-M3GU9X2LLJUIH4ELIV6E/edit_pdf_on_appear.jpg?format=100w 100w, https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/1614475750890-M3GU9X2LLJUIH4ELIV6E/edit_pdf_on_appear.jpg?format=300w 300w, https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/1614475750890-M3GU9X2LLJUIH4ELIV6E/edit_pdf_on_appear.jpg?format=500w 500w, https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/1614475750890-M3GU9X2LLJUIH4ELIV6E/edit_pdf_on_appear.jpg?format=750w 750w, https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/1614475750890-M3GU9X2LLJUIH4ELIV6E/edit_pdf_on_appear.jpg?format=1000w 1000w, https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/1614475750890-M3GU9X2LLJUIH4ELIV6E/edit_pdf_on_appear.jpg?format=1500w 1500w, https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/1614475750890-M3GU9X2LLJUIH4ELIV6E/edit_pdf_on_appear.jpg?format=2500w 2500w" loading="lazy" decoding="async" data-loader="sqs">
                
            </div>
          </div>
        
          
        

        
      
        </figure>
      

    </div>
  


  












































  

    
  
    <div
        class="
          image-block-outer-wrapper
          layout-caption-below
          design-layout-inline
          combination-animation-site-default
          individual-animation-site-default
          individual-text-animation-site-default
        "
        data-test="image-block-inline-outer-wrapper"
    >

      

      
        <figure
            class="
              sqs-block-image-figure
              intrinsic
            "
            style="max-width:600px;"
        >
          
        
        

        
          
            
          <div
              
              
              class="image-block-wrapper"
              data-animation-role="image"
              
  

          >
            <div class="sqs-image-shape-container-element
              
          
        
              has-aspect-ratio
            " style="
                position: relative;
                
                  padding-bottom:216.16665649414062%;
                
                overflow: hidden;-webkit-mask-image: -webkit-radial-gradient(white, black);
              "
              >
                
                  
                  
                  
                  
                  
                  
                  <img data-stretch="false" src="https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/1614475807121-QZ0ZIEF8CQ9KVX1CROV4/edited_pdf.jpg" data-image="https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/1614475807121-QZ0ZIEF8CQ9KVX1CROV4/edited_pdf.jpg" data-image-dimensions="600x1297" data-image-focal-point="0.5,0.5" alt="edited_pdf.jpg" data-load="false" src="https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/1614475807121-QZ0ZIEF8CQ9KVX1CROV4/edited_pdf.jpg" width="600" height="1297" alt="" sizes="100vw" style="display:block;object-fit: cover; width: 100%; height: 100%; object-position: 50% 50%" srcset="https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/1614475807121-QZ0ZIEF8CQ9KVX1CROV4/edited_pdf.jpg?format=100w 100w, https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/1614475807121-QZ0ZIEF8CQ9KVX1CROV4/edited_pdf.jpg?format=300w 300w, https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/1614475807121-QZ0ZIEF8CQ9KVX1CROV4/edited_pdf.jpg?format=500w 500w, https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/1614475807121-QZ0ZIEF8CQ9KVX1CROV4/edited_pdf.jpg?format=750w 750w, https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/1614475807121-QZ0ZIEF8CQ9KVX1CROV4/edited_pdf.jpg?format=1000w 1000w, https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/1614475807121-QZ0ZIEF8CQ9KVX1CROV4/edited_pdf.jpg?format=1500w 1500w, https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/1614475807121-QZ0ZIEF8CQ9KVX1CROV4/edited_pdf.jpg?format=2500w 2500w" loading="lazy" decoding="async" data-loader="sqs">
                
            </div>
          </div>
        
          
        

        
      
        </figure>
      

    </div>
  


  




<div class="sqs-html-content">
  <p class="" style="white-space:pre-wrap;">There is something wrong though. Anyone want to guess what it is? Tune in for part two! <a href="https://t.co/ybrkcoWDEe?amp=1">Sign up here</a> if you're interested in checking out the beta when it's ready :) And for any other comments, <a href="https://twitter.com/wattmaller1">say hi to me on Twitter</a>.</p>
</div>]]></content:encoded>
      <excerpt:encoded />
      <wp:post_name>making-a-pdf-capture-app-part-1</wp:post_name>
      <wp:post_type>post</wp:post_type>
      <wp:post_id>17</wp:post_id>
      <wp:status>publish</wp:status>
      <pubDate>Sun, 28 Feb 2021 01:32:26 +0000</pubDate>
      <wp:post_date>2021-02-28 01:32:26</wp:post_date>
      <wp:post_date_gmt>2021-02-28 01:32:26</wp:post_date_gmt>
      <category domain="post_tag" nicename="pdftrapper"><![CDATA[PDFTrapper]]></category>
      <dc:creator>waller.matthew@gmail.com</dc:creator>
      <wp:comment_status>closed</wp:comment_status>
    </item>
    <item>
      <title>Let’s get started</title>
      <link>/blog/lets-get-started</link>
      <content:encoded><![CDATA[<div class="sqs-html-content">
  <p class="" style="white-space:pre-wrap;">Here we go :)</p>
</div>]]></content:encoded>
      <excerpt:encoded />
      <wp:post_name>lets-get-started</wp:post_name>
      <wp:post_type>post</wp:post_type>
      <wp:post_id>18</wp:post_id>
      <wp:status>publish</wp:status>
      <pubDate>Fri, 08 Jan 2021 14:46:19 +0000</pubDate>
      <wp:post_date>2021-01-08 14:46:19</wp:post_date>
      <wp:post_date_gmt>2021-01-08 14:46:19</wp:post_date_gmt>
      <dc:creator>waller.matthew@gmail.com</dc:creator>
      <wp:comment_status>closed</wp:comment_status>
    </item>
    <item>
      <link>/contact</link>
      <title>Contact</title>
      <pubDate>Tue, 06 Jul 2021 17:09:04 +0000</pubDate>
      <content:encoded><![CDATA[<article class="sections" id="sections" data-page-sections="5ff8704c2e7b424c2aaec196">
  
  
    
    


  


<section
  data-test="page-section"
  
  data-section-theme=""
  class='page-section 
    
      layout-engine-section
    
    background-width--full-bleed
    
      section-height--small
    
    
      content-width--wide
    
    horizontal-alignment--left
    vertical-alignment--middle
    
      
    
    
    '
  
  data-section-id="5ff8704c2e7b424c2aaec199"
  
  data-controller="SectionWrapperController"
  data-current-styles="{
  &quot;imageOverlayOpacity&quot;: 0.15,
  &quot;backgroundWidth&quot;: &quot;background-width--full-bleed&quot;,
  &quot;sectionHeight&quot;: &quot;section-height--small&quot;,
  &quot;customSectionHeight&quot;: 0,
  &quot;horizontalAlignment&quot;: &quot;horizontal-alignment--left&quot;,
  &quot;verticalAlignment&quot;: &quot;vertical-alignment--middle&quot;,
  &quot;contentWidth&quot;: &quot;content-width--wide&quot;,
  &quot;customContentWidth&quot;: 50,
  &quot;sectionTheme&quot;: &quot;&quot;,
  &quot;sectionAnimation&quot;: &quot;none&quot;,
  &quot;backgroundMode&quot;: &quot;image&quot;
}"
  data-current-context="{
  &quot;video&quot;: {
    &quot;playbackSpeed&quot;: 0.5,
    &quot;filter&quot;: 1,
    &quot;filterStrength&quot;: 0,
    &quot;zoom&quot;: 0,
    &quot;videoSourceProvider&quot;: &quot;none&quot;
  },
  &quot;backgroundImageId&quot;: null,
  &quot;backgroundMediaEffect&quot;: null,
  &quot;divider&quot;: null,
  &quot;typeName&quot;: null
}"
  data-animation="none"
  
   
  
  
>
  <div
    class="section-border" 
    
  >
    <div class="section-background">
    
      
    
    </div>
  </div>
  <div
    class='content-wrapper'
    style='
      
        
      
    '
  >
    <div
      class="content"
      
    >
      
      
      
      
      
      
      <div class="sqs-layout sqs-grid-12 columns-12" data-type="page-section" id="page-section-5ff8704c2e7b424c2aaec199"><div class="row sqs-row"><div class="col sqs-col-12 span-12"><div class="row sqs-row"><div class="col sqs-col-8 span-8"><div class="sqs-block image-block sqs-block-image" data-block-type="5" id="block-yui_3_17_2_1_1614476149492_8678"><div class="sqs-block-content">









































  

    

      <figure
          class="
            sqs-block-image-figure
            image-block-outer-wrapper
            image-block-v2
            design-layout-card
            combination-animation-site-default
            individual-animation-site-default
            individual-text-animation-site-default
            image-position-left
            
          "
          data-scrolled
          data-test="image-block-v2-outer-wrapper"
      >

        <div class="intrinsic">
          
            <div
          
              class="
                
                image-inset"
              data-animation-role="image"
              data-description=""
              
  

          >
            <div class="sqs-image-shape-container-element
              
                content-fit
              
            " style="
              position: relative;
              overflow: hidden;-webkit-mask-image: -webkit-radial-gradient(white, black);
              
            ">
              
                
                
                
                
                
                
                <img data-stretch="false" src="https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/1614476284457-0DOL8ZDU3F905X4Z8MXO/Profile_Generic.png" data-image="https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/1614476284457-0DOL8ZDU3F905X4Z8MXO/Profile_Generic.png" data-image-dimensions="386x384" data-image-focal-point="0.5,0.5" alt="Profile_Generic.png" data-load="false" src="https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/1614476284457-0DOL8ZDU3F905X4Z8MXO/Profile_Generic.png" width="386" height="384" alt="" sizes="(max-width: 768px) 66.66666666666666vw, 66.66666666666666vw" style="display:block;object-fit: contain;" srcset="https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/1614476284457-0DOL8ZDU3F905X4Z8MXO/Profile_Generic.png?format=100w 100w, https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/1614476284457-0DOL8ZDU3F905X4Z8MXO/Profile_Generic.png?format=300w 300w, https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/1614476284457-0DOL8ZDU3F905X4Z8MXO/Profile_Generic.png?format=500w 500w, https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/1614476284457-0DOL8ZDU3F905X4Z8MXO/Profile_Generic.png?format=750w 750w, https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/1614476284457-0DOL8ZDU3F905X4Z8MXO/Profile_Generic.png?format=1000w 1000w, https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/1614476284457-0DOL8ZDU3F905X4Z8MXO/Profile_Generic.png?format=1500w 1500w, https://images.squarespace-cdn.com/content/v1/5ff86ecddd4cdc650b260a12/1614476284457-0DOL8ZDU3F905X4Z8MXO/Profile_Generic.png?format=2500w 2500w" loading="lazy" decoding="async" data-loader="sqs">
              
              <div class="image-overlay" style="overflow: hidden;-webkit-mask-image: -webkit-radial-gradient(white, black);"></div>
            </div>
          
            </div>
          

        </div>

        
          
          <figcaption class="image-card-wrapper" data-width-ratio>
            <div class="image-card sqs-dynamic-text-container">

              
                <div class="image-title-wrapper"><div class="image-title sqs-dynamic-text"
                
  
><h4 style="white-space:pre-wrap;">Hello there!</h4></div></div>
              

              
                <div class="image-subtitle-wrapper"><div class="image-subtitle sqs-dynamic-text"
                
  
><p class="sqsrte-small" style="white-space:pre-wrap;">I’m Matt Waller, the owner of this venture. We aim to empower and delight with the highest quality software.</p></div></div>
              

              

            </div>
          </figcaption>
        

      </figure>

    

  


</div></div></div><div class="col sqs-col-1 span-1"><div class="sqs-block spacer-block sqs-block-spacer sized vsize-1" data-block-type="21" id="block-b985740034ac558a52be"><div class="sqs-block-content">&nbsp;</div></div></div><div class="col sqs-col-3 span-3"><div class="sqs-block html-block sqs-block-html" data-block-type="2" id="block-86d113fc951d2ba80001"><div class="sqs-block-content">

<div class="sqs-html-content">
  <p class="" style="white-space:pre-wrap;">Contact</p><p class="" style="white-space:pre-wrap;">hello@cephalopod.studio</p>
</div>



</div></div></div></div></div></div></div>
    </div>
  
  </div>
  
</section>

  
</article>]]></content:encoded>
      <wp:post_name>contact</wp:post_name>
      <wp:post_type>page</wp:post_type>
      <wp:post_id>19</wp:post_id>
      <wp:status>publish</wp:status>
    </item>
    <item>
      <link>/pearl-terms-and-conditions</link>
      <title>Pearl Terms and Conditions</title>
      <pubDate>Thu, 20 Jan 2022 02:43:24 +0000</pubDate>
      <content:encoded><![CDATA[<article class="sections" id="sections" data-page-sections="61e8cbd45235425d5bfa7839">
  
  
    
    


  


<section
  data-test="page-section"
  
  data-section-theme=""
  class='page-section 
    
      layout-engine-section
    
    background-width--full-bleed
    
      section-height--medium
    
    
      content-width--wide
    
    horizontal-alignment--center
    vertical-alignment--middle
    
      
    
    
    '
  
  data-section-id="61e8cc2ad20f59788cf52314"
  
  data-controller="SectionWrapperController"
  data-current-styles="{
  &quot;imageOverlayOpacity&quot;: 0.15,
  &quot;backgroundWidth&quot;: &quot;background-width--full-bleed&quot;,
  &quot;sectionHeight&quot;: &quot;section-height--medium&quot;,
  &quot;customSectionHeight&quot;: 10,
  &quot;horizontalAlignment&quot;: &quot;horizontal-alignment--center&quot;,
  &quot;verticalAlignment&quot;: &quot;vertical-alignment--middle&quot;,
  &quot;contentWidth&quot;: &quot;content-width--wide&quot;,
  &quot;customContentWidth&quot;: 50,
  &quot;backgroundColor&quot;: &quot;&quot;,
  &quot;sectionTheme&quot;: &quot;&quot;,
  &quot;sectionAnimation&quot;: &quot;none&quot;,
  &quot;backgroundMode&quot;: &quot;image&quot;
}"
  data-current-context="{
  &quot;video&quot;: {
    &quot;filterStrength&quot;: 0,
    &quot;zoom&quot;: 0,
    &quot;videoSourceProvider&quot;: &quot;none&quot;
  },
  &quot;backgroundImageId&quot;: null,
  &quot;backgroundMediaEffect&quot;: null,
  &quot;divider&quot;: null,
  &quot;typeName&quot;: null
}"
  data-animation="none"
  
   
  
    
  
  
>
  <div
    class="section-border" 
    
  >
    <div class="section-background">
    
      
    
    </div>
  </div>
  <div
    class='content-wrapper'
    style='
      
        
      
    '
  >
    <div
      class="content"
      
    >
      
      
      
      
      
      
      <div class="sqs-layout sqs-grid-12 columns-12" data-type="page-section" id="page-section-61e8cc2ad20f59788cf52314"><div class="row sqs-row"><div class="col sqs-col-12 span-12"><div class="sqs-block code-block sqs-block-code" data-block-type="23" id="block-yui_3_17_2_1_1642646565061_2920"><div class="sqs-block-content"><style>
  [data-custom-class='body'], [data-custom-class='body'] * {
          background: transparent !important;
        }
[data-custom-class='title'], [data-custom-class='title'] * {
          font-family: Arial !important;
font-size: 26px !important;
color: #000000 !important;
        }
[data-custom-class='subtitle'], [data-custom-class='subtitle'] * {
          font-family: Arial !important;
color: #595959 !important;
font-size: 14px !important;
        }
[data-custom-class='heading_1'], [data-custom-class='heading_1'] * {
          font-family: Arial !important;
font-size: 19px !important;
color: #000000 !important;
        }
[data-custom-class='heading_2'], [data-custom-class='heading_2'] * {
          font-family: Arial !important;
font-size: 17px !important;
color: #000000 !important;
        }
[data-custom-class='body_text'], [data-custom-class='body_text'] * {
          color: #595959 !important;
font-size: 14px !important;
font-family: Arial !important;
        }
[data-custom-class='link'], [data-custom-class='link'] * {
          color: #3030F1 !important;
font-size: 14px !important;
font-family: Arial !important;
word-break: break-word !important;
        }
</style>

      <div data-custom-class="body">
      <div align="center" style="text-align: left;"><div align="center" class="MsoNormal" style="text-align: left; line-height: 150%;"><div align="center" class="MsoNormal" style="text-align:center;line-height:150%;"><a name="_2cipo4yr3w5d"></a><div align="center" class="MsoNormal" style="line-height: 22.5px;"><div align="center" class="MsoNormal" style="line-height: 150%;"><a name="_gm5sejt4p02f"></a><div align="center" class="MsoNormal" data-custom-class="title" style="text-align: left; line-height: 1.5;"><strong><span style="line-height: 22.5px; font-size: 26px;">Pearl: Wellness Reminders Terms and Conditions</span></strong></div><div align="center" class="MsoNormal" style="line-height: 22.5px; text-align: left;"><a name="_7m5b3xg56u7y"></a></div></div></div><div align="center" class="MsoNormal" style="line-height: 17.25px; text-align: left;"><br></div><div align="center" class="MsoNormal" style="line-height: 17.25px; text-align: left;"><span style="font-size: 11pt; line-height: 16.8667px;"><strong><span data-custom-class="body_text"><span style="color: rgb(89, 89, 89);">Last updated</span> </span></strong><bdt class="question"><strong><span data-custom-class="body_text">January 19, 2022</span></strong></bdt></span></div><div align="center" class="MsoNormal" style="line-height: 17.25px; text-align: left;"><br></div><div align="center" class="MsoNormal" style="line-height: 17.25px; text-align: left;"><span style="font-size: 11pt; line-height: 16.8667px;"><br></span></div></div></div><div align="center" class="MsoNormal" style="text-align: left; line-height: 150%;"><br></div><div align="center" class="MsoNormal" style="text-align: left; line-height: 150%;"><div class="MsoNormal" data-custom-class="heading_1" style="line-height: 115%;"><a name="_a7mwfgcrtsqn"></a></div><div class="MsoNormal" data-custom-class="body_text" style="line-height: 1.5;"><span style="font-size:11.0pt;line-height:115%;
Arial;mso-fareast-font-family:Calibri;color:#595959;mso-themecolor:text1;
mso-themetint:166;"><bdt class="question">Pearl: Wellness Reminders</bdt> is licensed to You (End-User) by <bdt class="question">Cephalopod Studio LLC</bdt>, located<bdt class="block-component"></bdt> and registered<bdt class="statement-end-if-in-editor"></bdt> at <bdt class="question">5900 Balcones Drive, Suite 100</bdt>,<span style="font-size:11.0pt;line-height:115%;
Arial;mso-fareast-font-family:Calibri;color:#595959;mso-themecolor:text1;
mso-themetint:166;"><bdt class="block-component"></bdt> <bdt class="question">Austin</bdt>, <bdt class="block-component"></bdt><bdt class="question">Texas</bdt><bdt class="block-component"></bdt> <bdt class="question">78731</bdt><span style="font-size: 15px;"><bdt class="block-component"></bdt><bdt class="block-component"></bdt>, <bdt class="question">United States</bdt><bdt class="statement-end-if-in-editor"></bdt><bdt class="block-component"></bdt></span></span> (hereinafter: Licensor), for use only under the terms of this License Agreement.<bdt class="block-component"></bdt></bdt></span></bdt></span></span></span></span></span></span></span><span style="font-size: 15px; line-height: 115%; font-family: Arial; color: rgb(89, 89, 89);"><span style="font-size:11.0pt;line-height:115%;
Arial;mso-fareast-font-family:Calibri;color:#595959;mso-themecolor:text1;
mso-themetint:166;"><span style="font-size:11.0pt;line-height:115%;
Arial;mso-fareast-font-family:Calibri;color:#595959;mso-themecolor:text1;
mso-themetint:166;"><span style="font-size:11.0pt;line-height:115%;
Arial;mso-fareast-font-family:Calibri;color:#595959;mso-themecolor:text1;
mso-themetint:166;"><span style="font-size:11.0pt;line-height:115%;
Arial;mso-fareast-font-family:Calibri;color:#595959;mso-themecolor:text1;
mso-themetint:166;"><span style="font-size:11.0pt;line-height:115%;
Arial;mso-fareast-font-family:Calibri;color:#595959;mso-themecolor:text1;
mso-themetint:166;"><bdt class="block-component"></bdt></span></span></span></span></span></span> </span></div></div><div align="center" class="MsoNormal" style="text-align: left; line-height: 1;"><br></div><div align="center" class="MsoNormal" style="text-align: left; line-height: 150%;"><div class="MsoNormal" data-custom-class="body_text" style="line-height: 1.5;"><span style="font-size:11.0pt;line-height:115%;
Arial;mso-fareast-font-family:Calibri;color:#595959;mso-themecolor:text1;
mso-themetint:166;">By downloading the Application from the Apple AppStore, and any update thereto (as permitted by this License Agreement), You indicate that You agree to be bound by all of the terms and conditions of this License Agreement, and that You accept this License Agreement.</span></div></div><div align="center" class="MsoNormal" style="text-align: left; line-height: 1;"><br></div><div align="center" class="MsoNormal" style="text-align: left; line-height: 150%;"><div class="MsoNormal" data-custom-class="body_text" style="line-height: 1.5;"><span style="font-size:11.0pt;line-height:115%;
Arial;mso-fareast-font-family:Calibri;color:#595959;mso-themecolor:text1;
mso-themetint:166;">The parties of this License Agreement acknowledge that Apple is not a Party to this License Agreement and is not bound by any provisions or obligations with regard to the Application, such as warranty, liability, maintenance and support thereof. <bdt class="question">Cephalopod Studio LLC</bdt>, not Apple, is solely responsible for the licensed Application and the content thereof.</span></div></div><div align="center" class="MsoNormal" style="text-align: left; line-height: 1;"><br></div><div align="center" class="MsoNormal" style="text-align: left; line-height: 150%;"><div class="MsoNormal" data-custom-class="body_text" style="line-height: 1.5;"><bdt data-type="conditional-block"><span style="font-size: 15px;"><bdt data-type="body"><span style="line-height: 16.8667px; color: rgb(89, 89, 89);">This License Agreement may not provide for usage rules for the Application that are in conflict with the latest</span></bdt></span> </bdt><span style="color: rgb(89, 89, 89);"><a data-custom-class="link" href="https://www.apple.com/legal/internet-services/itunes/us/terms.html" rel="noopener noreferrer" target="_blank"><bdt data-type="conditional-block"><span style="font-size: 15px;"><bdt data-type="body"><span style="line-height: 16.8667px;">App Store Terms of Service</span></bdt></span></bdt></a></span><bdt data-type="conditional-block"><span style="font-size: 15px;"><bdt data-type="body"><span style="line-height: 16.8667px; color: rgb(89, 89, 89);">. <bdt class="question">Cephalopod Studio LLC</bdt> acknowledges that it had the opportunity to review said terms and this License Agreement is not conflicting with them.</span></bdt></span></bdt></div><div class="MsoNormal" data-custom-class="body_text" style="line-height: 1;"><br></div><div class="MsoNormal" data-custom-class="body_text" style="line-height: 1.5;"><bdt data-type="conditional-block"><span style="font-size: 15px;"><bdt data-type="body"><span style="line-height: 16.8667px; color: rgb(89, 89, 89);">All rights not expressly granted to You are reserved.</span></bdt></span></bdt></div><div class="MsoNormal" style="line-height: 1.5;"><br></div><div class="MsoNormal" style="line-height: 1.5;"><br></div><div class="MsoNormal" data-custom-class="heading_1" style="line-height: 1.5;"><a name="_4rd71iod99ud"></a><strong><span style="line-height: 115%; font-family: Arial; font-size: 19px;"><span style="font-size: 19px;"><strong>1.</strong><strong> THE APPLICATION</strong></span></span></strong></div></div><div align="center" class="MsoNormal" style="text-align: left; line-height: 1;"><br></div><div align="center" class="MsoNormal" style="text-align: left; line-height: 150%;"><div class="MsoNormal" data-custom-class="body_text" style="line-height: 1.5;"><span style="font-size:11.0pt;line-height:115%;
Arial;mso-fareast-font-family:Calibri;color:#595959;mso-themecolor:text1;
mso-themetint:166;"><span style="font-size:11.0pt;line-height:115%;
Arial;mso-fareast-font-family:Calibri;color:#595959;mso-themecolor:text1;
mso-themetint:166;"><bdt class="question">Pearl: Wellness Reminders</bdt></span> (hereinafter: Application) is a piece of software created to <bdt class="question">assist with mental wellness.</bdt> - and customized for Apple mobile devices. It is used to <bdt class="question">to create meaningful reminders of things that are important to the user.</bdt>.<bdt class="block-component"></bdt></span></span></div><div class="MsoNormal" data-custom-class="body_text" style="line-height: 1.1;"><span style="font-size:11.0pt;line-height:115%;
Arial;mso-fareast-font-family:Calibri;color:#595959;mso-themecolor:text1;
mso-themetint:166;"><span style="font-size:11.0pt;line-height:115%;
Arial;mso-fareast-font-family:Calibri;color:#595959;mso-themecolor:text1;
mso-themetint:166;"><bdt class="statement-end-if-in-editor"><bdt class="block-component"></bdt><bdt class="block-component"></bdt></bdt></span></span></div><div class="MsoNormal" data-custom-class="body_text" style="line-height: 1;"><br></div><div class="MsoNormal" data-custom-class="body_text" style="line-height: 1.5;"><span style="font-size: 15px;">The Application is not tailored to comply with industry-specific regulations (Health Insurance Portability and Accountability Act (HIPAA), Federal Information Security Management Act (FISMA), etc.), so if your interactions would be subjected to such laws, you may not use this Application. You may not use the Application in a way that would violate the Gramm-Leach-Bliley Act (GLBA).</span><bdt class="block-component"></bdt><bdt class="statement-end-if-in-editor"></bdt></span></span></div><div class="MsoNormal" style="line-height: 1.5;"><br></div><div class="MsoNormal" style="line-height: 1.5;"><br></div><div class="MsoNormal" data-custom-class="heading_1" style="line-height: 1.5;"><a name="_vhkegautf00d"></a><strong><span style="line-height: 115%; font-family: Arial; font-size: 19px;"><strong><span style="line-height: 115%; font-family: Arial; font-size: 19px;"><span style="font-size: 19px;"><strong>2. SCOPE OF LICENSE</strong></span></span></strong></span></strong></div><div class="MsoNormal" style="line-height: 115%;"><span style="font-size: 15px;"><span style="line-height: 16.8667px; color: rgb(89, 89, 89);"><span style="line-height: 16.8667px; color: rgb(89, 89, 89);"></span></span> <bdt class="block-component"></bdt></span></div></div><div align="center" class="MsoNormal" style="text-align: left; line-height: 1;"><br></div><div align="center" class="MsoNormal" style="text-align: left; line-height: 150%;"><div class="MsoNormal" data-custom-class="body_text" style="line-height: 1.5;"><span style="font-size: 15px;"><span style="line-height: 16.8667px; color: rgb(89, 89, 89);"><span style="line-height: 16.8667px; color: rgb(89, 89, 89);"><bdt class="block-container if" data-type="if" id="8d4c883b-bc2c-f0b4-da3e-6d0ee51aca13"><bdt data-type="conditional-block"><bdt data-type="body"><span style="color: rgb(89, 89, 89);"><bdt class="block-container if" data-type="if" id="8d4c883b-bc2c-f0b4-da3e-6d0ee51aca13"><bdt data-type="conditional-block"><bdt data-type="body"><span style="color: rgb(89, 89, 89);">2.1  You are given a non-transferable, non-exclusive, non-sublicensable license to install and use the Licensed Application on any Apple-branded Products that You (End-User) own or control and as permitted by the Usage Rules set forth in this section and the App Store Terms of Service, with the exception that such licensed Application may be accessed and used by other accounts associated with You (End-User, The Purchaser) via Family Sharing or volume purchasing.</span></bdt></bdt></bdt></span></bdt></bdt></bdt></span><span style="font-size:11.0pt;line-height:115%;
Arial;mso-fareast-font-family:Calibri;color:#595959;mso-themecolor:text1;
mso-themetint:166;"><span style="font-size:11.0pt;line-height:115%;
Arial;mso-fareast-font-family:Calibri;color:#595959;mso-themecolor:text1;
mso-themetint:166;"><bdt class="statement-end-if-in-editor"><bdt class="block-component"><bdt class="block-component"></bdt></bdt></span></span></span></span></div><div class="MsoNormal" data-custom-class="body_text" style="line-height: 1;"><br></div><div class="MsoNormal" data-custom-class="body_text" style="line-height: 1.5;"><span style="font-size: 11pt; line-height: 16.8667px; color: rgb(89, 89, 89);"><span style="font-size: 11pt; line-height: 16.8667px; color: rgb(89, 89, 89);">2<bdt class="block-container if" data-type="if" id="8d4c883b-bc2c-f0b4-da3e-6d0ee51aca13"><bdt data-type="conditional-block"><bdt data-type="body"><span style="color: rgb(89, 89, 89); font-size: 14.6667px;">.<bdt class="block-container if" data-type="if" id="8d4c883b-bc2c-f0b4-da3e-6d0ee51aca13"><bdt data-type="conditional-block"><bdt data-type="body"><span style="color: rgb(89, 89, 89); font-size: 14.6667px;">2  You may not share or make the Application available to third parties (unless to the degree allowed by the Apple Terms and Conditions, and with <bdt class="question">Cephalopod Studio LLC</bdt>'s prior written consent), sell, rent, lend, lease or otherwise redistribute the Application.<span style="font-size: 15px;"><span style="line-height: 16.8667px; color: rgb(89, 89, 89);"><span style="font-size:11.0pt;line-height:115%;
Arial;mso-fareast-font-family:Calibri;color:#595959;mso-themecolor:text1;
mso-themetint:166;"><span style="font-size:11.0pt;line-height:115%;
Arial;mso-fareast-font-family:Calibri;color:#595959;mso-themecolor:text1;
mso-themetint:166;"><bdt class="statement-end-if-in-editor"></bdt></span></span></span></span><bdt class="block-component"></bdt></span></bdt></bdt></bdt></span></bdt></bdt></bdt></span></span></div><div class="MsoNormal" data-custom-class="body_text" style="line-height: 1;"><br></div><div class="MsoNormal" data-custom-class="body_text" style="line-height: 1.5;"><span style="font-size: 15px;"><span style="line-height: 16.8667px; color: rgb(89, 89, 89);"><span style="line-height: 16.8667px; color: rgb(89, 89, 89);">2<bdt class="block-container if" data-type="if" id="8d4c883b-bc2c-f0b4-da3e-6d0ee51aca13"><bdt data-type="conditional-block"><bdt data-type="body"><span style="color: rgb(89, 89, 89);">.<bdt class="block-container if" data-type="if" id="8d4c883b-bc2c-f0b4-da3e-6d0ee51aca13"><bdt data-type="conditional-block"><bdt data-type="body"><span style="color: rgb(89, 89, 89);">3  You may not reverse engineer, translate, disassemble, integrate, decompile, integrate, remove, modify, combine, create derivative works or updates of, adapt, or attempt to derive the source code of the Application, or any part thereof (except with <bdt class="question">Cephalopod Studio LLC</bdt>'s prior written consent).<span style="font-size: 11pt; line-height: 16.8667px; color: rgb(89, 89, 89);"><span style="font-size: 11pt; line-height: 16.8667px; color: rgb(89, 89, 89);"><bdt class="block-container if" data-type="if" id="8d4c883b-bc2c-f0b4-da3e-6d0ee51aca13"><bdt data-type="conditional-block"><bdt data-type="body"><span style="color: rgb(89, 89, 89); font-size: 14.6667px;"><bdt class="block-container if" data-type="if" id="8d4c883b-bc2c-f0b4-da3e-6d0ee51aca13"><bdt data-type="conditional-block"><bdt data-type="body"><span style="color: rgb(89, 89, 89); font-size: 14.6667px;"><bdt class="statement-end-if-in-editor"><bdt class="block-component"></bdt></bdt></span></bdt></bdt></bdt></span></bdt></bdt></bdt></span></span></span></bdt></bdt></bdt></span></bdt></bdt></bdt></span></span></span></div><div class="MsoNormal" data-custom-class="body_text" style="line-height: 1;"><br></div><div class="MsoNormal" data-custom-class="body_text" style="line-height: 1.5;"><span style="font-size: 15px;"><span style="line-height: 16.8667px; color: rgb(89, 89, 89);"><span style="line-height: 16.8667px; color: rgb(89, 89, 89);">2<bdt class="block-container if" data-type="if" id="8d4c883b-bc2c-f0b4-da3e-6d0ee51aca13"><bdt data-type="conditional-block"><bdt data-type="body"><span style="color: rgb(89, 89, 89);">.<bdt class="block-container if" data-type="if" id="8d4c883b-bc2c-f0b4-da3e-6d0ee51aca13"><bdt data-type="conditional-block"><bdt data-type="body"><span style="color: rgb(89, 89, 89);">4  You may not copy (excluding when expressly authorized by this license and the Usage Rules) or alter the Application or portions thereof. You may create and store copies only on devices that You own or control for backup keeping under the terms of this license, the App Store Terms of Service, and any other terms and conditions that apply to the device or software used. You may not remove any intellectual property notices. You acknowledge that no unauthorized third parties may gain access to these copies at any time.<span style="font-size: 11pt; line-height: 16.8667px; color: rgb(89, 89, 89);"><bdt class="statement-end-if-in-editor"></bdt></span><bdt class="block-component"><bdt class="block-component"></bdt></bdt></span></bdt></bdt></bdt></span></bdt></bdt></bdt></span></span></span></span></bdt></bdt></bdt></span></bdt></bdt></bdt></span></span></span></div><div class="MsoNormal" data-custom-class="body_text" style="line-height: 1;"><br></div><div class="MsoNormal" data-custom-class="body_text" style="line-height: 1.5;"><span style="font-size: 15px;"><span style="line-height: 16.8667px; color: rgb(89, 89, 89);"><span style="line-height: 16.8667px; color: rgb(89, 89, 89);">2<bdt class="block-container if" data-type="if" id="8d4c883b-bc2c-f0b4-da3e-6d0ee51aca13"><bdt data-type="conditional-block"><bdt data-type="body"><span style="color: rgb(89, 89, 89);">.<bdt class="block-container if" data-type="if" id="8d4c883b-bc2c-f0b4-da3e-6d0ee51aca13"><bdt data-type="conditional-block"><bdt data-type="body"><span style="color: rgb(89, 89, 89);">5  Licensor reserves the right to modify the terms and conditions of licensing.<span style="font-size: 11pt; line-height: 16.8667px; color: rgb(89, 89, 89);"><bdt class="statement-end-if-in-editor"><bdt class="block-component"></bdt></span><span style="font-size: 15px;"><span style="line-height: 16.8667px; color: rgb(89, 89, 89);"><span style="line-height: 16.8667px; color: rgb(89, 89, 89);"><bdt class="block-container if" data-type="if" id="8d4c883b-bc2c-f0b4-da3e-6d0ee51aca13"><bdt data-type="conditional-block"><bdt data-type="body"><span style="color: rgb(89, 89, 89);"><bdt class="block-container if" data-type="if" id="8d4c883b-bc2c-f0b4-da3e-6d0ee51aca13"><bdt data-type="conditional-block"><bdt data-type="body"><span style="color: rgb(89, 89, 89);"><span style="color: rgb(89, 89, 89); font-size: 14.6667px;"></span></span></bdt></bdt></bdt></span></bdt></bdt></bdt></span></span></span></span></bdt></bdt></bdt></span></bdt></bdt></bdt></span></span></span></div></div><div align="center" class="MsoNormal" style="text-align: left; line-height: 1.5;"><br></div><div align="center" class="MsoNormal" style="text-align: left; line-height: 150%;"><div class="MsoNormal" style="line-height: 1.5;"><br></div><div class="MsoNormal" data-custom-class="heading_1" style="line-height: 17.25px;"><strong><span style="line-height: 24.5333px; font-size: 19px;"><strong><span style="line-height: 115%; font-family: Arial; font-size: 19px;"><strong><span style="line-height: 115%; font-family: Arial; font-size: 19px;"><span style="font-size: 19px;"><strong>3. TECHNICAL REQUIREMENTS</strong></span></span></strong></span></strong></span></strong></div><div class="MsoNormal" style="line-height:115%;"><span style="font-size: 15px;"><bdt class="block-component"><bdt class="block-component"><bdt class="block-component"><bdt class="block-component"></bdt></bdt></bdt></bdt></span></bdt></bdt></bdt></span></bdt></bdt></bdt></span></span></span></bdt></bdt></bdt></span></bdt></bdt></bdt></span></span></span></bdt></bdt></bdt></span></bdt></bdt></bdt></span></span></span></bdt></bdt></bdt></span></bdt></bdt></bdt></span></span></span></div><div class="MsoNormal" style="line-height:115%;"><bdt class="block-component"><span style="font-size: 15px;"></span></bdt></div><div class="MsoNormal" style="line-height: 1.5;"><br></div><div class="MsoNormal" style="line-height: 1.5;"><br></div><div class="MsoNormal" data-custom-class="heading_1" style="line-height: 17.25px;"><strong><span style="line-height: 24.5333px; font-size: 19px;"><strong><span style="line-height: 115%; font-family: Arial; font-size: 19px;"><strong><span style="line-height: 115%; font-family: Arial; font-size: 19px;"><span style="font-size: 19px;"><strong>4. MAINTENANCE AND SUPPORT</strong></span></span></strong></span></strong></span></strong></div><div class="MsoNormal" style="line-height: 1;"><br></div><div class="MsoNormal" data-custom-class="body_text" style="line-height: 1.5;"><span style="font-size: 11pt; line-height: 16.8667px; color: rgb(89, 89, 89);">4.1  The Licensor is solely responsible for providing any maintenance and support services for this licensed Application. You can reach the Licensor at the email address listed in the App Store Overview for this licensed Application.</span></div><div class="MsoNormal" style="line-height: 1;"><br></div><div class="MsoNormal" data-custom-class="body_text" style="line-height: 1.5;"><span style="line-height: 16.8667px;"><span style="line-height: 16.8667px;"><span style="line-height: 16.8667px;"><span style="line-height: 16.8667px;"><bdt class="block-container if" data-type="if" id="8d4c883b-bc2c-f0b4-da3e-6d0ee51aca13"><bdt data-type="conditional-block"><bdt data-type="body"><bdt class="block-container if" data-type="if" id="8d4c883b-bc2c-f0b4-da3e-6d0ee51aca13"><bdt data-type="conditional-block"><bdt data-type="body"><font color="#595959"><span style="font-size: 15px;">4.2 </span></font><span style="font-size: 15px;"> <bdt class="question">Cephalopod Studio LLC</bdt> </span><font color="#595959"><span style="font-size: 15px;">and the End-User acknowledge that Apple has no obligation whatsoever to furnish any maintenance and support services with respect to the licensed Application.<bdt class="else-block"></bdt></bdt></span></font></bdt></bdt></bdt></bdt></bdt></bdt></span></span></div><div class="MsoNormal" style="line-height:115%;"><span style="font-size: 15px;"><bdt class="block-component"></bdt></span></div><div class="MsoNormal" style="line-height: 1.5;"><br></div><div class="MsoNormal" style="line-height: 1.5;"><br></div><div class="MsoNormal" data-custom-class="heading_1" style="line-height: 17.25px;"><strong><span style="line-height: 24.5333px; font-size: 19px;"><strong><span style="line-height: 115%; font-family: Arial; font-size: 19px;"><strong><span style="line-height: 115%; font-family: Arial; font-size: 19px;"><span style="font-size: 19px;"><strong>5. USE OF DATA</strong></span></span></strong></span></strong></span></strong></div><div class="MsoNormal" style="line-height: 1;"><br></div><div class="MsoNormal" data-custom-class="body_text" style="line-height: 1.5;"><span style="font-size: 15px;"><span style="line-height: 16.8667px; color: rgb(89, 89, 89);"><span style="line-height: 16.8667px; color: rgb(89, 89, 89);"><bdt class="block-container if" data-type="if" id="8d4c883b-bc2c-f0b4-da3e-6d0ee51aca13"><bdt data-type="conditional-block"><bdt data-type="body"><span style="color: rgb(89, 89, 89);"><bdt class="block-container if" data-type="if" id="8d4c883b-bc2c-f0b4-da3e-6d0ee51aca13"><bdt data-type="conditional-block"><bdt data-type="body"><span style="color: rgb(89, 89, 89);">You acknowledge that Licensor will be able to access and adjust Your downloaded licensed Application content and Your personal information, and that Licensor's use of such material and information is subject to Your legal agreements with Licensor and Licensor's privacy policy: <bdt class="question">https://www.cephalopod.studio/work/pearl#Privacy</bdt>.<span style="font-size: 15px;"><bdt class="statement-end-if-in-editor"></bdt></span></span></bdt></bdt></bdt></span></bdt></bdt></bdt></span></span></span></div><div class="MsoNormal" style="line-height: 1.5;"><br></div><div class="MsoNormal" style="line-height: 1.5;"><br></div><div class="MsoNormal" data-custom-class="heading_1" style="line-height: 17.25px;"><strong><span style="line-height: 24.5333px; font-size: 19px;"><strong><span style="line-height: 115%; font-family: Arial; font-size: 19px;"><strong><span style="line-height: 115%; font-family: Arial; font-size: 19px;"><span style="font-size: 19px;"><strong>6. USER GENERATED CONTRIBUTIONS</strong></span></span></strong></span></strong></span></strong></div><div class="MsoNormal" style="line-height: 1;"><br></div><div class="MsoNormal" data-custom-class="body_text" style="line-height: 1.5;"><span style="font-size: 15px;"><span style="line-height: 16.8667px; color: rgb(89, 89, 89);"><span style="line-height: 16.8667px; color: rgb(89, 89, 89);"><bdt class="block-container if" data-type="if" id="8d4c883b-bc2c-f0b4-da3e-6d0ee51aca13"><bdt data-type="conditional-block"><bdt data-type="body"><span style="color: rgb(89, 89, 89);"><bdt class="block-container if" data-type="if" id="8d4c883b-bc2c-f0b4-da3e-6d0ee51aca13"><bdt data-type="conditional-block"><bdt data-type="body"><span style="color: rgb(89, 89, 89);"><bdt class="block-component"></bdt>The Application does not offer users to submit or post content. We may provide you with the opportunity to create, submit, post, display, transmit, perform, publish, distribute, or broadcast content and materials to us or in the Application, including but not limited to text, writings, video, audio, photographs, graphics, comments, suggestions, or personal information or other material (collectively, "Contributions"). Contributions may be viewable by other users of the Application and through third-party websites or applications. As such, any Contributions you transmit may be treated in accordance with the Application Privacy Policy. When you create or make available any Contributions, you thereby represent and warrant that:<span style="font-size: 15px;"><span style="line-height: 16.8667px; color: rgb(89, 89, 89);"><span style="line-height: 16.8667px; color: rgb(89, 89, 89);"><bdt class="block-container if" data-type="if" id="8d4c883b-bc2c-f0b4-da3e-6d0ee51aca13"><bdt data-type="conditional-block"><bdt data-type="body"><span style="color: rgb(89, 89, 89);"><bdt class="block-container if" data-type="if" id="8d4c883b-bc2c-f0b4-da3e-6d0ee51aca13"><bdt data-type="conditional-block"><bdt data-type="body"><span style="color: rgb(89, 89, 89);"><bdt class="statement-end-if-in-editor"></bdt></span></bdt></bdt></bdt></span></bdt></bdt></bdt></span></span></span></span></bdt></bdt></bdt></span></bdt></bdt></bdt></span></span></span></div><div class="MsoNormal" style="line-height: 1;"><br></div><div class="MsoNormal" data-custom-class="body_text" style="line-height: 1.5; margin-left: 20px;"><span style="font-size: 15px;">1. The creation, distribution, transmission, public display, or performance, and the accessing, downloading, or copying of your Contributions do not and will not infringe the proprietary rights, including but not limited to the copyright, patent, trademark, trade secret, or moral rights of any third party.</span></div><div class="MsoNormal" data-custom-class="body_text" style="line-height: 1.5; margin-left: 20px;"><span style="font-size: 15px;">2. You are the creator and owner of or have the necessary licenses, rights, consents, releases, and permissions to use and to authorize us, the Application, and other users of the Application to use your Contributions in any manner contemplated by the Application and these Terms of Use.</span></div><div class="MsoNormal" data-custom-class="body_text" style="line-height: 1.5; margin-left: 20px;"><span style="font-size: 15px;">3. You have the written consent, release, and/or permission of each and every identifiable individual person in your Contributions to use the name or likeness or each and every such identifiable individual person to enable inclusion and use of your Contributions in any manner contemplated by the Application and these Terms of Use.</span></div><div class="MsoNormal" data-custom-class="body_text" style="line-height: 1.5; margin-left: 20px;"><span style="font-size: 15px;">4. Your Contributions are not false, inaccurate, or misleading.</span></div><div class="MsoNormal" data-custom-class="body_text" style="line-height: 1.5; margin-left: 20px;"><span style="font-size: 15px;">5. Your Contributions are not unsolicited or unauthorized advertising, promotional materials, pyramid schemes, chain letters, spam, mass mailings, or other forms of solicitation.</span></div><div class="MsoNormal" data-custom-class="body_text" style="line-height: 1.5; margin-left: 20px;"><span style="font-size: 15px;">6. Your Contributions are not obscene, lewd, lascivious, filthy, violent, harassing, libelous, slanderous, or otherwise objectionable (as determined by us).</span></div><div class="MsoNormal" data-custom-class="body_text" style="line-height: 1.5; margin-left: 20px;"><span style="font-size: 15px;">7. Your Contributions do not ridicule, mock, disparage, intimidate, or abuse anyone.</span></div><div class="MsoNormal" data-custom-class="body_text" style="line-height: 1.5; margin-left: 20px;"><span style="font-size: 15px;">8. Your Contributions are not used to harass or threaten (in the legal sense of those terms) any other person and to promote violence against a specific person or class of people.</span></div><div class="MsoNormal" data-custom-class="body_text" style="line-height: 1.5; margin-left: 20px;"><span style="font-size: 15px;">9. Your Contributions do not violate any applicable law, regulation, or rule.</span></div><div class="MsoNormal" data-custom-class="body_text" style="line-height: 1.5; margin-left: 20px;"><span style="font-size: 15px;">10. Your Contributions do not violate the privacy or publicity rights of any third party.</span></div><div class="MsoNormal" data-custom-class="body_text" style="line-height: 1.5; margin-left: 20px;"><span style="font-size: 15px;">11. Your Contributions do not violate any applicable law concerning child pornography, or otherwise intended to protect the health or well-being of minors.</span></div><div class="MsoNormal" data-custom-class="body_text" style="line-height: 1.5; margin-left: 20px;"><span style="font-size: 15px;">12. Your Contributions do not include any offensive comments that are connected to race, national origin, gender, sexual preference, or physical handicap.</span></div><div class="MsoNormal" data-custom-class="body_text" style="line-height: 1.5; margin-left: 20px;"><span style="font-size: 15px;">13. Your Contributions do not otherwise violate, or link to material that violates, any provision of these Terms of Use, or any applicable law or regulation.</span></div><div class="MsoNormal" style="line-height: 1; margin-left: 20px;"><br></div><div class="MsoNormal" data-custom-class="body_text" style="line-height: 1.5;"><span style="font-size: 15px;">Any use of the Application in violation of the foregoing violates these Terms of Use and may result in, among other things, termination or suspension of your rights to use the Application.</span></div><div class="MsoNormal" style="line-height: 1.5;"><br></div><div class="MsoNormal" style="line-height: 1.5;"><br></div><div class="MsoNormal" data-custom-class="heading_1" style="line-height: 17.25px;"><strong><span style="line-height: 24.5333px; font-size: 19px;"><strong><span style="line-height: 115%; font-family: Arial; font-size: 19px;"><strong><span style="line-height: 115%; font-family: Arial; font-size: 19px;"><span style="font-size: 19px;"><strong>7. CONTRIBUTION LICENSE</strong></span></span></strong></span></strong></span></strong></div><div class="MsoNormal" style="line-height: 1.5;"><bdt class="block-component"></bdt></span></div><div class="MsoNormal" style="line-height: 1;"><br></div><div class="MsoNormal" data-custom-class="body_text" style="line-height: 1.5;"><span style="font-size: 15px;">You agree that we may access, store, process, and use any information and personal data that you provide following the terms of the Privacy Policy and your choices (including settings).</span></div><div class="MsoNormal" style="line-height: 1;"><br></div><div class="MsoNormal" data-custom-class="body_text" style="line-height: 1.5;"><span style="font-size: 15px;">By submitting suggestions of other feedback regarding the Application, you agree that we can use and share such feedback for any purpose without compensation to you.</span></div><div class="MsoNormal" style="line-height: 1;"><br></div><div class="MsoNormal" data-custom-class="body_text" style="line-height: 1.5;"><span style="font-size: 15px;">We do not assert any ownership over your Contributions. You retain full ownership of all of your Contributions and any intellectual property rights or other proprietary rights associated with your Contributions. We are not liable for any statements or representations in your Contributions provided by you in any area in the Application. You are solely responsible for your Contributions to the Application and you expressly agree to exonerate us from any and all responsibility and to refrain from any legal action against us regarding your Contributions.</span><bdt class="statement-end-if-in-editor"></bdt></div><div class="MsoNormal" style="line-height: 1.5;"><br></div><div class="MsoNormal" style="line-height: 1.5;"><br></div><div class="MsoNormal" data-custom-class="heading_1" style="line-height: 17.25px;"><strong><span style="line-height: 24.5333px; font-size: 19px;"><strong><span style="line-height: 115%; font-family: Arial; font-size: 19px;"><strong><span style="line-height: 115%; font-family: Arial; font-size: 19px;"><span style="font-size: 19px;"><strong>8. LIABILITY</strong></span></span></strong></span></strong></span></strong></div><div class="MsoNormal" style="line-height:115%;"><span style="font-size: 15px;"><bdt class="block-component"><bdt class="block-component"></bdt></bdt></span></span></bdt></bdt></bdt></span></bdt></bdt></bdt></span></span></span></div><div class="MsoNormal" style="line-height: 1;"><br></div><div class="MsoNormal" data-custom-class="body_text" style="line-height: 1.5;"><span style="font-size: 15px;"><span style="line-height: 16.8667px; color: rgb(89, 89, 89);"><span style="line-height: 16.8667px; color: rgb(89, 89, 89);"><bdt class="block-container if" data-type="if" id="8d4c883b-bc2c-f0b4-da3e-6d0ee51aca13"><bdt data-type="conditional-block"><bdt data-type="body"><span style="color: rgb(89, 89, 89);"><bdt class="block-container if" data-type="if" id="8d4c883b-bc2c-f0b4-da3e-6d0ee51aca13"><bdt data-type="conditional-block"><bdt data-type="body"><span style="color: rgb(89, 89, 89);"><bdt class="block-component"></bdt>8<bdt class="else-block"></bdt>.1  Licensor takes no accountability or responsibility for any damages caused due to a breach of duties according to Section 2 of this Agreement. To avoid data loss, You are required to make use of backup functions of the Application to the extent allowed by applicable third-party terms and conditions of use. You are aware that in case of alterations or manipulations of the Application, You will not have access to licensed Application.<span style="font-size: 15px;"><span style="line-height: 16.8667px; color: rgb(89, 89, 89);"><span style="line-height: 16.8667px; color: rgb(89, 89, 89);"><bdt class="block-container if" data-type="if" id="8d4c883b-bc2c-f0b4-da3e-6d0ee51aca13"><bdt data-type="conditional-block"><bdt data-type="body"><span style="color: rgb(89, 89, 89);"><bdt class="block-container if" data-type="if" id="8d4c883b-bc2c-f0b4-da3e-6d0ee51aca13"><bdt data-type="conditional-block"><bdt data-type="body"><span style="color: rgb(89, 89, 89);"><span style="font-size: 15px;"><bdt class="statement-end-if-in-editor"><bdt class="statement-end-if-in-editor"><bdt class="block-component"></bdt></bdt></bdt></span></span></bdt></bdt></bdt></span></bdt></bdt></bdt></span></span></span></span></bdt></bdt></bdt></span></bdt></bdt></bdt></span></span></span></span></bdt></bdt></bdt></span></bdt></bdt></bdt></span></span></span></div><div class="MsoNormal" style="line-height: 1.5;"><br></div><div class="MsoNormal" style="line-height: 1.5;"><br></div><div class="MsoNormal" data-custom-class="heading_1" style="line-height: 17.25px;"><strong><span style="line-height: 24.5333px; font-size: 19px;"><strong><span style="line-height: 115%; font-family: Arial; font-size: 19px;"><strong><span style="line-height: 115%; font-family: Arial; font-size: 19px;"><span style="font-size: 19px;"><strong>9. WARRANTY</strong></span></span></strong></span></strong></span></strong></div></div></div><div style="text-align: left; line-height: 1;"><br></div><div class="MsoNormal" data-custom-class="body_text" style="line-height: 1.5;"><span style="font-size: 15px;"><span style="line-height: 16.8667px; color: rgb(89, 89, 89);"><span style="line-height: 16.8667px; color: rgb(89, 89, 89);"><bdt class="block-component"></bdt>9<bdt class="else-block"></bdt>.1  Licensor warrants that the Application is free of spyware, trojan horses, viruses, or any other malware at the time of Your download. Licensor warrants that the Application works as described in the user documentation.</span></span></span></div><div style="line-height: 1;"><br></div><div class="MsoNormal" data-custom-class="body_text" style="line-height: 1.5;"><span style="font-size: 15px;"><span style="line-height: 16.8667px; color: rgb(89, 89, 89);"><span style="line-height: 16.8667px; color: rgb(89, 89, 89);"><bdt class="block-container if" data-type="if" id="8d4c883b-bc2c-f0b4-da3e-6d0ee51aca13"><bdt data-type="conditional-block"><bdt data-type="body"><span style="color: rgb(89, 89, 89);"><bdt class="block-container if" data-type="if" id="8d4c883b-bc2c-f0b4-da3e-6d0ee51aca13"><bdt data-type="conditional-block"><bdt data-type="body"><span style="color: rgb(89, 89, 89);"><bdt class="block-component"></bdt>9<bdt class="else-block"></bdt>.2  No warranty is provided for the Application that is not executable on the device, that has been unauthorizedly modified, handled inappropriately or culpably, combined or installed with inappropriate hardware or software, used with inappropriate accessories, regardless if by Yourself or by third parties, or if there are any other reasons outside of <bdt class="question">Cephalopod Studio LLC</bdt>'s sphere of influence that affect the executability of the Application.</span></bdt></bdt></bdt></span></bdt></bdt></bdt></span></span></span></div><div style="line-height: 1;"><br></div><div class="MsoNormal" data-custom-class="body_text" style="line-height: 1.5;"><span style="font-size: 15px;"><span style="line-height: 16.8667px; color: rgb(89, 89, 89);"><span style="line-height: 16.8667px; color: rgb(89, 89, 89);"><bdt class="block-container if" data-type="if" id="8d4c883b-bc2c-f0b4-da3e-6d0ee51aca13"><bdt data-type="conditional-block"><bdt data-type="body"><span style="color: rgb(89, 89, 89);"><bdt class="block-container if" data-type="if" id="8d4c883b-bc2c-f0b4-da3e-6d0ee51aca13"><bdt data-type="conditional-block"><bdt data-type="body"><span style="color: rgb(89, 89, 89);"><bdt class="block-component"></bdt>9<bdt class="else-block"></bdt>.3  You are required to inspect the Application immediately after installing it and notify <bdt class="question">Cephalopod Studio LLC</bdt> about issues discovered without delay by e-mail provided in</span></bdt></bdt></bdt></span></bdt></bdt></bdt></span></span> </span><a data-custom-class="link" href="#productclaims"><span style="font-size: 15px;"><span style="line-height: 16.8667px; color: rgb(89, 89, 89);"><span style="line-height: 16.8667px; color: rgb(89, 89, 89);"><bdt class="block-container if" data-type="if" id="8d4c883b-bc2c-f0b4-da3e-6d0ee51aca13"><bdt data-type="conditional-block"><bdt data-type="body"><span style="color: rgb(89, 89, 89);"><bdt class="block-container if" data-type="if" id="8d4c883b-bc2c-f0b4-da3e-6d0ee51aca13"><bdt data-type="conditional-block"><bdt data-type="body"><span style="color: rgb(89, 89, 89);">Product Claims</span></bdt></bdt></bdt></span></bdt></bdt></bdt></span></span></span></a><span style="font-size: 15px;"><span style="line-height: 16.8667px; color: rgb(89, 89, 89);"><span style="line-height: 16.8667px; color: rgb(89, 89, 89);"><bdt class="block-container if" data-type="if" id="8d4c883b-bc2c-f0b4-da3e-6d0ee51aca13"><bdt data-type="conditional-block"><bdt data-type="body"><span style="color: rgb(89, 89, 89);"><bdt class="block-container if" data-type="if" id="8d4c883b-bc2c-f0b4-da3e-6d0ee51aca13"><bdt data-type="conditional-block"><bdt data-type="body"></bdt></bdt></bdt></span></bdt></bdt></bdt></span></span></span></div><div style="line-height: 1;"><br></div><div class="MsoNormal" data-custom-class="body_text" style="line-height: 1.5;"><span style="font-size: 15px;"><span style="line-height: 16.8667px; color: rgb(89, 89, 89);"><span style="line-height: 16.8667px; color: rgb(89, 89, 89);"><bdt class="block-container if" data-type="if" id="8d4c883b-bc2c-f0b4-da3e-6d0ee51aca13"><bdt data-type="conditional-block"><bdt data-type="body"><span style="color: rgb(89, 89, 89);"><bdt class="block-container if" data-type="if" id="8d4c883b-bc2c-f0b4-da3e-6d0ee51aca13"><bdt data-type="conditional-block"><bdt data-type="body"><span style="color: rgb(89, 89, 89);"><bdt class="block-component"></bdt>9<bdt class="else-block"></bdt>.4  If we confirm that the Application is defective, <bdt class="question">Cephalopod Studio LLC</bdt> reserves a choice to remedy the situation either by means of solving the defect or substitute delivery.</span></bdt></bdt></bdt></span></bdt></bdt></bdt></span></span></span></div><div style="line-height: 1;"><br></div><div style="text-align: left; line-height: 1;"><bdt class="block-container if" data-type="if" id="36ce5a69-4560-4947-dc72-46e53e2d562a"><bdt data-type="conditional-block"><bdt data-type="body"><div class="MsoNormal" data-custom-class="body_text" style="line-height: 1.5;"><span style="font-size:11.0pt;line-height:115%;font-family:Arial;
Calibri;color:#595959;mso-themecolor:text1;mso-themetint:166;"><span style="font-size:11.0pt;line-height:115%;font-family:Arial;
Calibri;color:#595959;mso-themecolor:text1;mso-themetint:166;"><span style="font-size:11.0pt;line-height:115%;font-family:Arial;
Calibri;color:#595959;mso-themecolor:text1;mso-themetint:166;"><span style="font-size: 11pt; line-height: 16.8667px; color: rgb(89, 89, 89);"><span style="font-size: 15px;"><span style="line-height: 16.8667px; color: rgb(89, 89, 89);"><span style="line-height: 16.8667px; color: rgb(89, 89, 89);"><bdt class="block-component"></bdt>9<bdt class="else-block"></bdt>.5  </span></span></span></span></span></span>In the event of any failure of the Application to conform to any applicable warranty, You may notify the App-Store-Operator, and Your Application purchase price will be refunded to You. To the maximum extent permitted by applicable law, the App-Store-Operator will have no other warranty obligation whatsoever with respect to the App, and any other losses, claims, damages, liabilities, expenses and costs attributable to any negligence to adhere to any warranty.</span></div></bdt></bdt></bdt></div><div style="text-align: left; line-height: 1.5;"><bdt class="block-container if" data-type="if" id="36ce5a69-4560-4947-dc72-46e53e2d562a"><bdt data-type="conditional-block"><bdt data-type="body"><div class="MsoNormal" data-custom-class="body_text" style="line-height: 1;"><br></div></bdt></bdt></bdt><bdt class="block-container if" data-type="if" id="14038561-dad7-be9d-370f-f8aa487b2570"><bdt data-type="conditional-block"><bdt data-type="body"><div class="MsoNormal" data-custom-class="body_text" style="line-height: 1.5;"><span style="font-size:11.0pt;line-height:115%;font-family:Arial;
Calibri;color:#595959;mso-themecolor:text1;mso-themetint:166;"><span style="font-size:11.0pt;line-height:115%;font-family:Arial;
Calibri;color:#595959;mso-themecolor:text1;mso-themetint:166;"><span style="font-size:11.0pt;line-height:115%;font-family:Arial;
Calibri;color:#595959;mso-themecolor:text1;mso-themetint:166;"><span style="font-size: 11pt; line-height: 16.8667px; color: rgb(89, 89, 89);"><span style="font-size: 15px;"><span style="line-height: 16.8667px; color: rgb(89, 89, 89);"><span style="line-height: 16.8667px; color: rgb(89, 89, 89);"><bdt class="block-component"></bdt>9<bdt class="else-block"></bdt>.6</span></span></span></span></span>  </span>If the user is an entrepreneur, any claim based on faults expires after a statutory period of limitation amounting to twelve (12) months after the Application was made available to the user. The statutory periods of limitation given by law apply for users who are consumers.</span></div></bdt></bdt></bdt></div><div style="text-align: left; line-height: 1.5;"><bdt class="block-container if" data-type="if" id="14038561-dad7-be9d-370f-f8aa487b2570"><bdt data-type="conditional-block"><bdt data-type="body"><div class="MsoNormal" style="line-height: 1.5;"><br></div></bdt></bdt></bdt></div><div style="text-align: left; line-height: 1;"><div class="MsoNormal" data-custom-class="heading_1" style="line-height: 115%;"><a name="_wj13r09u8u3u"></a><strong><span id="productclaims" style="line-height: 115%; font-family: Arial; font-size: 19px;"><strong><span style="line-height: 115%; font-family: Arial; font-size: 19px;"><strong><span style="line-height: 24.5333px; font-size: 19px;"><strong><span style="line-height: 24.5333px; font-size: 19px;"><strong><span style="line-height: 24.5333px; font-size: 19px;"><strong><span style="line-height: 115%; font-family: Arial; font-size: 19px;"><strong><span style="line-height: 115%; font-family: Arial; font-size: 19px;"><span style="font-size: 19px;"><strong>10. PRODUCT CLAIMS</strong></span></span></strong></span></strong></span></strong></span></strong></span></strong></span></strong></span></strong></div></div><div style="text-align: left; line-height: 1;"><br></div><div style="text-align: left; line-height: 1;"><div class="MsoNormal" data-custom-class="body_text" style="line-height: 1.5;"><bdt class="question"><span style="font-size: 15px;">Cephalopod Studio LLC</span></bdt><span style="font-size: 15px;"> </span><span style="font-size: 15px; line-height: 115%; font-family: Arial; color: rgb(89, 89, 89);">and the End-User acknow</span><span style="font-size:11.0pt;line-height:115%;font-family:Arial;
Calibri;color:#595959;mso-themecolor:text1;mso-themetint:166;">ledge that <bdt class="question">Cephalopod Studio LLC</bdt>, and not Apple, is responsible for addressing any claims of the End-User or any third party relating to the licensed Application or the End-User’s possession and/or use of that licensed Application, including, but not limited to:</span></div></div><div style="text-align: left; line-height: 1;"><br></div><div style="text-align: left; line-height: 1;"><bdt class="block-container if" data-type="if"><bdt data-type="conditional-block"><bdt data-type="body"><div class="MsoNormal" data-custom-class="body_text" style="line-height: 1.5; margin-left: 20px;"><span style="font-size:11.0pt;line-height:115%;font-family:Arial;
Calibri;color:#595959;mso-themecolor:text1;mso-themetint:166;">(i) product liability claims;</span></div></bdt></bdt></bdt></div><div style="text-align: left; line-height: 1;"><bdt class="block-container if" data-type="if"><bdt data-type="conditional-block"><bdt data-type="body"><div class="MsoNormal" data-custom-class="body_text" style="line-height: 1; margin-left: 20px;"><br></div></bdt></bdt></bdt><bdt class="block-container if" data-type="if"><bdt data-type="conditional-block"><bdt data-type="body"><div class="MsoNormal" data-custom-class="body_text" style="line-height: 1.5; margin-left: 20px;"><span style="font-size:11.0pt;line-height:115%;font-family:Arial;
Calibri;color:#595959;mso-themecolor:text1;mso-themetint:166;">(ii) any claim that the licensed Application fails to conform to any applicable legal or regulatory requirement; and</span></div></bdt></bdt></bdt></div><div style="text-align: left; line-height: 1;"><bdt class="block-container if" data-type="if"><bdt data-type="conditional-block"><bdt data-type="body"><div class="MsoNormal" data-custom-class="body_text" style="line-height: 1; margin-left: 20px;"><br></div></bdt></bdt></bdt><bdt class="block-container if" data-type="if"><bdt data-type="conditional-block"><bdt data-type="body"><div class="MsoNormal" data-custom-class="body_text" style="line-height: 1.5; margin-left: 20px;"><span style="font-size:11.0pt;line-height:115%;font-family:Arial;
Calibri;color:#595959;mso-themecolor:text1;mso-themetint:166;">(iii) claims arising under consumer protection, privacy, or similar legislation, including in connection with Your Licensed Application’s use of the HealthKit and HomeKit.</span></div></bdt></bdt></bdt></div><div style="text-align: left; line-height: 1.5;"><br></div><div style="text-align: left; line-height: 1.5;"><br></div><div style="text-align: left; line-height: 1;"><bdt class="block-container if" data-type="if" id="87a7471d-cf82-1032-fdf8-601d37d7b017"><bdt data-type="conditional-block"><bdt data-type="body"><div class="MsoNormal" data-custom-class="heading_1" style="line-height: 17.25px;"><strong><span style="line-height: 24.5333px; color: black; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial; font-size: 19px;"><strong><span style="line-height: 115%; font-family: Arial; font-size: 19px;"><strong><span style="line-height: 115%; font-family: Arial; font-size: 19px;"><strong><span style="line-height: 24.5333px; font-size: 19px;"><strong><span style="line-height: 24.5333px; font-size: 19px;"><strong><span style="line-height: 24.5333px; font-size: 19px;"><strong><span style="line-height: 115%; font-family: Arial; font-size: 19px;"><strong><span style="line-height: 115%; font-family: Arial; font-size: 19px;"><span style="font-size: 19px;"><strong>11. LEGAL COMPLIANCE</strong></span></span></strong></span></strong></span></strong></span></strong></span></strong></span></strong></span></strong></span></strong></div></bdt></bdt></bdt></div><div style="text-align: left; line-height: 1;"><br></div><div style="text-align: left; line-height: 1;"><bdt class="block-container if" data-type="if"><bdt data-type="conditional-block"><bdt data-type="body"><div class="MsoNormal" data-custom-class="body_text" style="font-size: 14.6667px; line-height: 1.5;"><span style="font-size: 15px; line-height: 16.8667px; color: rgb(89, 89, 89);">You represent and warrant that You are not located in a country that is subject to a U.S. Government embargo, or that has been designated by the U.S. Government as a "terrorist supporting" country; and that You are not listed on any U.S. Government list of prohibited or restricted parties.</span></div></bdt></bdt></bdt></div><div style="line-height: 1.5;"><br></div><div style="line-height: 1.5;"><br></div><div style="text-align: left; line-height: 1;"><bdt class="block-container if" data-type="if" id="923fc4bc-b171-82ba-b6eb-0a13c12d1b6b"><bdt data-type="conditional-block"><bdt data-type="body"><div class="MsoNormal" data-custom-class="heading_1" style="line-height: 115%;"><strong><span style="line-height: 115%; font-family: Arial; font-size: 19px;"><strong><span style="line-height: 24.5333px; color: black; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial; font-size: 19px;"><strong><span style="line-height: 115%; font-family: Arial; font-size: 19px;"><strong><span style="line-height: 115%; font-family: Arial; font-size: 19px;"><strong><span style="line-height: 24.5333px; font-size: 19px;"><strong><span style="line-height: 24.5333px; font-size: 19px;"><strong><span style="line-height: 24.5333px; font-size: 19px;"><strong><span style="line-height: 115%; font-family: Arial; font-size: 19px;"><strong><span style="line-height: 115%; font-family: Arial; font-size: 19px;"><span style="font-size: 19px;"><strong>12. CONTACT INFORMATION</strong></span> </span> </strong> </span> </strong> </span> </strong> </span> </strong> </span> </strong> </span> </strong> </span> </strong> </span> </strong> </span> </strong></div></bdt></bdt></bdt></div><div style="text-align: left; line-height: 1;"><br></div><div style="text-align: left; line-height: 1;"><bdt class="block-container if" data-type="if"><bdt data-type="conditional-block"><bdt data-type="body"><div class="MsoNormal" data-custom-class="body_text" style="line-height: 1.5;"><span style="font-size:11.0pt;line-height:115%;font-family:Arial;
Calibri;color:#595959;mso-themecolor:text1;mso-themetint:166;">For general inquiries, complaints, questions or claims concerning the licensed Application, please contact:</span></div>     <div class="MsoNormal" data-custom-class="body_text" style="line-height: 1.5;"><span style="font-size:11.0pt;line-height:115%;font-family:Arial;
Calibri;color:#595959;mso-themecolor:text1;mso-themetint:166;"><bdt class="question">Matthew</bdt><bdt class="block-component"></bdt></span></div></bdt></bdt></bdt><bdt class="block-container if" data-type="if"><bdt data-type="conditional-block"><bdt data-type="body"><div class="MsoNormal" data-custom-class="body_text" style="line-height: 1.5;"><span style="font-size:11.0pt;line-height:115%;font-family:Arial;
Calibri;color:#595959;mso-themecolor:text1;mso-themetint:166;"><bdt class="question">5900 Balcones Drive, Suite 100</bdt><bdt class="block-component"></bdt></span></div></bdt></bdt></bdt><bdt class="block-container if" data-type="if"><bdt data-type="conditional-block"><bdt data-type="body"><div class="MsoNormal" data-custom-class="body_text" style="line-height: 1.5;"><span style="font-size:11.0pt;line-height:115%;font-family:Arial;
Calibri;color:#595959;mso-themecolor:text1;mso-themetint:166;"><bdt class="question">Austin</bdt>, <bdt class="block-component"></bdt><bdt class="block-component"></bdt><bdt class="question">TX</bdt><bdt class="statement-end-if-in-editor"></bdt><bdt class="block-component"></bdt> <bdt class="question">78731</bdt></span></span></div></bdt></bdt></bdt><bdt class="block-container if" data-type="if"><bdt data-type="conditional-block"><bdt data-type="body"><div class="MsoNormal" data-custom-class="body_text" style="line-height: 1.5;"><span style="font-size: 15px;"><bdt class="block-component"></bdt><bdt class="block-component"></bdt><bdt class="question">United States</bdt><bdt class="statement-end-if-in-editor"></bdt><bdt class="block-component"></bdt><bdt class="else-block"></bdt></span></bdt></span></div></bdt></bdt></bdt><bdt class="block-container if" data-type="if"><bdt data-type="conditional-block"><bdt data-type="body"><div class="MsoNormal" data-custom-class="body_text" style="line-height: 1.5;"><span style="font-size:11.0pt;line-height:115%;font-family:Arial;
Calibri;color:#595959;mso-themecolor:text1;mso-themetint:166;"><bdt class="question">hello@cephalopod.studio</bdt></span></div></bdt></bdt></bdt></div><div style="text-align: left; line-height: 1.5;"><br></div><div style="text-align: left; line-height: 1;"><bdt class="block-container if" data-type="if"><bdt data-type="conditional-block"><bdt data-type="body"><div class="MsoNormal" style="line-height: 1.5;"><br></div></bdt></bdt></bdt> <bdt class="block-container if" data-type="if"><bdt data-type="conditional-block"><bdt data-type="body"><div class="MsoNormal" data-custom-class="heading_1" style="line-height: 1.5;"><strong><span style="line-height: 115%; font-family: Arial; font-size: 19px;"><strong><span style="line-height: 115%; font-family: Arial; font-size: 19px;"><strong><span style="line-height: 24.5333px; color: black; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial; font-size: 19px;"><strong><span style="line-height: 115%; font-family: Arial; font-size: 19px;"><strong><span style="line-height: 115%; font-family: Arial; font-size: 19px;"><strong><span style="line-height: 24.5333px; font-size: 19px;"><strong><span style="line-height: 24.5333px; font-size: 19px;"><strong><span style="line-height: 24.5333px; font-size: 19px;"><strong><span style="line-height: 115%; font-family: Arial; font-size: 19px;"><strong><span style="line-height: 115%; font-family: Arial; font-size: 19px;"><span style="font-size: 19px;"><strong>13. TERMINATION</strong></span></span></strong></span></strong></span></strong></span></strong></span></strong></span></strong></span></strong></span></strong></span></strong></span></strong></div></bdt></bdt></bdt></div><div style="text-align: left; line-height: 1;"><br></div><div style="text-align: left; line-height: 1;"><bdt class="block-container if" data-type="if"><bdt data-type="conditional-block"><bdt data-type="body"><div class="MsoNormal" data-custom-class="body_text" style="line-height: 1.5;"><span style="font-size:11.0pt;line-height:115%;font-family:Arial;
Calibri;color:#595959;mso-themecolor:text1;mso-themetint:166;">The license is valid until terminated by <bdt class="question">Cephalopod Studio LLC</bdt> or by You. Your rights under this license will terminate automatically and without notice from <bdt class="question">Cephalopod Studio LLC</bdt> if You fail to adhere to any term(s) of this license. Upon License termination, You shall stop all use of the Application, and destroy all copies, full or partial, of the Application.</span></div></bdt></bdt></bdt></div><div style="text-align: left; line-height: 1.5;"><bdt class="block-container if" data-type="if"><bdt data-type="conditional-block"><bdt data-type="body"><div class="MsoNormal" style="line-height: 1.5;"><br></div></bdt></bdt></bdt><br></div><div style="text-align: left;"><div class="MsoNormal" data-custom-class="heading_1" style="line-height: 1.5;"><a name="_k3mndam4w6w1"></a><strong><span style="line-height: 115%; font-family: Arial; font-size: 19px;"><strong><span style="line-height: 115%; font-family: Arial; font-size: 19px;"><strong><span style="line-height: 115%; font-family: Arial; font-size: 19px;"><strong><span style="line-height: 24.5333px; color: black; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial; font-size: 19px;"><strong><span style="line-height: 115%; font-family: Arial; font-size: 19px;"><strong><span style="line-height: 115%; font-family: Arial; font-size: 19px;"><strong><span style="line-height: 24.5333px; font-size: 19px;"><strong><span style="line-height: 24.5333px; font-size: 19px;"><strong><span style="line-height: 24.5333px; font-size: 19px;"><strong><span style="line-height: 115%; font-family: Arial; font-size: 19px;"><strong><span style="line-height: 115%; font-family: Arial; font-size: 19px;"><span style="font-size: 19px;"><strong>14. THIRD-PARTY TERMS OF AGREEMENTS AND BENEFICIARY</strong></span></span></strong></span></strong></span></strong></span></strong></span></strong></span></strong></span></strong></span></strong></span></strong></span></strong></span></strong></div></div><div style="text-align: left; line-height: 1;"><br></div><div style="text-align: left;"><div class="MsoNormal" data-custom-class="body_text" style="line-height: 1.5;"><span style="font-size: 15px; line-height: 115%; font-family: Arial; color: rgb(89, 89, 89);"><bdt class="question">Cephalopod Studio LLC</bdt> represents and warrants that <bdt class="question">Cephalopod Studio LLC</bdt> will comply with applicable third-party terms of agreement when using licensed Application.</span></div></div><div style="text-align: left; line-height: 1;"><br></div><div style="text-align: left;"><div class="MsoNormal" data-custom-class="body_text" style="line-height: 1.5;"><span style="font-size:11.0pt;line-height:115%;font-family:Arial;
Calibri;color:#595959;mso-themecolor:text1;mso-themetint:166;">In Accordance with Section 9 of the "Instructions for Minimum Terms of Developer's End-User License Agreement," Apple and Apple's subsidiaries shall be third-party beneficiaries of this End User License Agreement and - upon Your acceptance of the terms and conditions of this license agreement, Apple will have the right (and will be deemed to have accepted the right) to enforce this End User License Agreement against You as a third-party beneficiary thereof.</span></div></div><div style="text-align: left; line-height: 1.5;"><br></div><div style="text-align: left;"><div class="MsoNormal" style="line-height: 1.5;"><br></div><div class="MsoNormal" data-custom-class="heading_1" style="line-height: 1.5;"><a name="_e2dep1hfgltt"></a><strong><span style="line-height: 115%; font-family: Arial;"><span style="font-size: 19px;"><strong><span style="line-height: 115%; font-family: Arial; font-size: 19px;"><strong><span style="line-height: 115%; font-family: Arial; font-size: 19px;"><strong><span style="line-height: 115%; font-family: Arial; font-size: 19px;"><strong><span style="line-height: 24.5333px; color: black; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial; font-size: 19px;"><strong><span style="line-height: 115%; font-family: Arial; font-size: 19px;"><strong><span style="line-height: 115%; font-family: Arial; font-size: 19px;"><strong><span style="line-height: 24.5333px; font-size: 19px;"><strong><span style="line-height: 24.5333px; font-size: 19px;"><strong><span style="line-height: 24.5333px; font-size: 19px;"><strong><span style="line-height: 115%; font-family: Arial; font-size: 19px;"><strong><span style="line-height: 115%; font-family: Arial; font-size: 19px;"><span style="font-size: 19px;"><strong>15. INTELLECTUAL PROPERTY RIGHTS</strong></span></span></strong></span></strong></span></strong></span></strong></span></strong></span></strong></span></strong></span></strong></span></strong></span></strong></span></strong></span></span></strong></div></div><div style="text-align: left; line-height: 1;"><br></div><div style="text-align: left;"><div class="MsoNormal" data-custom-class="body_text" style="line-height: 1.5;"><span style="font-size:11.0pt;line-height:115%;font-family:Arial;
Calibri;color:#595959;mso-themecolor:text1;mso-themetint:166;"><bdt class="question">Cephalopod Studio LLC</bdt> and the End-User acknowledge that, in the event of any third-party claim that the licensed Application or the End-User's possession and use of that licensed Application infringes on the third party's intellectual property rights, <bdt class="question">Cephalopod Studio LLC</bdt>, and not Apple, will be solely responsible for the investigation, defense, settlement and discharge or any such intellectual property infringement claims.</span></div></div><div style="text-align: left; line-height: 1.5;"><br></div><div style="text-align: left;"><div class="MsoNormal" style="line-height: 1.5;"><br></div><div class="MsoNormal" data-custom-class="heading_1" style="line-height: 1.5;"><a name="_p6vbf8atcwhs"></a><strong><span style="line-height: 115%; font-family: Arial;"><span style="font-size: 19px;"><strong><span style="line-height: 115%; font-family: Arial;"><span style="font-size: 19px;"><strong><span style="line-height: 115%; font-family: Arial; font-size: 19px;"><strong><span style="line-height: 115%; font-family: Arial; font-size: 19px;"><strong><span style="line-height: 115%; font-family: Arial; font-size: 19px;"><strong><span style="line-height: 24.5333px; color: black; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial; font-size: 19px;"><strong><span style="line-height: 115%; font-family: Arial; font-size: 19px;"><strong><span style="line-height: 115%; font-family: Arial; font-size: 19px;"><strong><span style="line-height: 24.5333px; font-size: 19px;"><strong><span style="line-height: 24.5333px; font-size: 19px;"><strong><span style="line-height: 24.5333px; font-size: 19px;"><strong><span style="line-height: 115%; font-family: Arial; font-size: 19px;"><strong><span style="line-height: 115%; font-family: Arial; font-size: 19px;"><span style="font-size: 19px;"><strong>16. APPLICABLE LAW</strong></span></span></strong></span></strong></span></strong></span></strong></span></strong></span></strong></span></strong></span></strong></span></strong></span></strong></span></strong></span></span></strong></span></span></strong></div></div><div style="text-align: left; line-height: 1;"><br></div><div style="text-align: left;"><div class="MsoNormal" data-custom-class="body_text" style="line-height: 1.5;"><span style="font-size:11.0pt;line-height:115%;font-family:Arial;
Calibri;color:#595959;mso-themecolor:text1;mso-themetint:166;">This license agreement is governed by the laws of <bdt class="block-component"></bdt><bdt class="block-component"></bdt>the State of <bdt class="question">Texas</bdt><bdt class="statement-end-if-in-editor"></bdt><bdt class="block-component"></bdt> excluding its conflicts of law rules.</span></div></div><div style="text-align: left; line-height: 1.5;"><br></div><div style="text-align: left;"><div class="MsoNormal" style="line-height: 1.5;"><br></div><div class="MsoNormal" data-custom-class="heading_1" style="line-height: 1.5;"><a name="_v5i5tjw62cyw"></a><strong><span style="line-height: 115%; font-family: Arial; font-size: 19px;"><strong><span style="line-height: 115%; font-family: Arial;"><span style="font-size: 19px;"><strong><span style="line-height: 115%; font-family: Arial;"><span style="font-size: 19px;"><strong><span style="line-height: 115%; font-family: Arial; font-size: 19px;"><strong><span style="line-height: 115%; font-family: Arial; font-size: 19px;"><strong><span style="line-height: 115%; font-family: Arial; font-size: 19px;"><strong><span style="line-height: 24.5333px; color: black; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial; font-size: 19px;"><strong><span style="line-height: 115%; font-family: Arial; font-size: 19px;"><strong><span style="line-height: 115%; font-family: Arial; font-size: 19px;"><strong><span style="line-height: 24.5333px; font-size: 19px;"><strong><span style="line-height: 24.5333px; font-size: 19px;"><strong><span style="line-height: 24.5333px; font-size: 19px;"><strong><span style="line-height: 115%; font-family: Arial; font-size: 19px;"><strong><span style="line-height: 115%; font-family: Arial; font-size: 19px;"><span style="font-size: 19px;"><strong>17. MISCELLANEOUS</strong></span></span></strong></span></strong></span></strong></span></strong></span></strong></span></strong></span></strong></span></strong></span></strong></span></strong></span></strong></span></span></strong></span></span></strong></span></strong></div><div class="MsoNormal" style="line-height: 1;"><br></div><div class="MsoNormal" style="line-height: 1;"><bdt class="block-container if" data-type="if" id="4de367b8-a92e-8bf8-bc2e-013cba6337f8"><bdt data-type="conditional-block"><bdt data-type="body"><div class="MsoNormal" data-custom-class="body_text" style="line-height: 1.5;"><span style="font-size:11.0pt;line-height:115%;font-family:Arial;
Calibri;color:#595959;mso-themecolor:text1;mso-themetint:166;"><span style="font-size:11.0pt;line-height:115%;font-family:Arial;
Calibri;color:#595959;mso-themecolor:text1;mso-themetint:166;"><span style="font-size:11.0pt;line-height:115%;font-family:Arial;
Calibri;color:#595959;mso-themecolor:text1;mso-themetint:166;"><span style="font-size:11.0pt;line-height:115%;font-family:Arial;
Calibri;color:#595959;mso-themecolor:text1;mso-themetint:166;"><span style="font-size:11.0pt;line-height:115%;font-family:Arial;
Calibri;color:#595959;mso-themecolor:text1;mso-themetint:166;"><span style="font-size: 11pt; line-height: 16.8667px; color: rgb(89, 89, 89);"><span style="font-size: 15px;"><span style="line-height: 16.8667px; color: rgb(89, 89, 89);"><span style="line-height: 16.8667px; color: rgb(89, 89, 89);"><span style="font-size: 11pt; line-height: 16.8667px; color: rgb(89, 89, 89);"><span style="font-size: 15px;"><span style="line-height: 16.8667px; color: rgb(89, 89, 89);"><span style="line-height: 16.8667px; color: rgb(89, 89, 89);"><bdt class="block-container if" data-type="if" id="8d4c883b-bc2c-f0b4-da3e-6d0ee51aca13"><bdt data-type="conditional-block"><bdt data-type="body"><span style="color: rgb(89, 89, 89);"><bdt class="block-container if" data-type="if" id="8d4c883b-bc2c-f0b4-da3e-6d0ee51aca13"><bdt data-type="conditional-block"><bdt data-type="body"><span style="color: rgb(89, 89, 89);"><span style="font-size: 11pt; line-height: 16.8667px; color: rgb(89, 89, 89);"><span style="font-size: 15px;"><span style="line-height: 16.8667px; color: rgb(89, 89, 89);"><span style="line-height: 16.8667px; color: rgb(89, 89, 89);"><span style="font-size:11.0pt;line-height:115%;font-family:Arial;
Calibri;color:#595959;mso-themecolor:text1;mso-themetint:166;"><span style="font-size:11.0pt;line-height:115%;font-family:Arial;
Calibri;color:#595959;mso-themecolor:text1;mso-themetint:166;"><span style="font-size:11.0pt;line-height:115%;font-family:Arial;
Calibri;color:#595959;mso-themecolor:text1;mso-themetint:166;"><span style="font-size:11.0pt;line-height:115%;font-family:Arial;
Calibri;color:#595959;mso-themecolor:text1;mso-themetint:166;"><span style="font-size:11.0pt;line-height:115%;font-family:Arial;
Calibri;color:#595959;mso-themecolor:text1;mso-themetint:166;"><span style="font-size: 11pt; line-height: 16.8667px; color: rgb(89, 89, 89);"><span style="font-size: 15px;"><span style="line-height: 16.8667px; color: rgb(89, 89, 89);"><span style="line-height: 16.8667px; color: rgb(89, 89, 89);"><bdt class="block-component"></bdt>17<bdt class="else-block"></bdt><span style="font-size: 11pt; line-height: 16.8667px; color: rgb(89, 89, 89);"><span style="font-size: 15px;"><span style="line-height: 16.8667px; color: rgb(89, 89, 89);"><span style="line-height: 16.8667px; color: rgb(89, 89, 89);"><bdt class="block-container if" data-type="if" id="8d4c883b-bc2c-f0b4-da3e-6d0ee51aca13"><bdt data-type="conditional-block"><bdt data-type="body"><span style="color: rgb(89, 89, 89);">.1<bdt class="block-container if" data-type="if" id="8d4c883b-bc2c-f0b4-da3e-6d0ee51aca13"><bdt data-type="conditional-block"><bdt data-type="body"><span style="color: rgb(89, 89, 89);"> </span></bdt> </bdt></bdt></span></bdt></bdt></bdt></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></bdt></bdt></bdt></span></bdt></bdt></bdt></span></span></span></span></span></span></span></span></span></span></span></span>If any of the terms of this agreement should be or become invalid, the validity of the remaining provisions shall not be affected. Invalid terms will be replaced by valid ones formulated in a way that will achieve the primary purpose.</span></div> </bdt> </bdt> </bdt> <bdt class="block-container if" data-type="if">  <bdt data-type="conditional-block">  <bdt data-type="body">     <div class="MsoNormal" data-custom-class="body_text" style="line-height: 1.5;"><span style="font-size: 11pt; line-height: 16.8667px; color: rgb(89, 89, 89);"><span style="font-size:11.0pt;line-height:115%;font-family:Arial;
Calibri;color:#595959;mso-themecolor:text1;mso-themetint:166;"><span style="font-size:11.0pt;line-height:115%;font-family:Arial;
Calibri;color:#595959;mso-themecolor:text1;mso-themetint:166;"><span style="font-size:11.0pt;line-height:115%;font-family:Arial;
Calibri;color:#595959;mso-themecolor:text1;mso-themetint:166;"><span style="font-size:11.0pt;line-height:115%;font-family:Arial;
Calibri;color:#595959;mso-themecolor:text1;mso-themetint:166;"><span style="font-size:11.0pt;line-height:115%;font-family:Arial;
Calibri;color:#595959;mso-themecolor:text1;mso-themetint:166;"><span style="font-size: 11pt; line-height: 16.8667px; color: rgb(89, 89, 89);"><span style="font-size: 15px;"><span style="line-height: 16.8667px; color: rgb(89, 89, 89);"><span style="line-height: 16.8667px; color: rgb(89, 89, 89);"><bdt class="block-component"></bdt>17<bdt class="else-block"></bdt><span style="font-size: 11pt; line-height: 16.8667px; color: rgb(89, 89, 89);"><span style="font-size: 15px;"><span style="line-height: 16.8667px; color: rgb(89, 89, 89);"><span style="line-height: 16.8667px; color: rgb(89, 89, 89);"><bdt class="block-container if" data-type="if" id="8d4c883b-bc2c-f0b4-da3e-6d0ee51aca13"><bdt data-type="conditional-block"><bdt data-type="body"><span style="color: rgb(89, 89, 89);">.2<bdt class="block-container if" data-type="if" id="8d4c883b-bc2c-f0b4-da3e-6d0ee51aca13"><bdt data-type="conditional-block"><bdt data-type="body"><span style="color: rgb(89, 89, 89);"> </span></bdt> </bdt></bdt></span></bdt></bdt></bdt></span></span></span></span></span></span></span></span></span></span></span></span></span>Collateral agreements, changes and amendments are only valid if laid down in writing. The preceding clause can only be waived in writing.<bdt class="block-component"></bdt></span></span></bdt></bdt></bdt></span></span></span></span></span></span></span></span></span></span></span></span></span></span></div> </bdt> </bdt> </bdt></div></div><style>
      ul {
        list-style-type: square;
      }
      ul > li > ul {
        list-style-type: circle;
      }
      ul > li > ul > li > ul {
        list-style-type: square;
      }
      ol li {
        font-family: Arial ;
      }
    </style>
      </div>
      <div style="color: #595959;font-size: 14px;font-family: Arial;padding-top:16px;">
      These terms of use were created using Termly's <a style="color: rgb(48, 48, 241) !important;" href="https://termly.io/products/terms-and-conditions-generator">Terms and Conditions Generator</a>.
      </div></div></div><div class="sqs-block html-block sqs-block-html" data-block-type="2" id="block-61e8cc2ad20f59788cf52317"><div class="sqs-block-content">

<div class="sqs-html-content">
  <p class="" style="white-space:pre-wrap;">&nbsp;</p>
</div>



</div></div></div></div></div>
    </div>
  
  </div>
  
</section>

  
</article>]]></content:encoded>
      <wp:post_name>pearl-terms-and-conditions</wp:post_name>
      <wp:post_type>page</wp:post_type>
      <wp:post_id>20</wp:post_id>
      <wp:status>publish</wp:status>
    </item>
  </channel>
</rss>

